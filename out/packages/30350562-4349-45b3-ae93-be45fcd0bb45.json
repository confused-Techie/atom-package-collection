{
    "name": "atom-typescript",
    "repository": {
        "type": "git",
        "url": "https://github.com/TypeStrong/atom-typescript"
    },
    "downloads": 1973809,
    "stargazers_count": 861,
    "releases": {
        "latest": "14.4.0"
    },
    "versions": {
        "14.4.0": {
            "name": "atom-typescript",
            "version": "14.4.0",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "npm run gen-config-types && cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "prettier --write \"./{lib,scripts,spec}/**/*.{ts,tsx}\"",
                "prettier-check": "prettier --check \"./{lib,scripts,spec}/**/*.{ts,tsx}\"",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check",
                "gen-config-types": "node scripts/typed-config.js lib/typings/atom-config.d.ts && prettier --write lib/typings/atom-config.d.ts"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "autocompletionInclusionPriority": {
                    "description": "Inclusion priority as described in autocomplete-plus docs <https://github.com/atom/autocomplete-plus/wiki/Provider-API>. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20.1
                },
                "autocompletionExcludeLowerPriority": {
                    "description": "Exclude providers with priority lower than inclusion priority. Set to true to exclude builtin suggestions. Requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 20.2
                },
                "autocompletionUseFuzzyFilter": {
                    "description": "Use fuzzy-filter, like the one used by autocomplete-plus by default. If disabled, use a custom strict one",
                    "type": "boolean",
                    "default": true,
                    "order": 20.3
                },
                "autocompletionStrictFilterIgnoreCase": {
                    "description": "When using strict filter, include suggestions with mismatching case",
                    "type": "boolean",
                    "default": true,
                    "order": 20.4
                },
                "autocompletionStrictFilterLongestMatchFirst": {
                    "description": "When using strict filter, offer the longest match first; otherwise, offer the shortest match first",
                    "type": "boolean",
                    "default": true,
                    "order": 20.5
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "includeCompletionsForModuleExports": {
                    "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                    "type": "boolean",
                    "default": false,
                    "order": 66
                },
                "quotePreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "double",
                        "single"
                    ],
                    "default": "auto",
                    "order": 67
                },
                "importModuleSpecifierEnding": {
                    "type": "string",
                    "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                    "enum": [
                        "auto",
                        "minimal",
                        "index",
                        "js"
                    ],
                    "default": "auto",
                    "order": 68
                },
                "importModuleSpecifierPreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "relative",
                        "non-relative",
                        "shortest",
                        "project-relative"
                    ],
                    "default": "auto",
                    "order": 69
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "extensionsFromGrammars": {
                    "title": "Determine file extensions from Atom grammar settings",
                    "description": "Pull recognized file extensions from grammar definitions matching the syntax scopes defined below",
                    "type": "boolean",
                    "default": true,
                    "order": 145
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                },
                "longLineLength": {
                    "title": "Single line length that triggers semantic view large file optimizations",
                    "description": "Will throttle semantic view updates on the file if any one line is longer than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 4000 if that is unavaliable",
                    "type": "integer",
                    "default": 0,
                    "order": 200
                },
                "largeFileLineCount": {
                    "title": "Number of lines that triggers semantic view large file optimizations",
                    "description": "Will throttle semantic view updates on the file if it has more lines than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 500 if that is unavaliable",
                    "type": "integer",
                    "default": 0,
                    "order": 210
                },
                "largeFileNoFollowCursor": {
                    "title": "Disable semantic view focus following text cursor on large files",
                    "description": "If a file is large, as defined by previous options, don't update semantic view focus on text cursor moves; use typescript:reveal-in-semantic-view command instead",
                    "type": "boolean",
                    "default": false,
                    "order": 220
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.2.3"
            },
            "devDependencies": {
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.2",
                "@types/atom": "^1.40.10",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.15",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.168",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.20.0",
                "atom-ide-base": "^2.4.0",
                "atom-package-deps": "^7",
                "atom-select-list": "^0.8.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.3",
                "byline": "^5.0.0",
                "chai": "^4.3.4",
                "cross-env": "7.0.3",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^3.0.0",
                "lodash": "^4.17.21",
                "parcel": "^2.0.0-beta.2",
                "prettier": "^2.3.2",
                "resolve": "^1.20.0",
                "tslib": "^2.1.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "1.0.1"
            },
            "package-deps": [
                [
                    {
                        "name": "linter"
                    },
                    {
                        "name": "atom-ide-ui"
                    }
                ]
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.4.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.4.0",
            "sha": "bace06fdefa9311860832419d4baa9c1b84c9b99"
        },
        "14.3.2": {
            "name": "atom-typescript",
            "version": "14.3.2",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "includeCompletionsForModuleExports": {
                    "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                    "type": "boolean",
                    "default": false,
                    "order": 66
                },
                "quotePreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "double",
                        "single"
                    ],
                    "default": "auto",
                    "order": 67
                },
                "importModuleSpecifierEnding": {
                    "type": "string",
                    "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                    "enum": [
                        "auto",
                        "minimal",
                        "index",
                        "js"
                    ],
                    "default": "auto",
                    "order": 68
                },
                "importModuleSpecifierPreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "relative",
                        "non-relative",
                        "shortest",
                        "project-relative"
                    ],
                    "default": "auto",
                    "order": 69
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "extensionsFromGrammars": {
                    "title": "Determine file extensions from Atom grammar settings",
                    "description": "Pull recognized file extensions from grammar definitions matching the syntax scopes defined below",
                    "type": "boolean",
                    "default": true,
                    "order": 145
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                },
                "longLineLength": {
                    "title": "Single line length that triggers semantic view large file optimizations",
                    "description": "Will throttle semantic view updates on the file if any one line is longer than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 4000 if that is unavaliable",
                    "type": "integer",
                    "default": 0,
                    "order": 200
                },
                "largeFileLineCount": {
                    "title": "Number of lines that triggers semantic view large file optimizations",
                    "description": "Will throttle semantic view updates on the file if it has more lines than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 500 if that is unavaliable",
                    "type": "integer",
                    "default": 0,
                    "order": 210
                },
                "largeFileNoFollowCursor": {
                    "title": "Disable semantic view focus following text cursor on large files",
                    "description": "If a file is large, as defined by previous options, don't update semantic view focus on text cursor moves; use typescript:reveal-in-semantic-view command instead",
                    "type": "boolean",
                    "default": false,
                    "order": 220
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.2.3"
            },
            "devDependencies": {
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.2",
                "@types/atom": "^1.40.10",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.15",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.168",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.20.0",
                "atom-ide-base": "^2.4.0",
                "atom-package-deps": "^7",
                "atom-select-list": "^0.8.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.3",
                "byline": "^5.0.0",
                "chai": "^4.3.4",
                "cross-env": "7.0.3",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^3.0.0",
                "lodash": "^4.17.21",
                "parcel": "^2.0.0-beta.2",
                "prettier": "^2.2.1",
                "resolve": "^1.20.0",
                "ts-node": "^9.1.1",
                "tslib": "^2.1.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "1.0.1"
            },
            "package-deps": [
                [
                    {
                        "name": "linter"
                    },
                    {
                        "name": "atom-ide-ui"
                    }
                ]
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.3.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.3.2",
            "sha": "68ec0d1595acb5cdd4c169cd3831821c24fc27e6"
        },
        "14.3.1": {
            "name": "atom-typescript",
            "version": "14.3.1",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "includeCompletionsForModuleExports": {
                    "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                    "type": "boolean",
                    "default": false,
                    "order": 66
                },
                "quotePreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "double",
                        "single"
                    ],
                    "default": "auto",
                    "order": 67
                },
                "importModuleSpecifierEnding": {
                    "type": "string",
                    "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                    "enum": [
                        "auto",
                        "minimal",
                        "index",
                        "js"
                    ],
                    "default": "auto",
                    "order": 68
                },
                "importModuleSpecifierPreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "relative",
                        "non-relative",
                        "shortest",
                        "project-relative"
                    ],
                    "default": "auto",
                    "order": 69
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "extensionsFromGrammars": {
                    "title": "Determine file extensions from Atom grammar settings",
                    "description": "Pull recognized file extensions from grammar definitions matching the syntax scopes defined below",
                    "type": "boolean",
                    "default": true,
                    "order": 145
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                },
                "longLineLength": {
                    "title": "Single line length that triggers semantic view large file optimizations",
                    "description": "Will throttle semantic view updates on the file if any one line is longer than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 4000 if that is unavaliable",
                    "type": "integer",
                    "default": 0,
                    "order": 200
                },
                "largeFileLineCount": {
                    "title": "Number of lines that triggers semantic view large file optimizations",
                    "description": "Will throttle semantic view updates on the file if it has more lines than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 500 if that is unavaliable",
                    "type": "integer",
                    "default": 0,
                    "order": 210
                },
                "largeFileNoFollowCursor": {
                    "title": "Disable semantic view focus following text cursor on large files",
                    "description": "If a file is large, as defined by previous options, don't update semantic view focus on text cursor moves; use typescript:reveal-in-semantic-view command instead",
                    "type": "boolean",
                    "default": false,
                    "order": 220
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.2.3"
            },
            "devDependencies": {
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.2",
                "@types/atom": "^1.40.10",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.15",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.168",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.20.0",
                "atom-ide-base": "^2.4.0",
                "atom-package-deps": "^7",
                "atom-select-list": "^0.8.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.3",
                "byline": "^5.0.0",
                "chai": "^4.3.4",
                "cross-env": "7.0.3",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^3.0.0",
                "lodash": "^4.17.21",
                "parcel": "^2.0.0-beta.2",
                "prettier": "^2.2.1",
                "resolve": "^1.20.0",
                "ts-node": "^9.1.1",
                "tslib": "^2.1.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "1.0.1"
            },
            "package-deps": [
                [
                    {
                        "name": "linter"
                    },
                    {
                        "name": "atom-ide-ui"
                    }
                ]
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.3.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.3.1",
            "sha": "fdbcdfae635efedfa054e2b1bfc716aa2435078b"
        },
        "14.3.0": {
            "name": "atom-typescript",
            "version": "14.3.0",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "includeCompletionsForModuleExports": {
                    "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                    "type": "boolean",
                    "default": false,
                    "order": 66
                },
                "quotePreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "double",
                        "single"
                    ],
                    "default": "auto",
                    "order": 67
                },
                "importModuleSpecifierEnding": {
                    "type": "string",
                    "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                    "enum": [
                        "auto",
                        "minimal",
                        "index",
                        "js"
                    ],
                    "default": "auto",
                    "order": 68
                },
                "importModuleSpecifierPreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "relative",
                        "non-relative",
                        "shortest",
                        "project-relative"
                    ],
                    "default": "auto",
                    "order": 69
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "extensionsFromGrammars": {
                    "title": "Determine file extensions from Atom grammar settings",
                    "description": "Pull recognized file extensions from grammar definitions matching the syntax scopes defined below",
                    "type": "boolean",
                    "default": true,
                    "order": 145
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                },
                "longLineLength": {
                    "title": "Single line length that triggers semantic view large file optimizations",
                    "description": "Will throttle semantic view updates on the file if any one line is longer than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 4000 if that is unavaliable",
                    "type": "integer",
                    "default": 0,
                    "order": 200
                },
                "largeFileLineCount": {
                    "title": "Number of lines that triggers semantic view large file optimizations",
                    "description": "Will throttle semantic view updates on the file if it has more lines than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 500 if that is unavaliable",
                    "type": "integer",
                    "default": 0,
                    "order": 210
                },
                "largeFileNoFollowCursor": {
                    "title": "Disable semantic view focus following text cursor on large files",
                    "description": "If a file is large, as defined by previous options, don't update semantic view focus on text cursor moves; use typescript:reveal-in-semantic-view command instead",
                    "type": "boolean",
                    "default": false,
                    "order": 220
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.2.3"
            },
            "devDependencies": {
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "@types/atom": "^1.40.10",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.15",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.168",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.20.0",
                "atom-ide-base": "^2.4.0",
                "atom-package-deps": "^7",
                "atom-select-list": "^0.8.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.3",
                "byline": "^5.0.0",
                "chai": "^4.3.4",
                "cross-env": "7.0.3",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^3.0.0",
                "lodash": "^4.17.21",
                "parcel": "^2.0.0-beta.1",
                "prettier": "^2.2.1",
                "resolve": "^1.20.0",
                "ts-node": "^9.1.1",
                "tslib": "^2.1.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "1.0.1"
            },
            "package-deps": [
                [
                    {
                        "name": "linter"
                    },
                    {
                        "name": "atom-ide-ui"
                    }
                ]
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.3.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.3.0",
            "sha": "04b2aa749d8c450e5f0eda71933718cbeeb01044"
        },
        "14.2.1": {
            "name": "atom-typescript",
            "version": "14.2.1",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "includeCompletionsForModuleExports": {
                    "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                    "type": "boolean",
                    "default": false,
                    "order": 66
                },
                "quotePreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "double",
                        "single"
                    ],
                    "default": "auto",
                    "order": 67
                },
                "importModuleSpecifierEnding": {
                    "type": "string",
                    "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                    "enum": [
                        "auto",
                        "minimal",
                        "index",
                        "js"
                    ],
                    "default": "auto",
                    "order": 68
                },
                "importModuleSpecifierPreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "relative",
                        "non-relative",
                        "shortest",
                        "project-relative"
                    ],
                    "default": "auto",
                    "order": 69
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.2.3"
            },
            "devDependencies": {
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "@types/atom": "^1.40.10",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.15",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.168",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.20.0",
                "atom-ide-base": "^2.4.0",
                "atom-package-deps": "^7",
                "atom-select-list": "^0.8.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.3",
                "byline": "^5.0.0",
                "chai": "^4.3.4",
                "cross-env": "7.0.3",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^3.0.0",
                "lodash": "^4.17.21",
                "parcel": "^2.0.0-beta.1",
                "prettier": "^2.2.1",
                "resolve": "^1.20.0",
                "ts-node": "^9.1.1",
                "tslib": "^2.1.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "1.0.1"
            },
            "package-deps": [
                [
                    {
                        "name": "linter"
                    },
                    {
                        "name": "atom-ide-ui"
                    }
                ]
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.2.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.2.1",
            "sha": "cbe950cf10a29318d8567f45e9f73a2019ac69c8"
        },
        "14.2.0": {
            "name": "atom-typescript",
            "version": "14.2.0",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "includeCompletionsForModuleExports": {
                    "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                    "type": "boolean",
                    "default": false,
                    "order": 66
                },
                "quotePreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "double",
                        "single"
                    ],
                    "default": "auto",
                    "order": 67
                },
                "importModuleSpecifierEnding": {
                    "type": "string",
                    "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                    "enum": [
                        "auto",
                        "minimal",
                        "index",
                        "js"
                    ],
                    "default": "auto",
                    "order": 68
                },
                "importModuleSpecifierPreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "relative",
                        "non-relative",
                        "shortest",
                        "project-relative"
                    ],
                    "default": "auto",
                    "order": 69
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.2.3"
            },
            "devDependencies": {
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "@types/atom": "^1.40.10",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.15",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.168",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.20.0",
                "atom-ide-base": "^2.4.0",
                "atom-package-deps": "^7",
                "atom-select-list": "^0.8.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.3",
                "byline": "^5.0.0",
                "chai": "^4.3.4",
                "cross-env": "7.0.3",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^3.0.0",
                "lodash": "^4.17.21",
                "parcel": "^2.0.0-beta.1",
                "prettier": "^2.2.1",
                "resolve": "^1.20.0",
                "ts-node": "^9.1.1",
                "tslib": "^2.1.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "1.0.1"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.2.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.2.0",
            "sha": "7c599bcb5fbf202ffd26470396f329df77445b1b"
        },
        "14.1.2": {
            "name": "atom-typescript",
            "version": "14.1.2",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "includeCompletionsForModuleExports": {
                    "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                    "type": "boolean",
                    "default": false,
                    "order": 66
                },
                "quotePreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "double",
                        "single"
                    ],
                    "default": "auto",
                    "order": 67
                },
                "importModuleSpecifierEnding": {
                    "type": "string",
                    "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                    "enum": [
                        "auto",
                        "minimal",
                        "index",
                        "js"
                    ],
                    "default": "auto",
                    "order": 68
                },
                "importModuleSpecifierPreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "relative",
                        "non-relative"
                    ],
                    "default": "auto",
                    "order": 69
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.0.3"
            },
            "devDependencies": {
                "atom-package-deps": "^6",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.1",
                "lodash": "^4.17.20",
                "resolve": "^1.17.0",
                "tslib": "^2.0.1",
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.12",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.161",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ide-base": "^1.3.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.2",
                "chai": "^4.2.0",
                "prettier": "^2.1.2",
                "ts-node": "^9.0.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5",
                "parcel": "^2.0.0-beta.1",
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "cross-env": "7.0.2"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.1.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.1.2",
            "sha": "6929aa67136eccb4736c958b2a1b36321121c627"
        },
        "14.1.1": {
            "name": "atom-typescript",
            "version": "14.1.1",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "includeCompletionsForModuleExports": {
                    "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                    "type": "boolean",
                    "default": false,
                    "order": 66
                },
                "quotePreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "double",
                        "single"
                    ],
                    "default": "auto",
                    "order": 67
                },
                "importModuleSpecifierEnding": {
                    "type": "string",
                    "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                    "enum": [
                        "auto",
                        "minimal",
                        "index",
                        "js"
                    ],
                    "default": "auto",
                    "order": 68
                },
                "importModuleSpecifierPreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "relative",
                        "non-relative"
                    ],
                    "default": "auto",
                    "order": 69
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.0.3"
            },
            "devDependencies": {
                "atom-package-deps": "^6",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.1",
                "lodash": "^4.17.20",
                "resolve": "^1.17.0",
                "tslib": "^2.0.1",
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.12",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.161",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ide-base": "^1.3.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.2",
                "chai": "^4.2.0",
                "prettier": "^2.1.2",
                "ts-node": "^9.0.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5",
                "parcel": "^2.0.0-beta.1",
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "cross-env": "7.0.2"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.1.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.1.1",
            "sha": "8a39f24d16c792c351ca1361041b276afb137b0c"
        },
        "14.1.0": {
            "name": "atom-typescript",
            "version": "14.1.0",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "includeCompletionsForModuleExports": {
                    "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                    "type": "boolean",
                    "default": false,
                    "order": 66
                },
                "quotePreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "double",
                        "single"
                    ],
                    "default": "auto",
                    "order": 67
                },
                "importModuleSpecifierEnding": {
                    "type": "string",
                    "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                    "enum": [
                        "auto",
                        "minimal",
                        "index",
                        "js"
                    ],
                    "default": "auto",
                    "order": 68
                },
                "importModuleSpecifierPreference": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "relative",
                        "non-relative"
                    ],
                    "default": "auto",
                    "order": 69
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.0.3"
            },
            "devDependencies": {
                "atom-package-deps": "^6",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.1",
                "lodash": "^4.17.20",
                "resolve": "^1.17.0",
                "tslib": "^2.0.1",
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.12",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.161",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ide-base": "^1.3.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.2",
                "chai": "^4.2.0",
                "prettier": "^2.1.2",
                "ts-node": "^9.0.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5",
                "parcel": "^2.0.0-beta.1",
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "cross-env": "7.0.2"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.1.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.1.0",
            "sha": "f05cca40ffee670bbbe68d66e70dc2dd6c22bec6"
        },
        "14.0.3": {
            "name": "atom-typescript",
            "version": "14.0.3",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.0.3"
            },
            "devDependencies": {
                "atom-package-deps": "^6",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.1",
                "lodash": "^4.17.20",
                "resolve": "^1.17.0",
                "tslib": "^2.0.1",
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.12",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.161",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ide-base": "^1.3.0",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.2",
                "chai": "^4.2.0",
                "prettier": "^2.1.2",
                "ts-node": "^9.0.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5",
                "parcel": "^2.0.0-beta.1",
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "cross-env": "7.0.2"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.0.3/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.0.3",
            "sha": "75b320dfb03eaa3d68fda48a120daa81672b7807"
        },
        "14.0.2": {
            "name": "atom-typescript",
            "version": "14.0.2",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.0.3"
            },
            "devDependencies": {
                "atom-package-deps": "^6",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.1",
                "lodash": "^4.17.20",
                "resolve": "^1.17.0",
                "tslib": "^2.0.1",
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.12",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.161",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.2",
                "chai": "^4.2.0",
                "prettier": "^2.1.2",
                "ts-node": "^9.0.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5",
                "parcel": "^2.0.0-beta.1",
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "cross-env": "7.0.2"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.0.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.0.2",
            "sha": "96191232ab500c92e5df5f0e1c3b0efb1fc8fa55"
        },
        "14.0.1": {
            "name": "atom-typescript",
            "version": "14.0.1",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.0.3"
            },
            "devDependencies": {
                "atom-package-deps": "^7.0.1",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.1",
                "lodash": "^4.17.20",
                "resolve": "^1.17.0",
                "tslib": "^2.0.1",
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.12",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.161",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.2",
                "chai": "^4.2.0",
                "prettier": "^2.1.2",
                "ts-node": "^9.0.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5",
                "parcel": "^2.0.0-beta.1",
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "cross-env": "7.0.2"
            },
            "package-deps": [
                {
                    "name": "atom-ide-ui",
                    "minimumVersion": "0.13.0"
                }
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.0.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.0.1",
            "sha": "de11714a6c7a75426abc022c37b1927462dd5ea2"
        },
        "14.0.0": {
            "name": "atom-typescript",
            "version": "14.0.0",
            "main": "./loader.js",
            "bundle": "./dist/main.js",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "tsc": "tsc -p ./lib",
                "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
                "build": "cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "getErrDebounceTimeout": {
                    "title": "getErr Debounce Timeout",
                    "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                    "type": "number",
                    "default": "150",
                    "order": 65
                },
                "occurrenceHighlightDebounceTimeout": {
                    "title": "Occurrence Highlight Debounce Timeout",
                    "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                    "type": "number",
                    "default": "300",
                    "order": 66
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "typescript": "^4.0.3"
            },
            "devDependencies": {
                "atom-package-deps": "^7.0.1",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.1",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.1",
                "lodash": "^4.17.20",
                "resolve": "^1.17.0",
                "tslib": "^2.0.1",
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.12",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.3",
                "@types/lodash": "^4.14.161",
                "@types/mocha": "^8",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "atom-ts-transpiler": "^1.5.2",
                "chai": "^4.2.0",
                "prettier": "^2.1.2",
                "ts-node": "^9.0.0",
                "tslint": "^6.1.3",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5",
                "parcel": "^2.0.0-beta.1",
                "@parcel/transformer-typescript-tsc": "^2.0.0-beta.1",
                "cross-env": "7.0.2"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "targets": {
                "bundle": {
                    "context": "electron-renderer",
                    "engines": {
                        "electron": ">=5.x"
                    },
                    "includeNodeModules": {
                        "atom": false,
                        "electron": false,
                        "typescript": false
                    },
                    "outputFormat": "commonjs",
                    "isLibrary": true
                }
            },
            "atomTranspilers": [
                {
                    "transpiler": "atom-ts-transpiler",
                    "glob": "{!(node_modules)/**/,}*.ts?(x)",
                    "options": {
                        "compilerOptions": {
                            "target": "es2017",
                            "module": "commonjs"
                        },
                        "cacheKeyFiles": [],
                        "verbose": false
                    }
                }
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/14.0.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v14.0.0",
            "sha": "5d4b7bfbdf8ed9d65f70dcf159fba7f10e38225b"
        },
        "13.9.3": {
            "name": "atom-typescript",
            "version": "13.9.3",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^6.0.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.0",
                "lodash": "^4.17.19",
                "resolve": "^1.17.0",
                "tslib": "^2.0.0",
                "typescript": "^3.9.7"
            },
            "devDependencies": {
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.11",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.157",
                "@types/mocha": "^7",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^2.0.5",
                "ts-node": "^8.10.2",
                "tslint": "^6.1.2",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.9.3/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.9.3",
            "sha": "d401c17534a04c7d4e11de4f2de7db3ab9a80842"
        },
        "13.9.2": {
            "name": "atom-typescript",
            "version": "13.9.2",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Check all project files on save",
                    "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^6.0.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.0",
                "lodash": "^4.17.19",
                "resolve": "^1.17.0",
                "tslib": "^2.0.0",
                "typescript": "^3.9.7"
            },
            "devDependencies": {
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.11",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.157",
                "@types/mocha": "^7",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^2.0.5",
                "ts-node": "^8.10.2",
                "tslint": "^6.1.2",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.9.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.9.2",
            "sha": "db9a1806439d7284004e99a1745d8481a7cf963e"
        },
        "13.9.1": {
            "name": "atom-typescript",
            "version": "13.9.1",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Show problems for project",
                    "description": "It will be report all problems in current project when your file saved.",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^6.0.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.0",
                "lodash": "^4.17.19",
                "resolve": "^1.17.0",
                "tslib": "^2.0.0",
                "typescript": "^3.9.7"
            },
            "devDependencies": {
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.11",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.157",
                "@types/mocha": "^7",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^2.0.5",
                "ts-node": "^8.10.2",
                "tslint": "^6.1.2",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.9.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.9.1",
            "sha": "ad4a4c21a9f1cb17fd584a9f1fc194e655cc96a2"
        },
        "13.9.0": {
            "name": "atom-typescript",
            "version": "13.9.0",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Show problems for project",
                    "description": "It will be report all problems in current project when your file saved.",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^6.0.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.0",
                "lodash": "^4.17.19",
                "resolve": "^1.17.0",
                "tslib": "^2.0.0",
                "typescript": "^3.9.7"
            },
            "devDependencies": {
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.11",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.157",
                "@types/mocha": "^7",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^2.0.5",
                "ts-node": "^8.10.2",
                "tslint": "^6.1.2",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.9.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.9.0",
            "sha": "2da836bd02dfde89f68c0fd7874852ebda428b71"
        },
        "13.8.1": {
            "name": "atom-typescript",
            "version": "13.8.1",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Show problems for project",
                    "description": "It will be report all problems in current project when your file saved.",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^6.0.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.0",
                "lodash": "^4.17.19",
                "resolve": "^1.17.0",
                "tslib": "^2.0.0",
                "typescript": "^3.9.7"
            },
            "devDependencies": {
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.11",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.157",
                "@types/mocha": "^7",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^2.0.5",
                "ts-node": "^8.10.2",
                "tslint": "^6.1.2",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.8.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.8.1",
            "sha": "2a131cae505f65903610656702194291cd212d48"
        },
        "13.8.0": {
            "name": "atom-typescript",
            "version": "13.8.0",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Show problems for project",
                    "description": "It will be report all problems in current project when your file saved.",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^6.0.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.0",
                "lodash": "^4.17.19",
                "resolve": "^1.17.0",
                "tslib": "^2.0.0",
                "typescript": "^3.9.7"
            },
            "devDependencies": {
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.11",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.157",
                "@types/mocha": "^7",
                "@types/node": "^12.12.50",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^2.0.5",
                "ts-node": "^8.10.2",
                "tslint": "^6.1.2",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.8.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.8.0",
            "sha": "178f31ccfa83362184c216ed031af8bb2f8d671b"
        },
        "13.7.0": {
            "name": "atom-typescript",
            "version": "13.7.0",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config",
                    "typescript:activate"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Show problems for project",
                    "description": "It will be report all problems in current project when your file saved.",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoreNonSuggestionSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                    "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                    "type": "boolean",
                    "default": "false",
                    "order": 105
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx",
                        ".mjs",
                        ".cjs"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^6.0.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.3.0",
                "lodash": "^4.17.15",
                "resolve": "^1.17.0",
                "tslib": "^2.0.0",
                "typescript": "^3.9.6"
            },
            "devDependencies": {
                "@types/atom": "^1.40.4",
                "@types/byline": "^4.2.32",
                "@types/chai": "^4.2.11",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.157",
                "@types/mocha": "^7",
                "@types/node": "^12",
                "@types/resolve": "^1.17.1",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^2.0.5",
                "ts-node": "^8.10.2",
                "tslint": "^6.1.2",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.7.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.7.0",
            "sha": "293061b7216005395f1af94d70c13e027cf20632"
        },
        "13.6.1": {
            "name": "atom-typescript",
            "version": "13.6.1",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Show problems for project",
                    "description": "It will be report all problems in current project when your file saved.",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^6.0.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.2.1",
                "lodash": "^4.17.15",
                "resolve": "^1.17.0",
                "tslib": "^1.11.1",
                "typescript": "^3.8.3"
            },
            "devDependencies": {
                "@types/atom": "^1.40.2",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.11",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.150",
                "@types/mocha": "^7",
                "@types/node": "^10",
                "@types/resolve": "^1.14.0",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.9.1",
                "tslint": "^6.1.1",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.13.0"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.6.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.6.1",
            "sha": "91aa97362eabbcc654959e074a1ff4bbc5e8b110"
        },
        "13.6.0": {
            "name": "atom-typescript",
            "version": "13.6.0",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Show problems for project",
                    "description": "It will be report all problems in current project when your file saved.",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "ignoredSuggestionDiagnostics": {
                    "title": "Ignore suggestion diagnostics",
                    "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 110
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^5.1.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.2.1",
                "lodash": "^4.17.15",
                "resolve": "^1.17.0",
                "tslib": "^1.11.1",
                "typescript": "^3.8.3"
            },
            "devDependencies": {
                "@types/atom": "^1.40.2",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.11",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.150",
                "@types/mocha": "^7",
                "@types/node": "^10",
                "@types/resolve": "^1.14.0",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.9.1",
                "tslint": "^6.1.1",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.5.3"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.6.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.6.0",
            "sha": "09350eba9c63e6d6e38688e840da867d286295ba"
        },
        "13.5.1": {
            "name": "atom-typescript",
            "version": "13.5.1",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Show problems for project",
                    "description": "It will be report all problems in current project when your file saved.",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^5.1.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.2.0",
                "lodash": "^4.17.15",
                "resolve": "^1.15.1",
                "tslib": "^1.10.0",
                "typescript": "^3.7.5"
            },
            "devDependencies": {
                "@types/atom": "^1.36.2",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.9",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.149",
                "@types/mocha": "^5",
                "@types/node": "^10",
                "@types/resolve": "^1.14.0",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.6.2",
                "tslint": "^6.0.0",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.5.3"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.5.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.5.1",
            "sha": "60f8376995e2db0784d151f1854f77d11dac15ff"
        },
        "13.5.0": {
            "name": "atom-typescript",
            "version": "13.5.0",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "checkAllFilesOnSave": {
                    "title": "Show problems for project",
                    "description": "It will be report all problems in current project when your file saved.",
                    "type": "boolean",
                    "default": "false",
                    "order": 92
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "sigHelpDisplayOnChange": {
                    "title": "Display signature help tooltips on keystroke",
                    "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                    "type": "boolean",
                    "default": true,
                    "order": 63
                },
                "autocompleteParens": {
                    "title": "Autocomplete parentheses",
                    "description": "Automatically insert parentheses after autocompleting functions and methods",
                    "type": "boolean",
                    "default": false,
                    "order": 65
                },
                "tsdkPath": {
                    "title": "Path to default TypeScript SDK",
                    "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                    "type": "string",
                    "default": "",
                    "order": 70
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^5.1.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "jsonc-parser": "^2.2.0",
                "lodash": "^4.17.15",
                "resolve": "^1.15.1",
                "tslib": "^1.10.0",
                "typescript": "^3.7.5"
            },
            "devDependencies": {
                "@types/atom": "^1.36.2",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.9",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.149",
                "@types/mocha": "^5",
                "@types/node": "^10",
                "@types/resolve": "^1.14.0",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.6.2",
                "tslint": "^6.0.0",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.5.3"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.5.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.5.0",
            "sha": "b742aceab849cb50fa899a4065952c5da70c2ac5"
        },
        "13.4.8": {
            "name": "atom-typescript",
            "version": "13.4.8",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^5.1.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "lodash": "^4.17.15",
                "resolve": "^1.13.1",
                "tslib": "^1.10.0",
                "typescript": "^3.7.3"
            },
            "devDependencies": {
                "@types/atom": "^1.36.1",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.6",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.149",
                "@types/mocha": "^5",
                "@types/node": "^10",
                "@types/resolve": "^0.0.8",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.5.4",
                "tslint": "^5.20.1",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.5.3"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.4.8/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.4.8",
            "sha": "08ac192319d5932594604dd5fff94fe59e8da57c"
        },
        "13.4.7": {
            "name": "atom-typescript",
            "version": "13.4.7",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^5.1.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "lodash": "^4.17.15",
                "resolve": "^1.13.1",
                "tslib": "^1.10.0",
                "typescript": "^3.7.3"
            },
            "devDependencies": {
                "@types/atom": "^1.36.1",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.6",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.149",
                "@types/mocha": "^5",
                "@types/node": "^10",
                "@types/resolve": "^0.0.8",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.5.4",
                "tslint": "^5.20.1",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.5.3"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.4.7/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.4.7",
            "sha": "4a1a1c1e3b616b2331ad2ad608798b38d8325cec"
        },
        "13.4.6": {
            "name": "atom-typescript",
            "version": "13.4.6",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^5.1.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "lodash": "^4.17.15",
                "resolve": "^1.13.1",
                "tslib": "^1.10.0",
                "typescript": "^3.7.3"
            },
            "devDependencies": {
                "@types/atom": "^1.36.1",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.6",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.149",
                "@types/mocha": "^5",
                "@types/node": "^10",
                "@types/resolve": "^0.0.8",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.5.4",
                "tslint": "^5.20.1",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.5.3"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.4.6/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.4.6",
            "sha": "b8b4be3c95e0f552339ff647054aa0448463b227"
        },
        "13.4.5": {
            "name": "atom-typescript",
            "version": "13.4.5",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^5.1.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "lodash": "^4.17.15",
                "resolve": "^1.13.1",
                "tslib": "^1.10.0",
                "typescript": "^3.7.3"
            },
            "devDependencies": {
                "@types/atom": "^1.36.1",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.6",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.149",
                "@types/mocha": "^5",
                "@types/node": "^10",
                "@types/resolve": "^0.0.8",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.5.4",
                "tslint": "^5.20.1",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.5.3"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.4.5/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.4.5",
            "sha": "a2e9def29dfdaa45978eac37d3b2feeb50ac3a6c"
        },
        "13.4.4": {
            "name": "atom-typescript",
            "version": "13.4.4",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^5.1.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "lodash": "^4.17.15",
                "resolve": "^1.13.1",
                "tslib": "^1.10.0",
                "typescript": "^3.7.3"
            },
            "devDependencies": {
                "@types/atom": "^1.36.1",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.6",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.149",
                "@types/mocha": "^5",
                "@types/node": "^10",
                "@types/resolve": "^0.0.8",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.5.4",
                "tslint": "^5.20.1",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.5.3"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.4.4/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.4.4",
            "sha": "df4546226284a5a968f6ed654fdea0e312e1108c"
        },
        "13.4.3": {
            "name": "atom-typescript",
            "version": "13.4.3",
            "main": "./dist/main/atomts",
            "preferGlobal": true,
            "description": "The only TypeScript plugin you will ever need.",
            "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
            "activationHooks": [
                "language-typescript:grammar-used"
            ],
            "activationCommands": {
                "atom-workspace": [
                    "typescript:initialize-config"
                ]
            },
            "scripts": {
                "build": "tsc -p ./lib",
                "prettier": "ts-node scripts/prettier.ts write",
                "prettier-check": "ts-node scripts/prettier.ts check",
                "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
                "lint": "tslint --project ./lib && tslint --project ./spec",
                "test": "npm run typecheck && npm run lint && npm run prettier-check"
            },
            "engines": {
                "atom": ">=1.31.0 <2.0.0",
                "node": "*"
            },
            "configSchema": {
                "unusedAsInfo": {
                    "title": "Show unused values with severity info",
                    "description": "Show unused values with severity 'info' instead of 'error'",
                    "type": "boolean",
                    "default": true,
                    "order": 90
                },
                "autocompletionSuggestionPriority": {
                    "description": "Snippets etc have priority of 1. Requires Atom restart",
                    "type": "integer",
                    "default": 3,
                    "order": 20
                },
                "locale": {
                    "title": "TypeScript locale",
                    "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                    "type": "string",
                    "default": "en",
                    "order": 50
                },
                "preferBuiltinTooltips": {
                    "title": "Prefer built-in type tooltips",
                    "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 55
                },
                "preferBuiltinSigHelp": {
                    "title": "Prefer built-in signature help tooltips",
                    "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 56
                },
                "preferBuiltinBusySignal": {
                    "title": "Prefer built-in busy status indicator",
                    "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 57
                },
                "preferBuiltinOccurrenceHighlight": {
                    "title": "Prefer built-in occurrence highligting",
                    "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 58
                },
                "disableAtomIdeDefinitions": {
                    "title": "Disable Atom-IDE Definitions interface",
                    "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                    "type": "boolean",
                    "default": false,
                    "order": 59
                },
                "buildStatusTimeout": {
                    "title": "Build status visibility timeout",
                    "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                    "type": "number",
                    "default": "10",
                    "order": 60
                },
                "showSemanticView": {
                    "title": "Show semantic view",
                    "description": "Show semantic view (outline) for typescript content",
                    "type": "boolean",
                    "default": false,
                    "order": 70
                },
                "tooltipDelay": {
                    "title": "Type tooltip delay",
                    "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                    "type": "integer",
                    "default": 100,
                    "order": 60
                },
                "tooltipPosition": {
                    "title": "Built-in type tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "bottom",
                    "order": 61
                },
                "sigHelpPosition": {
                    "title": "Built-in signature help tooltip position",
                    "description": "Above or below cursor position",
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom"
                    ],
                    "default": "top",
                    "order": 62
                },
                "ignoredDiagnosticCodes": {
                    "title": "Ignore diagnostics",
                    "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "order": 80
                },
                "ignoreUnusedSuggestionDiagnostics": {
                    "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                    "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                    "type": "boolean",
                    "default": "false",
                    "order": 100
                },
                "suppressAllDiagnostics": {
                    "title": "Suppress all diagnostics",
                    "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                    "type": "boolean",
                    "default": "false",
                    "order": 120
                },
                "tsFileExtensions": {
                    "title": "TypeScript file extensions",
                    "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".ts",
                        ".tst",
                        ".tsx"
                    ],
                    "order": 130
                },
                "jsFileExtensions": {
                    "title": "JavaScript file extensions",
                    "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".js",
                        ".jst",
                        ".jsx"
                    ],
                    "order": 140
                },
                "tsSyntaxScopes": {
                    "title": "TypeScript syntax scopes",
                    "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.ts",
                        "source.tsx",
                        "typescript"
                    ],
                    "order": 150
                },
                "jsSyntaxScopes": {
                    "title": "JavaScript syntax scopes",
                    "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "source.js",
                        "source.jsx",
                        "javascript"
                    ],
                    "order": 160
                },
                "allowJS": {
                    "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                    "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                    "type": "boolean",
                    "default": false,
                    "order": 170
                },
                "tsserverInstancePerTsconfig": {
                    "title": "Spawn separate tsserver instance for each tsconfig.json",
                    "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                    "type": "boolean",
                    "default": false,
                    "order": 180
                }
            },
            "deserializers": {
                "atomts-semantic-view/SemanticView": "deserializeSemanticView"
            },
            "consumedServices": {
                "linter-indie": {
                    "versions": {
                        "^2.0.0": "consumeLinter"
                    }
                },
                "status-bar": {
                    "versions": {
                        "^1.0.0": "consumeStatusBar"
                    }
                },
                "datatip": {
                    "versions": {
                        "0.1.0": "consumeDatatipService"
                    }
                },
                "signature-help": {
                    "versions": {
                        "0.1.0": "consumeSignatureHelp"
                    }
                },
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                }
            },
            "providedServices": {
                "autocomplete.provider": {
                    "versions": {
                        "2.0.0": "provideAutocomplete"
                    }
                },
                "hyperclick": {
                    "versions": {
                        "0.1.0": "provideHyperclick"
                    }
                },
                "intentions:list": {
                    "versions": {
                        "1.0.0": "provideIntentions"
                    }
                },
                "intentions:highlight": {
                    "versions": {
                        "1.0.0": "provideIntentionsHighlight"
                    }
                },
                "code-actions": {
                    "versions": {
                        "0.1.0": "provideCodeActions"
                    }
                },
                "find-references": {
                    "versions": {
                        "0.1.0": "provideReferences"
                    }
                },
                "outline-view": {
                    "versions": {
                        "0.1.0": "provideOutlines"
                    }
                },
                "definitions": {
                    "versions": {
                        "0.1.0": "provideDefinitions"
                    }
                },
                "code-highlight": {
                    "versions": {
                        "0.1.0": "provideCodeHighlight"
                    }
                }
            },
            "homepage": "https://github.com/TypeStrong/atom-typescript",
            "repository": {
                "type": "git",
                "url": "https://github.com/TypeStrong/atom-typescript.git"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/TypeStrong/atom-typescript/issues"
            },
            "dependencies": {
                "atom-package-deps": "^5.1.0",
                "atom-select-list": "^0.7.2",
                "byline": "^5.0.0",
                "etch": "^0.14.0",
                "fs-plus": "^3.1.1",
                "fuzzaldrin": "^2.1.0",
                "lodash": "^4.17.15",
                "resolve": "^1.13.1",
                "tslib": "^1.10.0",
                "typescript": "^3.7.3"
            },
            "devDependencies": {
                "@types/atom": "^1.36.1",
                "@types/byline": "^4.2.31",
                "@types/chai": "^4.2.6",
                "@types/fs-plus": "^3.0.1",
                "@types/fuzzaldrin": "^2.1.2",
                "@types/lodash": "^4.14.149",
                "@types/mocha": "^5",
                "@types/node": "^10",
                "@types/resolve": "^0.0.8",
                "atom-ts-spec-runner": "^1.1.1",
                "chai": "^4.2.0",
                "prettier": "^1.19.1",
                "ts-node": "^8.5.4",
                "tslint": "^5.20.1",
                "tslint-use-atom-disposables": "0.0.1",
                "typescript-tslint-plugin": "0.5.5"
            },
            "package-deps": [
                "atom-ide-ui:0.5.3"
            ],
            "keywords": [
                "typescript",
                "javascript",
                "html"
            ],
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-typescript/versions/13.4.3/tarball"
            },
            "tarball_url": "https://api.github.com/repos/TypeStrong/atom-typescript/tarball/refs/tags/v13.4.3",
            "sha": "bae4b92b961b3626d0b52f1e88e959bd06470fe1"
        }
    },
    "readme": "# Atom TypeScript\n\n[![Join the chat at\nhttps://gitter.im/TypeStrong/atom-typescript](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/TypeStrong/atom-typescript?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nJavaScript developers can now just open a `.ts` file and start hacking\naway like they are used to. No `grunt`, no `Visual Studio`. Just pure\ncoding.\n\n**NOTE**: When updating to **v12**, make sure `language-typescript` core\npackage is **enabled**. We're discontinuing our own grammar in favor of\n`language-typescript`. Both are very similar and are basically\nMicrosoft's TextMate grammar repackaged, and there's little reason to\nbundle our own if there's one available by default.\n\n**NOTE**: This branch contains a major rewrite (**v11**) of the\n`atom-typescript` plugin that is lighter and faster, but lacks a few\nmajor features that you might miss. The previous version is still\navailable in the `legacy` branch and will continue to receive minor\nbugfixes. However, I wouldn't count on any new developments for that version.\n\n## Installation\n\n1.  Install [atom](https://atom.io).\n2.  Install dependencies (see below).\n3.  `apm install atom-typescript` (`apm` needs `git` in your path).\n4.  Fire up atom. Open a TypeScript file.\n\n**Dependencies**:\n\nAtom-TypeScript relies on some external packages for providing some of\nits GUI. You basically have two options.\n\n**Option 1**: Install `atom-ide-ui` package.\n\n**Option 2**: Install the following packages:\n\n-   `linter`\n-   `linter-ui-default`\n-   `hyperclick`\n-   `intentions`\n\n**Additional Notes**: [Some packages we\nlove](https://github.com/TypeStrong/atom-typescript/blob/master/docs/packages.md).\n\n## Reviews\n\n*Featured on the TypeScript home page under tools\nhttp://www.typescriptlang.org/* and [demoed by **Anders\nHejlsberg**](https://twitter.com/schwarty/status/593858817894404096).\n\n\"I was shocked at how good it felt to poke around on the compiler with\nit.\" [Jonathan Turner](https://twitter.com/jntrnr) \n\"And guess what, it\nworked perfectly. Like everything else! Faster than Visual Studio!\"\n[Daniel\nEarwicker](http://stackoverflow.com/users/27423/daniel-earwicker) \n\"It's\na thing of beauty - they had me at '*Type information on hover*'.\nDiscovering `tsconfig.json` support as well was just an enormous bonus.\"\n[John Reilly](https://twitter.com/johnny_reilly)\n\"This may be your best\noption for editing TypeScript at the moment - very nice!\" [Rasmus\nSchultz](https://twitter.com/mindplaydk)\n\n[*Add yours!*](https://github.com/TypeStrong/atom-typescript/issues/66)\n\n# Features\n\n-   Autocomplete\n-   Live error analysis\n-   Type information on hover\n-   Compile on save\n-   Project Context Support (`tsconfig.json`)\n-   Project Build Support\n-   `package.json` Support\n-   Goto Declaration\n-   Find References\n-   Semantic view\n-   Block comment and uncomment\n-   Rename refactoring\n-   Common Snippets\n-   Alternative to symbols-view\n\n# FAQ\n\nLocated online:\nhttps://github.com/TypeStrong/atom-typescript/blob/master/docs/faq.md\n\n------------------------------------------------------------------------\n\n# Feature Details\n\n## Auto Complete\n\nInternally using AutoComplete+. Just start typing and hints will show\nup. Or you can explicitly trigger it using `ctrl+space` or `cmd+space`.\nPress `tab` to make a selection.\n\n## Type information on hover\n\nJust hover\n\n![you definitely get the\npoint](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/hover.png)\n\n## Compile on save\n\nWhen `\"compileOnSave\": true` is set in `tsconfig.json`, TypeScript files\nwill be compiled and saved automatically. The compiler does its best to\nemit something, even if there are semantic errors in the file.\n\n## Project Support\n\n`atom-typescript` supports all the same options the TypeScript compiler\ndoes as it's using it behind the scenes to do all of the heavy lifting.\nIn fact, `atom-typescript` will use the exact version of TypeScript you\nhave installed in your `node_modules` directory.\n\n## Format Code\n\nShortcut: `ctrl+alt+l` or `cmd+alt+l`. Will format just the selection\nif you have something selected otherwise it will format the entire file.\n\n## Go to Declaration\n\nShortcut: `F12`. Will open the *first* declaration of the said item for\nnow. (Note: some people call it Go to Definition)\n\n## Find References\n\nShortcut `shift+F12`. Also called *find usages*.\n\n## Semantic View\n\nA bird's eye view of the current file. Use command\n`toggle semantic view`. The view updates while you edit the code. You\ncan also click to jump to any portion of the file.\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/semanticView.png)\n\n## Refactoring\n\n### Rename\n\n`f2` to initiate rename. `enter` to commit and `esc` to cancel.\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/renameRefactoring.png)\n\n## Quick Fix\n\nShortcut : `ctrl+enter` on a Mac and `alt+enter` for Windows and Linux\nwhen using `intentions`, `alt+a` when using `atom-ide-ui`. Currently\navailable codefixes:\nhttps://github.com/Microsoft/TypeScript/tree/master/src/services/codefixes\n\n## Alternative to symbols-view\n\nAtom's `symbols-view` package only works with `ctags`. This is obviously\nunsuitable for TypeScript. Hence, we provide two commands to emulate\n`symbols-view`:\n\n-   `typescript:toggle-file-symbols`\n-   `typescript:toggle-project-symbols`\n\nBoth are bound to the same keys as corresponding `symbols-view` commands\nby default:\n\n-   `ctrl-r` and `ctrl-shift-r` on PC\n-   `cmd-r` and `cmd-shift-r` on Mac\n\n## Contributing\n\nLook at\n[CONTRIBUTING.md](https://github.com/TypeStrong/atom-typescript/blob/master/CONTRIBUTING.md)\nfor curiosity. We work hard to keep the code as approachable as possible\nand are highly keen on helping you help us.\n\n## Changelog\n\nBreaking changes [available\nonline](https://github.com/TypeStrong/atom-typescript/blob/master/CHANGELOG.md).\n",
    "metadata": {
        "name": "atom-typescript",
        "version": "14.4.0",
        "main": "./loader.js",
        "bundle": "./dist/main.js",
        "preferGlobal": true,
        "description": "The only TypeScript plugin you will ever need.",
        "atomTestRunner": "./node_modules/atom-ts-spec-runner/runner.js",
        "activationHooks": [
            "language-typescript:grammar-used"
        ],
        "activationCommands": {
            "atom-workspace": [
                "typescript:initialize-config",
                "typescript:activate"
            ]
        },
        "scripts": {
            "tsc": "tsc -p ./lib",
            "dev": "cross-env NODE_ENV=development parcel watch --target bundle lib/main/atomts.ts",
            "build": "npm run gen-config-types && cross-env NODE_ENV=production parcel build --target bundle lib/main/atomts.ts",
            "prettier": "prettier --write \"./{lib,scripts,spec}/**/*.{ts,tsx}\"",
            "prettier-check": "prettier --check \"./{lib,scripts,spec}/**/*.{ts,tsx}\"",
            "typecheck": "tsc --noEmit -p ./lib && tsc --noEmit -p ./scripts && tsc --noEmit -p ./spec",
            "lint": "tslint --project ./lib && tslint --project ./spec",
            "test": "npm run typecheck && npm run lint && npm run prettier-check",
            "gen-config-types": "node scripts/typed-config.js lib/typings/atom-config.d.ts && prettier --write lib/typings/atom-config.d.ts"
        },
        "engines": {
            "atom": ">=1.31.0 <2.0.0",
            "node": "*"
        },
        "configSchema": {
            "unusedAsInfo": {
                "title": "Show unused values with severity info",
                "description": "Show unused values with severity 'info' instead of 'error'",
                "type": "boolean",
                "default": true,
                "order": 90
            },
            "checkAllFilesOnSave": {
                "title": "Check all project files on save",
                "description": "Enabling this will report all problems in the current project when the current file is saved (this can be slow if the project is big!).",
                "type": "boolean",
                "default": "false",
                "order": 92
            },
            "autocompletionSuggestionPriority": {
                "description": "Snippets etc have priority of 1. Requires Atom restart",
                "type": "integer",
                "default": 3,
                "order": 20
            },
            "autocompletionInclusionPriority": {
                "description": "Inclusion priority as described in autocomplete-plus docs <https://github.com/atom/autocomplete-plus/wiki/Provider-API>. Requires Atom restart",
                "type": "integer",
                "default": 3,
                "order": 20.1
            },
            "autocompletionExcludeLowerPriority": {
                "description": "Exclude providers with priority lower than inclusion priority. Set to true to exclude builtin suggestions. Requires Atom restart",
                "type": "boolean",
                "default": false,
                "order": 20.2
            },
            "autocompletionUseFuzzyFilter": {
                "description": "Use fuzzy-filter, like the one used by autocomplete-plus by default. If disabled, use a custom strict one",
                "type": "boolean",
                "default": true,
                "order": 20.3
            },
            "autocompletionStrictFilterIgnoreCase": {
                "description": "When using strict filter, include suggestions with mismatching case",
                "type": "boolean",
                "default": true,
                "order": 20.4
            },
            "autocompletionStrictFilterLongestMatchFirst": {
                "description": "When using strict filter, offer the longest match first; otherwise, offer the shortest match first",
                "type": "boolean",
                "default": true,
                "order": 20.5
            },
            "locale": {
                "title": "TypeScript locale",
                "description": "Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart",
                "type": "string",
                "default": "en",
                "order": 50
            },
            "preferBuiltinTooltips": {
                "title": "Prefer built-in type tooltips",
                "description": "Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart",
                "type": "boolean",
                "default": false,
                "order": 55
            },
            "preferBuiltinSigHelp": {
                "title": "Prefer built-in signature help tooltips",
                "description": "Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart",
                "type": "boolean",
                "default": false,
                "order": 56
            },
            "preferBuiltinBusySignal": {
                "title": "Prefer built-in busy status indicator",
                "description": "Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart",
                "type": "boolean",
                "default": false,
                "order": 57
            },
            "preferBuiltinOccurrenceHighlight": {
                "title": "Prefer built-in occurrence highligting",
                "description": "Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart",
                "type": "boolean",
                "default": false,
                "order": 58
            },
            "disableAtomIdeDefinitions": {
                "title": "Disable Atom-IDE Definitions interface",
                "description": "Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart",
                "type": "boolean",
                "default": false,
                "order": 59
            },
            "buildStatusTimeout": {
                "title": "Build status visibility timeout",
                "description": "How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever",
                "type": "number",
                "default": "10",
                "order": 60
            },
            "getErrDebounceTimeout": {
                "title": "getErr Debounce Timeout",
                "description": "During on-change check, how long to wait for new changes until checking for errors, in ms",
                "type": "number",
                "default": "150",
                "order": 65
            },
            "occurrenceHighlightDebounceTimeout": {
                "title": "Occurrence Highlight Debounce Timeout",
                "description": "How long to wait before showing ocurrence highlights, in ms; low values may cause slowdowns on large projects",
                "type": "number",
                "default": "300",
                "order": 66
            },
            "showSemanticView": {
                "title": "Show semantic view",
                "description": "Show semantic view (outline) for typescript content",
                "type": "boolean",
                "default": false,
                "order": 70
            },
            "tooltipDelay": {
                "title": "Type tooltip delay",
                "description": "Delay before type tooltip is shown on mouse hover in milliseconds",
                "type": "integer",
                "default": 100,
                "order": 60
            },
            "tooltipPosition": {
                "title": "Built-in type tooltip position",
                "description": "Above or below cursor position",
                "type": "string",
                "enum": [
                    "top",
                    "bottom"
                ],
                "default": "bottom",
                "order": 61
            },
            "sigHelpPosition": {
                "title": "Built-in signature help tooltip position",
                "description": "Above or below cursor position",
                "type": "string",
                "enum": [
                    "top",
                    "bottom"
                ],
                "default": "top",
                "order": 62
            },
            "sigHelpDisplayOnChange": {
                "title": "Display signature help tooltips on keystroke",
                "description": "Will automatically show signature help (if any) after `(`, `,`, `<` keystroke",
                "type": "boolean",
                "default": true,
                "order": 63
            },
            "autocompleteParens": {
                "title": "Autocomplete parentheses",
                "description": "Automatically insert parentheses after autocompleting functions and methods",
                "type": "boolean",
                "default": false,
                "order": 65
            },
            "includeCompletionsForModuleExports": {
                "description": "(EXPERIMENTAL) If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
                "type": "boolean",
                "default": false,
                "order": 66
            },
            "quotePreference": {
                "type": "string",
                "enum": [
                    "auto",
                    "double",
                    "single"
                ],
                "default": "auto",
                "order": 67
            },
            "importModuleSpecifierEnding": {
                "type": "string",
                "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
                "enum": [
                    "auto",
                    "minimal",
                    "index",
                    "js"
                ],
                "default": "auto",
                "order": 68
            },
            "importModuleSpecifierPreference": {
                "type": "string",
                "enum": [
                    "auto",
                    "relative",
                    "non-relative",
                    "shortest",
                    "project-relative"
                ],
                "default": "auto",
                "order": 69
            },
            "tsdkPath": {
                "title": "Path to default TypeScript SDK",
                "description": "TypeScript SDK found at the specified path will be preferred over the bundled one if TypeScript is not installed in node_modules as a project dependency. Ignored when empty",
                "type": "string",
                "default": "",
                "order": 70
            },
            "ignoredDiagnosticCodes": {
                "title": "Ignore diagnostics",
                "description": "List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "default": [],
                "order": 80
            },
            "ignoreUnusedSuggestionDiagnostics": {
                "title": "Ignore 'unused parameter/variable/etc' suggestion diagnostics",
                "description": "When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out",
                "type": "boolean",
                "default": "false",
                "order": 100
            },
            "ignoreNonSuggestionSuggestionDiagnostics": {
                "title": "Ignore suggestion diagnostics that are not actionable suggestions",
                "description": "TypeScript server reports some error-type diagnostics on the suggestion channel. Enabling this option will suppress those",
                "type": "boolean",
                "default": "false",
                "order": 105
            },
            "ignoredSuggestionDiagnostics": {
                "title": "Ignore suggestion diagnostics",
                "description": "List of suggestion-type diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "default": [],
                "order": 110
            },
            "suppressAllDiagnostics": {
                "title": "Suppress all diagnostics",
                "description": "The package will not report any problems with TypeScript. Use only if you know what you are doing",
                "type": "boolean",
                "default": "false",
                "order": 120
            },
            "tsFileExtensions": {
                "title": "TypeScript file extensions",
                "description": "Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "default": [
                    ".ts",
                    ".tst",
                    ".tsx"
                ],
                "order": 130
            },
            "jsFileExtensions": {
                "title": "JavaScript file extensions",
                "description": "Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "default": [
                    ".js",
                    ".jst",
                    ".jsx",
                    ".mjs",
                    ".cjs"
                ],
                "order": 140
            },
            "extensionsFromGrammars": {
                "title": "Determine file extensions from Atom grammar settings",
                "description": "Pull recognized file extensions from grammar definitions matching the syntax scopes defined below",
                "type": "boolean",
                "default": true,
                "order": 145
            },
            "tsSyntaxScopes": {
                "title": "TypeScript syntax scopes",
                "description": "Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "default": [
                    "source.ts",
                    "source.tsx",
                    "typescript"
                ],
                "order": 150
            },
            "jsSyntaxScopes": {
                "title": "JavaScript syntax scopes",
                "description": "Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing",
                "type": "array",
                "items": {
                    "type": "string"
                },
                "default": [
                    "source.js",
                    "source.jsx",
                    "javascript"
                ],
                "order": 160
            },
            "allowJS": {
                "title": "Enable Atom-Typescript for JavaScript files (experimental)",
                "description": "Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig",
                "type": "boolean",
                "default": false,
                "order": 170
            },
            "tsserverInstancePerTsconfig": {
                "title": "Spawn separate tsserver instance for each tsconfig.json",
                "description": "This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.",
                "type": "boolean",
                "default": false,
                "order": 180
            },
            "longLineLength": {
                "title": "Single line length that triggers semantic view large file optimizations",
                "description": "Will throttle semantic view updates on the file if any one line is longer than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 4000 if that is unavaliable",
                "type": "integer",
                "default": 0,
                "order": 200
            },
            "largeFileLineCount": {
                "title": "Number of lines that triggers semantic view large file optimizations",
                "description": "Will throttle semantic view updates on the file if it has more lines than this number; value of 0 means getting the value from the corresponding setting in linter-ui-default, or 500 if that is unavaliable",
                "type": "integer",
                "default": 0,
                "order": 210
            },
            "largeFileNoFollowCursor": {
                "title": "Disable semantic view focus following text cursor on large files",
                "description": "If a file is large, as defined by previous options, don't update semantic view focus on text cursor moves; use typescript:reveal-in-semantic-view command instead",
                "type": "boolean",
                "default": false,
                "order": 220
            }
        },
        "deserializers": {
            "atomts-semantic-view/SemanticView": "deserializeSemanticView"
        },
        "consumedServices": {
            "linter-indie": {
                "versions": {
                    "^2.0.0": "consumeLinter"
                }
            },
            "status-bar": {
                "versions": {
                    "^1.0.0": "consumeStatusBar"
                }
            },
            "datatip": {
                "versions": {
                    "0.1.0": "consumeDatatipService"
                }
            },
            "signature-help": {
                "versions": {
                    "0.1.0": "consumeSignatureHelp"
                }
            },
            "atom-ide-busy-signal": {
                "versions": {
                    "0.1.0": "consumeBusySignal"
                }
            }
        },
        "providedServices": {
            "autocomplete.provider": {
                "versions": {
                    "2.0.0": "provideAutocomplete"
                }
            },
            "hyperclick": {
                "versions": {
                    "0.1.0": "provideHyperclick"
                }
            },
            "intentions:list": {
                "versions": {
                    "1.0.0": "provideIntentions"
                }
            },
            "intentions:highlight": {
                "versions": {
                    "1.0.0": "provideIntentionsHighlight"
                }
            },
            "code-actions": {
                "versions": {
                    "0.1.0": "provideCodeActions"
                }
            },
            "find-references": {
                "versions": {
                    "0.1.0": "provideReferences"
                }
            },
            "outline-view": {
                "versions": {
                    "0.1.0": "provideOutlines"
                }
            },
            "definitions": {
                "versions": {
                    "0.1.0": "provideDefinitions"
                }
            },
            "code-highlight": {
                "versions": {
                    "0.1.0": "provideCodeHighlight"
                }
            }
        },
        "homepage": "https://github.com/TypeStrong/atom-typescript",
        "repository": {
            "type": "git",
            "url": "https://github.com/TypeStrong/atom-typescript.git"
        },
        "license": "MIT",
        "bugs": {
            "url": "https://github.com/TypeStrong/atom-typescript/issues"
        },
        "dependencies": {
            "typescript": "^4.2.3"
        },
        "devDependencies": {
            "@parcel/transformer-typescript-tsc": "^2.0.0-beta.2",
            "@types/atom": "^1.40.10",
            "@types/byline": "^4.2.32",
            "@types/chai": "^4.2.15",
            "@types/fs-plus": "^3.0.1",
            "@types/fuzzaldrin": "^2.1.3",
            "@types/lodash": "^4.14.168",
            "@types/mocha": "^8",
            "@types/node": "^12.12.50",
            "@types/resolve": "^1.20.0",
            "atom-ide-base": "^2.4.0",
            "atom-package-deps": "^7",
            "atom-select-list": "^0.8.0",
            "atom-ts-spec-runner": "^1.1.1",
            "atom-ts-transpiler": "^1.5.3",
            "byline": "^5.0.0",
            "chai": "^4.3.4",
            "cross-env": "7.0.3",
            "etch": "^0.14.1",
            "fs-plus": "^3.1.1",
            "fuzzaldrin": "^2.1.0",
            "jsonc-parser": "^3.0.0",
            "lodash": "^4.17.21",
            "parcel": "^2.0.0-beta.2",
            "prettier": "^2.3.2",
            "resolve": "^1.20.0",
            "tslib": "^2.1.0",
            "tslint": "^6.1.3",
            "tslint-use-atom-disposables": "0.0.1",
            "typescript-tslint-plugin": "1.0.1"
        },
        "package-deps": [
            [
                {
                    "name": "linter"
                },
                {
                    "name": "atom-ide-ui"
                }
            ]
        ],
        "targets": {
            "bundle": {
                "context": "electron-renderer",
                "engines": {
                    "electron": ">=5.x"
                },
                "includeNodeModules": {
                    "atom": false,
                    "electron": false,
                    "typescript": false
                },
                "outputFormat": "commonjs",
                "isLibrary": true
            }
        },
        "atomTranspilers": [
            {
                "transpiler": "atom-ts-transpiler",
                "glob": "{!(node_modules)/**/,}*.ts?(x)",
                "options": {
                    "compilerOptions": {
                        "target": "es2017",
                        "module": "commonjs"
                    },
                    "cacheKeyFiles": [],
                    "verbose": false
                }
            }
        ],
        "keywords": [
            "typescript",
            "javascript",
            "html"
        ]
    },
    "created": 1658334482653,
    "updated": 1658334482653,
    "star_gazers": [],
    "creation_method": "Migrated from Atom.io"
}