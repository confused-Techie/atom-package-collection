{
    "name": "linter-c-indentation",
    "repository": {
        "type": "git",
        "url": "https://github.com/zurzir/linter-c-indentation"
    },
    "downloads": 4242,
    "stargazers_count": 0,
    "releases": {
        "latest": "0.5.1"
    },
    "versions": {
        "0.5.1": {
            "name": "linter-c-indentation",
            "main": "./index",
            "version": "0.5.1",
            "description": "Linter para indentação inválida em C destinado a programadores iniciantes",
            "keywords": [
                "linter",
                "indentation"
            ],
            "activationHooks": [
                "language-c:grammar-used"
            ],
            "repository": "https://github.com/zurzir/linter-c-indentation",
            "license": "GPL",
            "engines": {
                "atom": ">=1.0.0 <2.0.0"
            },
            "providedServices": {
                "linter": {
                    "versions": {
                        "2.0.0": "provideLinter"
                    }
                }
            },
            "eslintConfig": {
                "globals": {
                    "atom": "true"
                },
                "env": {
                    "browser": true,
                    "es6": true
                },
                "extends": "eslint:recommended",
                "parserOptions": {
                    "sourceType": "module",
                    "ecmaVersion": 8
                },
                "rules": {
                    "indent": [
                        "error",
                        4
                    ],
                    "linebreak-style": [
                        "error",
                        "unix"
                    ],
                    "quotes": [
                        "error",
                        "single"
                    ],
                    "semi": [
                        "error",
                        "always"
                    ],
                    "no-console": "off"
                }
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/linter-c-indentation/versions/0.5.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/zurzir/linter-c-indentation/tarball/refs/tags/v0.5.1",
            "sha": "59b56d3c34fb635c7c0124a4e021be914a555b42"
        },
        "0.4.0": {
            "name": "linter-c-indentation",
            "main": "./index",
            "version": "0.4.0",
            "description": "Linter para indentação inválida em C destinado a programadores iniciantes",
            "keywords": [
                "linter",
                "indentation"
            ],
            "activationHooks": [
                "language-c:grammar-used"
            ],
            "repository": "https://github.com/zurzir/linter-c-indentation",
            "license": "GPL",
            "engines": {
                "atom": ">=1.0.0 <2.0.0"
            },
            "providedServices": {
                "linter": {
                    "versions": {
                        "2.0.0": "provideLinter"
                    }
                }
            },
            "eslintConfig": {
                "globals": {
                    "atom": "true"
                },
                "env": {
                    "browser": true,
                    "es6": true
                },
                "extends": "eslint:recommended",
                "parserOptions": {
                    "sourceType": "module",
                    "ecmaVersion": 8
                },
                "rules": {
                    "indent": [
                        "error",
                        4
                    ],
                    "linebreak-style": [
                        "error",
                        "unix"
                    ],
                    "quotes": [
                        "error",
                        "single"
                    ],
                    "semi": [
                        "error",
                        "always"
                    ],
                    "no-console": "off"
                }
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/linter-c-indentation/versions/0.4.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/zurzir/linter-c-indentation/tarball/refs/tags/v0.4.0",
            "sha": "75528b6cacbea7ea666146e74978084464595fe9"
        },
        "0.1.0": {
            "name": "linter-c-indentation",
            "main": "./index",
            "version": "0.1.0",
            "description": "Linter para indentação inválida em C destinado a programadores iniciantes",
            "keywords": [
                "linter",
                "indentation"
            ],
            "activationHooks": [
                "language-c:grammar-used"
            ],
            "repository": "https://github.com/zurzir/linter-c-indentation",
            "license": "GPL",
            "engines": {
                "atom": ">=1.0.0 <2.0.0"
            },
            "providedServices": {
                "linter": {
                    "versions": {
                        "2.0.0": "provideLinter"
                    }
                }
            },
            "eslintConfig": {
                "globals": {
                    "atom": "true"
                },
                "env": {
                    "browser": true,
                    "es6": true
                },
                "extends": "eslint:recommended",
                "parserOptions": {
                    "sourceType": "module",
                    "ecmaVersion": 8
                },
                "rules": {
                    "indent": [
                        "error",
                        4
                    ],
                    "linebreak-style": [
                        "error",
                        "unix"
                    ],
                    "quotes": [
                        "error",
                        "single"
                    ],
                    "semi": [
                        "error",
                        "always"
                    ],
                    "no-console": "off"
                }
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/linter-c-indentation/versions/0.1.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/zurzir/linter-c-indentation/tarball/refs/tags/v0.1.0",
            "sha": "0f585a05fa677f215cc2689490b8d2133f1471ee"
        }
    },
    "readme": "# Linter para indentação\n\n\nProcura erros de indentação comuns para programadores iniciantes\nem linguagem C.\n\n## Dependências\n\nInstale ou o pacote  `atom-ide-ui` ou o pacote  `linter`.\n\n## Observações do estilo verificado\n\n*   palavras chaves ` case ` são alinhadas junto com o switch, como em:\n    ```c\n    switch (value) {\n    case 1:\n        printf(\"1\\n\");\n        break;\n    case 2:\n    case 3:\n        printf(\"2 ou 3\\n\");\n        break;\n    default:\n        printf(\"padrão\\n\");\n    }\n    ```\n\n*   os tokens abre-chaves aumentam o nível apenas do próximo token; apenas os níveis\n    de indentação são verificados; é indiferente usar `{` e `}` no fim da linha, ou\n    em linha separada; o seguinte código não contém erro de indentação:\n    ```c\n    int main()\n    {\n        if () {\n            verdade();\n        } else\n        {\n            falso();\n        }\n    }\n    ```\n\n*   embora convenientes, não são permitido statements vazios só com o `;`\n    que podem ser confusos para iniciantes; o seginte código gera um aviso:\n    ```c\n    for (p = list; p->value != x ; p = p->prox);\n    ```\n\n*   condições aninhadas devem sempre ser envolvidas com chaves, independentemente\n    da combinação dos commandos (`if`, `for`, `while`, `else`); o seguinte código\n    irá gerar dois avisos sugerindo envolver o segundo comando `for` e o\n    comando `if`\n    ```c\n    void bubblesort(int *v, int l, int r) {\n        int i, j;\n        for (i = l; i < r; i++)\n            for (j = r; j > i; j--)\n                if (v[j] < v[j-1])\n                    troca(&v[j-1], &v[j]);\n    }\n    ```\n    a única exceção é a sequeência `else if`, que é interpretada como se fosse um\n     único token; a formatação sugerida é:\n    ```c\n    if (n % 4 == 0)\n        printf(\"n é múltiplo de 4\\n\");\n    else if (n % 3 == 0)\n        printf(\"n é múltiplo de 3, mas não é de 4.\\n\");\n    else\n        printf(\"n não é múltiplo de 3 nem de 4.\\n\");\n    ```\n\n\n\n## Por que não usar o formatador automático?\n\nUm programador iniciante em C ainda não tem claro o que significa\num bloco de comandos e não sabe quais blocos se referem a que condições ou escopo.\nPor exemplo, um formatador iria gerar um código como\n```c\nif (condicao) ;\ncomando_se_verdade();\ncomando_seguinte();\n```\nMas um aluno não iria entender porque ` comando_se_verdade() `\nexecuta sempre, independentemente da condição. Assim é melhor mostrar os erros enquanto\nele está programando. Depois de algumas semanas, quando o aluno já estiver mais seguro, ele\npoderá desabilitar esse linter,  adotar um estilo próprio e possivelmente\npassar a utilizar um formatador de código.\n",
    "metadata": {
        "name": "linter-c-indentation",
        "main": "./index",
        "version": "0.5.1",
        "description": "Linter para indentação inválida em C destinado a programadores iniciantes",
        "keywords": [
            "linter",
            "indentation"
        ],
        "activationHooks": [
            "language-c:grammar-used"
        ],
        "repository": "https://github.com/zurzir/linter-c-indentation",
        "license": "GPL",
        "engines": {
            "atom": ">=1.0.0 <2.0.0"
        },
        "providedServices": {
            "linter": {
                "versions": {
                    "2.0.0": "provideLinter"
                }
            }
        },
        "eslintConfig": {
            "globals": {
                "atom": "true"
            },
            "env": {
                "browser": true,
                "es6": true
            },
            "extends": "eslint:recommended",
            "parserOptions": {
                "sourceType": "module",
                "ecmaVersion": 8
            },
            "rules": {
                "indent": [
                    "error",
                    4
                ],
                "linebreak-style": [
                    "error",
                    "unix"
                ],
                "quotes": [
                    "error",
                    "single"
                ],
                "semi": [
                    "error",
                    "always"
                ],
                "no-console": "off"
            }
        }
    },
    "created": 1658350798893,
    "updated": 1658350798893,
    "star_gazers": [],
    "creation_method": "Migrated from Atom.io"
}