{
    "name": "ioton",
    "repository": {
        "type": "git",
        "url": "https://github.com/iotontech/ioton-atom"
    },
    "downloads": 271,
    "stargazers_count": 2,
    "releases": {
        "latest": "0.8.0"
    },
    "versions": {
        "0.8.0": {
            "name": "ioton",
            "main": "./lib/ioton",
            "version": "0.8.0",
            "description": "Adds an toolbar with ioton platform integration and commonly used actions",
            "repository": {
                "type": "git",
                "url": "git+https://github.com/iotontech/ioton-atom.git"
            },
            "license": "MIT",
            "engines": {
                "atom": ">0.50.0"
            },
            "keywords": [
                "toolbar",
                "tool-bar",
                "ioton"
            ],
            "dependencies": {},
            "packageDependencies": {
                "tool-bar": "0.1.9"
            },
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0 || ^1": "consumeToolBar"
                    }
                }
            },
            "readme": "# Toolbar Ioton - a tool-bar plugin\n\n## Description\n\nA tool-bar plugin that adds a toolbar with ioton platform integration and commonly used actions.\n\n![screenshot](https://raw.githubusercontent.com/iotontech/ioton-atom/master/screenshot.png)\n\nAvailable toolbar buttons:\n\n* __create new ioton project__\n* -\n* __split screen horizontally__\n* __split screen vertically__\n* -\n* __toggle tree-view__\n\n__Note__: The toolbar buttons that require other packages will only appear if you have those packages installed\n\n## Installation\n\nFirst you have to install the `tool-bar` package which is required:\n\n```bash\napm install tool-bar\n```\n\nThen you install the `ioton` package:\n\n```bash\napm install ioton\n```\n\n## Custom entries\n\nIt's also possbile to add your own desired buttons to the tool bar. To utilize this feature you have to go to the settings of tool-bar-almighty and enter a path relative to your `.atom` directory that contains the entries you want to add. They will be added below the default entries.\n\nThe file must be a javascript module that exports an Array of entries.\n\n### Format\n\nThe format is the same as [tool-bar's](https://github.com/suda/tool-bar#example) with 2 extra properties. The first one is `type` which indicates whether the entry is a `button` or a `spacer` while the second one is `dependency` which indicates whether a button's package is not installed by default in Atom and should only be displayed if it's package is installed.\nThe `lib/entries.coffee` is another example on how to format your entries.\n\n### Example\n\n* The file's location `~/.atom/custom_entries.js`\n* The tool-bar-almighty setting's value must match the filename mentioned above `custom_entries.js`\n* The content of the file should look like the following:\n\n```js\nmodule.exports = [\n  {\n    type: 'button',\n    tooltip: 'Open File',\n    callback: 'application:open-file',\n    icon: 'document-text',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Open Folder',\n    callback: 'application:open-folder',\n    icon: 'folder',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Merge Conflicts',\n    dependency: 'merge-conflicts',\n    callback: 'merge-conflicts:detect',\n    icon: 'code-fork',\n    iconset: 'fa'\n  }\n]\n```\n\n## License\n\nThe MIT License\n",
            "readmeFilename": "README.md",
            "bugs": {
                "url": "https://github.com/varemenos/ioton-atom/issues"
            },
            "homepage": "https://github.com/iotontech/ioton-atom#readme",
            "_id": "ioton@0.6.0",
            "_shasum": "d32e8522a015f67e74dd133e617cc90bab4bd7e0",
            "_resolved": "file:../d-116421-2915-m351t/package.tgz",
            "_from": "../d-116421-2915-m351t/package.tgz",
            "_atomModuleCache": {
                "version": 1,
                "dependencies": [],
                "extensions": {
                    ".coffee": [
                        "lib/entries.coffee",
                        "lib/ioton.coffee",
                        "lib/utils.coffee"
                    ],
                    ".json": [
                        "package.json"
                    ]
                },
                "folders": []
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/ioton/versions/0.8.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/iotontech/ioton-atom/tarball/refs/tags/v0.8.0",
            "sha": "9a91fc2e410d01d6ad76cf40a6aa1fb21ee9f990"
        },
        "0.7.2": {
            "name": "ioton",
            "main": "./lib/ioton",
            "version": "0.7.2",
            "description": "Adds an toolbar with ioton platform integration and commonly used actions",
            "repository": {
                "type": "git",
                "url": "git+https://github.com/iotontech/ioton-atom.git"
            },
            "license": "MIT",
            "engines": {
                "atom": ">0.50.0"
            },
            "keywords": [
                "toolbar",
                "tool-bar",
                "ioton"
            ],
            "dependencies": {},
            "packageDependencies": {
                "tool-bar": "0.1.9"
            },
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0 || ^1": "consumeToolBar"
                    }
                }
            },
            "readme": "# Toolbar Ioton - a tool-bar plugin\n\n## Description\n\nA tool-bar plugin that adds a toolbar with ioton platform integration and commonly used actions.\n\n![screenshot](https://raw.githubusercontent.com/iotontech/ioton-atom/master/screenshot.png)\n\nAvailable toolbar buttons:\n\n* __create new ioton project__\n* -\n* __split screen horizontally__\n* __split screen vertically__\n* -\n* __toggle tree-view__\n\n__Note__: The toolbar buttons that require other packages will only appear if you have those packages installed\n\n## Installation\n\nFirst you have to install the `tool-bar` package which is required:\n\n```bash\napm install tool-bar\n```\n\nThen you install the `ioton` package:\n\n```bash\napm install ioton\n```\n\n## Custom entries\n\nIt's also possbile to add your own desired buttons to the tool bar. To utilize this feature you have to go to the settings of tool-bar-almighty and enter a path relative to your `.atom` directory that contains the entries you want to add. They will be added below the default entries.\n\nThe file must be a javascript module that exports an Array of entries.\n\n### Format\n\nThe format is the same as [tool-bar's](https://github.com/suda/tool-bar#example) with 2 extra properties. The first one is `type` which indicates whether the entry is a `button` or a `spacer` while the second one is `dependency` which indicates whether a button's package is not installed by default in Atom and should only be displayed if it's package is installed.\nThe `lib/entries.coffee` is another example on how to format your entries.\n\n### Example\n\n* The file's location `~/.atom/custom_entries.js`\n* The tool-bar-almighty setting's value must match the filename mentioned above `custom_entries.js`\n* The content of the file should look like the following:\n\n```js\nmodule.exports = [\n  {\n    type: 'button',\n    tooltip: 'Open File',\n    callback: 'application:open-file',\n    icon: 'document-text',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Open Folder',\n    callback: 'application:open-folder',\n    icon: 'folder',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Merge Conflicts',\n    dependency: 'merge-conflicts',\n    callback: 'merge-conflicts:detect',\n    icon: 'code-fork',\n    iconset: 'fa'\n  }\n]\n```\n\n## License\n\nThe MIT License\n",
            "readmeFilename": "README.md",
            "bugs": {
                "url": "https://github.com/varemenos/ioton-atom/issues"
            },
            "homepage": "https://github.com/iotontech/ioton-atom#readme",
            "_id": "ioton@0.6.0",
            "_shasum": "d32e8522a015f67e74dd133e617cc90bab4bd7e0",
            "_resolved": "file:../d-116421-2915-m351t/package.tgz",
            "_from": "../d-116421-2915-m351t/package.tgz",
            "_atomModuleCache": {
                "version": 1,
                "dependencies": [],
                "extensions": {
                    ".coffee": [
                        "lib/entries.coffee",
                        "lib/ioton.coffee",
                        "lib/utils.coffee"
                    ],
                    ".json": [
                        "package.json"
                    ]
                },
                "folders": []
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/ioton/versions/0.7.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/iotontech/ioton-atom/tarball/refs/tags/v0.7.2",
            "sha": "1a20162634838ca8792e39bd113794615fbf66f8"
        },
        "0.7.0": {
            "name": "ioton",
            "main": "./lib/ioton",
            "version": "0.7.0",
            "description": "Adds an toolbar with ioton platform integration and commonly used actions",
            "repository": {
                "type": "git",
                "url": "git+https://github.com/iotontech/ioton-atom.git"
            },
            "license": "MIT",
            "engines": {
                "atom": ">0.50.0"
            },
            "keywords": [
                "toolbar",
                "tool-bar",
                "ioton"
            ],
            "dependencies": {},
            "packageDependencies": {
                "tool-bar": "0.1.9"
            },
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0 || ^1": "consumeToolBar"
                    }
                }
            },
            "readme": "# Toolbar Ioton - a tool-bar plugin\n\n## Description\n\nA tool-bar plugin that adds a toolbar with ioton platform integration and commonly used actions.\n\n![screenshot](https://raw.githubusercontent.com/iotontech/ioton-atom/master/screenshot.png)\n\nAvailable toolbar buttons:\n\n* __create new ioton project__\n* -\n* __split screen horizontally__\n* __split screen vertically__\n* -\n* __toggle tree-view__\n\n__Note__: The toolbar buttons that require other packages will only appear if you have those packages installed\n\n## Installation\n\nFirst you have to install the `tool-bar` package which is required:\n\n```bash\napm install tool-bar\n```\n\nThen you install the `ioton` package:\n\n```bash\napm install ioton\n```\n\n## Custom entries\n\nIt's also possbile to add your own desired buttons to the tool bar. To utilize this feature you have to go to the settings of tool-bar-almighty and enter a path relative to your `.atom` directory that contains the entries you want to add. They will be added below the default entries.\n\nThe file must be a javascript module that exports an Array of entries.\n\n### Format\n\nThe format is the same as [tool-bar's](https://github.com/suda/tool-bar#example) with 2 extra properties. The first one is `type` which indicates whether the entry is a `button` or a `spacer` while the second one is `dependency` which indicates whether a button's package is not installed by default in Atom and should only be displayed if it's package is installed.\nThe `lib/entries.coffee` is another example on how to format your entries.\n\n### Example\n\n* The file's location `~/.atom/custom_entries.js`\n* The tool-bar-almighty setting's value must match the filename mentioned above `custom_entries.js`\n* The content of the file should look like the following:\n\n```js\nmodule.exports = [\n  {\n    type: 'button',\n    tooltip: 'Open File',\n    callback: 'application:open-file',\n    icon: 'document-text',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Open Folder',\n    callback: 'application:open-folder',\n    icon: 'folder',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Merge Conflicts',\n    dependency: 'merge-conflicts',\n    callback: 'merge-conflicts:detect',\n    icon: 'code-fork',\n    iconset: 'fa'\n  }\n]\n```\n\n## License\n\nThe MIT License\n",
            "readmeFilename": "README.md",
            "bugs": {
                "url": "https://github.com/varemenos/ioton-atom/issues"
            },
            "homepage": "https://github.com/iotontech/ioton-atom#readme",
            "_id": "ioton@0.6.0",
            "_shasum": "d32e8522a015f67e74dd133e617cc90bab4bd7e0",
            "_resolved": "file:../d-116421-2915-m351t/package.tgz",
            "_from": "../d-116421-2915-m351t/package.tgz",
            "_atomModuleCache": {
                "version": 1,
                "dependencies": [],
                "extensions": {
                    ".coffee": [
                        "lib/entries.coffee",
                        "lib/ioton.coffee",
                        "lib/utils.coffee"
                    ],
                    ".json": [
                        "package.json"
                    ]
                },
                "folders": []
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/ioton/versions/0.7.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/iotontech/ioton-atom/tarball/refs/tags/v0.7.0",
            "sha": "99e3bcdee55532b71d0925b5ea9ff2ea273ce47b"
        },
        "0.6.0": {
            "name": "ioton",
            "main": "./lib/ioton",
            "version": "0.6.0",
            "description": "Adds an toolbar with ioton platform integration and commonly used actions",
            "repository": {
                "type": "git",
                "url": "git+https://github.com/iotontech/ioton-atom.git"
            },
            "license": "MIT",
            "engines": {
                "atom": ">0.50.0"
            },
            "keywords": [
                "toolbar",
                "tool-bar",
                "ioton"
            ],
            "dependencies": {},
            "packageDependencies": {
                "tool-bar": "0.1.9"
            },
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "readme": "# Toolbar Ioton - a tool-bar plugin\n\n## Description\n\nA tool-bar plugin that adds a toolbar with ioton platform integration and commonly used actions.\n\n![screenshot](https://raw.githubusercontent.com/iotontech/ioton-atom/master/screenshot.png)\n\nAvailable toolbar buttons:\n\n* __create new ioton project__\n* -\n* __split screen horizontally__\n* __split screen vertically__\n* -\n* __toggle tree-view__\n\n__Note__: The toolbar buttons that require other packages will only appear if you have those packages installed\n\n## Installation\n\nFirst you have to install the `tool-bar` package which is required:\n\n```bash\napm install tool-bar\n```\n\nThen you install the `ioton` package:\n\n```bash\napm install ioton\n```\n\n## Custom entries\n\nIt's also possbile to add your own desired buttons to the tool bar. To utilize this feature you have to go to the settings of tool-bar-almighty and enter a path relative to your `.atom` directory that contains the entries you want to add. They will be added below the default entries.\n\nThe file must be a javascript module that exports an Array of entries.\n\n### Format\n\nThe format is the same as [tool-bar's](https://github.com/suda/tool-bar#example) with 2 extra properties. The first one is `type` which indicates whether the entry is a `button` or a `spacer` while the second one is `dependency` which indicates whether a button's package is not installed by default in Atom and should only be displayed if it's package is installed.\nThe `lib/entries.coffee` is another example on how to format your entries.\n\n### Example\n\n* The file's location `~/.atom/custom_entries.js`\n* The tool-bar-almighty setting's value must match the filename mentioned above `custom_entries.js`\n* The content of the file should look like the following:\n\n```js\nmodule.exports = [\n  {\n    type: 'button',\n    tooltip: 'Open File',\n    callback: 'application:open-file',\n    icon: 'document-text',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Open Folder',\n    callback: 'application:open-folder',\n    icon: 'folder',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Merge Conflicts',\n    dependency: 'merge-conflicts',\n    callback: 'merge-conflicts:detect',\n    icon: 'code-fork',\n    iconset: 'fa'\n  }\n]\n```\n\n## License\n\nThe MIT License\n",
            "readmeFilename": "README.md",
            "bugs": {
                "url": "https://github.com/varemenos/ioton-atom/issues"
            },
            "homepage": "https://github.com/iotontech/ioton-atom#readme",
            "_id": "ioton@0.6.0",
            "_shasum": "d32e8522a015f67e74dd133e617cc90bab4bd7e0",
            "_resolved": "file:../d-116421-2915-m351t/package.tgz",
            "_from": "../d-116421-2915-m351t/package.tgz",
            "_atomModuleCache": {
                "version": 1,
                "dependencies": [],
                "extensions": {
                    ".coffee": [
                        "lib/entries.coffee",
                        "lib/ioton.coffee",
                        "lib/utils.coffee"
                    ],
                    ".json": [
                        "package.json"
                    ]
                },
                "folders": []
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/ioton/versions/0.6.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/iotontech/ioton-atom/tarball/refs/tags/v0.6.0",
            "sha": "d429b228c9bbd83aa518f033558411f3b46635db"
        },
        "0.5.0": {
            "name": "ioton",
            "main": "./lib/ioton",
            "version": "0.5.0",
            "description": "Adds an toolbar with ioton platform integration and commonly used actions",
            "repository": {
                "type": "git",
                "url": "git+https://github.com/iotontech/ioton-atom"
            },
            "license": "MIT",
            "engines": {
                "atom": ">0.50.0"
            },
            "keywords": [
                "toolbar",
                "tool-bar",
                "ioton"
            ],
            "dependencies": {},
            "packageDependencies": {
                "tool-bar": "0.1.9"
            },
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "readme": "# Toolbar Ioton - a tool-bar plugin\n\n## Description\n\nA tool-bar plugin that adds a toolbar with ioton platform integration and commonly used actions.\n\n![screenshot](https://github.com/iotontech/ioton-atom/blob/master/screenshot.png)\n\nAvailable toolbar buttons:\n\n* __create new ioton project__\n* -\n* __split screen horizontally__\n* __split screen vertically__\n* -\n* __toggle tree-view__\n\n__Note__: The toolbar buttons that require other packages will only appear if you have those packages installed\n\n## Installation\n\nFirst you have to install the `tool-bar` package which is required:\n\n```bash\napm install tool-bar\n```\n\nThen you install the `ioton` package:\n\n```bash\napm install ioton\n```\n\n## Custom entries\n\nIt's also possbile to add your own desired buttons to the tool bar. To utilize this feature you have to go to the settings of tool-bar-almighty and enter a path relative to your `.atom` directory that contains the entries you want to add. They will be added below the default entries.\n\nThe file must be a javascript module that exports an Array of entries.\n\n### Format\n\nThe format is the same as [tool-bar's](https://github.com/suda/tool-bar#example) with 2 extra properties. The first one is `type` which indicates whether the entry is a `button` or a `spacer` while the second one is `dependency` which indicates whether a button's package is not installed by default in Atom and should only be displayed if it's package is installed.\nThe `lib/entries.coffee` is another example on how to format your entries.\n\n### Example\n\n* The file's location `~/.atom/custom_entries.js`\n* The tool-bar-almighty setting's value must match the filename mentioned above `custom_entries.js`\n* The content of the file should look like the following:\n\n```js\nmodule.exports = [\n  {\n    type: 'button',\n    tooltip: 'Open File',\n    callback: 'application:open-file',\n    icon: 'document-text',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Open Folder',\n    callback: 'application:open-folder',\n    icon: 'folder',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Merge Conflicts',\n    dependency: 'merge-conflicts',\n    callback: 'merge-conflicts:detect',\n    icon: 'code-fork',\n    iconset: 'fa'\n  }\n]\n```\n\n## License\n\nThe MIT License\n",
            "readmeFilename": "README.md",
            "bugs": {
                "url": "https://github.com/varemenos/ioton-atom/issues"
            },
            "homepage": "https://github.com/iotontech/ioton-atom#readme",
            "_id": "ioton@0.5.0",
            "_shasum": "d32e8522a015f67e74dd133e617cc90bab4bd7e0",
            "_resolved": "file:../d-115111-21511-1ofxegt/package.tgz",
            "_from": "../d-115111-21511-1ofxegt/package.tgz",
            "_atomModuleCache": {
                "version": 1,
                "dependencies": [],
                "extensions": {
                    ".coffee": [
                        "lib/entries.coffee",
                        "lib/ioton.coffee",
                        "lib/utils.coffee"
                    ],
                    ".json": [
                        "package.json"
                    ]
                },
                "folders": []
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/ioton/versions/0.5.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/iotontech/ioton-atom/tarball/refs/tags/v0.5.0",
            "sha": "83e893d3b270064f9a709a94c299dbf9f685b481"
        }
    },
    "readme": "# Toolbar Ioton - a tool-bar plugin\n\n## Description\n\nA tool-bar plugin that adds a toolbar with ioton platform integration and commonly used actions.\n\n![screenshot](https://raw.githubusercontent.com/iotontech/ioton-atom/master/screenshot.png)\n\nAvailable toolbar buttons:\n\n* __create new ioton project__\n* -\n* __split screen horizontally__\n* __split screen vertically__\n* __toggle tree-view__\n\n__Note__: The toolbar buttons that require other packages will only appear if you have those packages installed\n\n## Installation\n\nFirst you have to install the `tool-bar` package which is required:\n\n```bash\napm install tool-bar\n```\n\nThen you install the `ioton` package:\n\n```bash\napm install ioton\n```\n\n## Custom entries\n\nIt's also possbile to add your own desired buttons to the tool bar. To utilize this feature you have to go to the settings of tool-bar-almighty and enter a path relative to your `.atom` directory that contains the entries you want to add. They will be added below the default entries.\n\nThe file must be a javascript module that exports an Array of entries.\n\n### Format\n\nThe format is the same as [tool-bar's](https://github.com/suda/tool-bar#example) with 2 extra properties. The first one is `type` which indicates whether the entry is a `button` or a `spacer` while the second one is `dependency` which indicates whether a button's package is not installed by default in Atom and should only be displayed if it's package is installed.\nThe `lib/entries.coffee` is another example on how to format your entries.\n\n### Example\n\n* The file's location `~/.atom/custom_entries.js`\n* The tool-bar-almighty setting's value must match the filename mentioned above `custom_entries.js`\n* The content of the file should look like the following:\n\n```js\nmodule.exports = [\n  {\n    type: 'button',\n    tooltip: 'Open File',\n    callback: 'application:open-file',\n    icon: 'document-text',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Open Folder',\n    callback: 'application:open-folder',\n    icon: 'folder',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Merge Conflicts',\n    dependency: 'merge-conflicts',\n    callback: 'merge-conflicts:detect',\n    icon: 'code-fork',\n    iconset: 'fa'\n  }\n]\n```\n\n## License\n\nThe MIT License\n",
    "metadata": {
        "name": "ioton",
        "main": "./lib/ioton",
        "version": "0.8.0",
        "description": "Adds an toolbar with ioton platform integration and commonly used actions",
        "repository": {
            "type": "git",
            "url": "git+https://github.com/iotontech/ioton-atom.git"
        },
        "license": "MIT",
        "engines": {
            "atom": ">0.50.0"
        },
        "keywords": [
            "toolbar",
            "tool-bar",
            "ioton"
        ],
        "dependencies": {},
        "packageDependencies": {
            "tool-bar": "0.1.9"
        },
        "consumedServices": {
            "tool-bar": {
                "versions": {
                    "^0 || ^1": "consumeToolBar"
                }
            }
        },
        "readme": "# Toolbar Ioton - a tool-bar plugin\n\n## Description\n\nA tool-bar plugin that adds a toolbar with ioton platform integration and commonly used actions.\n\n![screenshot](https://raw.githubusercontent.com/iotontech/ioton-atom/master/screenshot.png)\n\nAvailable toolbar buttons:\n\n* __create new ioton project__\n* -\n* __split screen horizontally__\n* __split screen vertically__\n* -\n* __toggle tree-view__\n\n__Note__: The toolbar buttons that require other packages will only appear if you have those packages installed\n\n## Installation\n\nFirst you have to install the `tool-bar` package which is required:\n\n```bash\napm install tool-bar\n```\n\nThen you install the `ioton` package:\n\n```bash\napm install ioton\n```\n\n## Custom entries\n\nIt's also possbile to add your own desired buttons to the tool bar. To utilize this feature you have to go to the settings of tool-bar-almighty and enter a path relative to your `.atom` directory that contains the entries you want to add. They will be added below the default entries.\n\nThe file must be a javascript module that exports an Array of entries.\n\n### Format\n\nThe format is the same as [tool-bar's](https://github.com/suda/tool-bar#example) with 2 extra properties. The first one is `type` which indicates whether the entry is a `button` or a `spacer` while the second one is `dependency` which indicates whether a button's package is not installed by default in Atom and should only be displayed if it's package is installed.\nThe `lib/entries.coffee` is another example on how to format your entries.\n\n### Example\n\n* The file's location `~/.atom/custom_entries.js`\n* The tool-bar-almighty setting's value must match the filename mentioned above `custom_entries.js`\n* The content of the file should look like the following:\n\n```js\nmodule.exports = [\n  {\n    type: 'button',\n    tooltip: 'Open File',\n    callback: 'application:open-file',\n    icon: 'document-text',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Open Folder',\n    callback: 'application:open-folder',\n    icon: 'folder',\n    iconset: 'ion'\n  },\n  {\n    type: 'button',\n    tooltip: 'Merge Conflicts',\n    dependency: 'merge-conflicts',\n    callback: 'merge-conflicts:detect',\n    icon: 'code-fork',\n    iconset: 'fa'\n  }\n]\n```\n\n## License\n\nThe MIT License\n",
        "readmeFilename": "README.md",
        "bugs": {
            "url": "https://github.com/varemenos/ioton-atom/issues"
        },
        "homepage": "https://github.com/iotontech/ioton-atom#readme",
        "_id": "ioton@0.6.0",
        "_shasum": "d32e8522a015f67e74dd133e617cc90bab4bd7e0",
        "_resolved": "file:../d-116421-2915-m351t/package.tgz",
        "_from": "../d-116421-2915-m351t/package.tgz",
        "_atomModuleCache": {
            "version": 1,
            "dependencies": [],
            "extensions": {
                ".coffee": [
                    "lib/entries.coffee",
                    "lib/ioton.coffee",
                    "lib/utils.coffee"
                ],
                ".json": [
                    "package.json"
                ]
            },
            "folders": []
        }
    },
    "created": 1658344528324,
    "updated": 1658344528324,
    "star_gazers": [],
    "creation_method": "Migrated from Atom.io"
}