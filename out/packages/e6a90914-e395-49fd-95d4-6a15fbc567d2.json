{
    "name": "build-mbed",
    "repository": {
        "type": "git",
        "url": "https://github.com/wendlers/atom-build-mbed"
    },
    "downloads": 1038,
    "stargazers_count": 0,
    "releases": {
        "latest": "0.2.0"
    },
    "versions": {
        "0.2.0": {
            "name": "build-mbed",
            "version": "0.2.0",
            "description": "Perform mbed-cli builds",
            "repository": "https://github.com/wendlers/atom-build-mbed",
            "license": "MIT",
            "engines": {
                "atom": "^1.0.0"
            },
            "providedServices": {
                "builder": {
                    "description": "Runs mbed",
                    "versions": {
                        "2.0.0": "provideBuilder"
                    }
                }
            },
            "keywords": [
                "build",
                "compile",
                "cross-compile",
                "mbed",
                "productivity"
            ],
            "main": "lib/mbed.js",
            "dependencies": {
                "ini": "1.3.4"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/build-mbed/versions/0.2.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/wendlers/atom-build-mbed/tarball/refs/tags/v0.2.0",
            "sha": "ed5d26e27fe0f553488613012a889dd55239a68a"
        },
        "0.1.4": {
            "name": "build-mbed",
            "version": "0.1.4",
            "description": "Perform mbed-cli builds",
            "repository": "https://github.com/wendlers/atom-build-mbed",
            "license": "MIT",
            "engines": {
                "atom": "^1.0.0"
            },
            "providedServices": {
                "builder": {
                    "description": "Runs mbed",
                    "versions": {
                        "2.0.0": "provideBuilder"
                    }
                }
            },
            "keywords": [
                "build",
                "compile",
                "cross-compile",
                "mbed",
                "productivity"
            ],
            "main": "lib/mbed.js",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/build-mbed/versions/0.1.4/tarball"
            },
            "tarball_url": "https://api.github.com/repos/wendlers/atom-build-mbed/tarball/refs/tags/v0.1.4",
            "sha": "869d0ec8f0fc3065ff27cd47497dd3e2ca765b19"
        },
        "0.1.3": {
            "name": "build-mbed",
            "version": "0.1.3",
            "description": "Perform mbed-cli builds",
            "repository": "https://github.com/wendlers/atom-build-mbed",
            "license": "MIT",
            "engines": {
                "atom": "^1.0.0"
            },
            "providedServices": {
                "builder": {
                    "description": "Runs mbed",
                    "versions": {
                        "2.0.0": "provideBuilder"
                    }
                }
            },
            "keywords": [
                "build",
                "compile",
                "cross-compile",
                "mbed",
                "productivity"
            ],
            "main": "lib/mbed.js",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/build-mbed/versions/0.1.3/tarball"
            },
            "tarball_url": "https://api.github.com/repos/wendlers/atom-build-mbed/tarball/refs/tags/v0.1.3",
            "sha": "59d9ea5a0d3dbb25d89b1c647f3d0a0131de3830"
        },
        "0.1.2": {
            "name": "build-mbed",
            "version": "0.1.2",
            "description": "Perform mbed-cli builds",
            "repository": "https://github.com/wendlers/atom-build-mbed",
            "license": "MIT",
            "engines": {
                "atom": "^1.0.0"
            },
            "providedServices": {
                "builder": {
                    "description": "Runs mbed",
                    "versions": {
                        "2.0.0": "provideBuilder"
                    }
                }
            },
            "keywords": [
                "build",
                "compile",
                "cross-compile",
                "mbed",
                "productivity"
            ],
            "main": "lib/mbed.js",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/build-mbed/versions/0.1.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/wendlers/atom-build-mbed/tarball/refs/tags/v0.1.2",
            "sha": "a07a4bc7884d63131722f21e781d0ab543ab95eb"
        },
        "0.1.0": {
            "name": "build-mbed",
            "version": "0.1.0",
            "description": "Perform ARMmbed builds",
            "repository": "https://github.com/wendlers/atom-build-mbed",
            "license": "MIT",
            "engines": {
                "atom": "^1.0.0"
            },
            "providedServices": {
                "builder": {
                    "description": "Runs mbed",
                    "versions": {
                        "2.0.0": "provideBuilder"
                    }
                }
            },
            "keywords": [
                "build",
                "compile",
                "cross-compile",
                "mbed",
                "productivity"
            ],
            "main": "lib/mbed.js",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/build-mbed/versions/0.1.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/wendlers/atom-build-mbed/tarball/refs/tags/v0.1.0",
            "sha": "65f01b5f313703ed013658be00caa00a49ab9359"
        }
    },
    "readme": "# mbed build for Atom (via atom-build)\n\nUses the [atom-build](https://github.com/noseglid/atom-build) package to execute\n[mbed-cli](https://github.com/ARMmbed/mbed-cli) builds in the\n[Atom](https://atom.io/) editor.\n\n## Prerequisites\n\nIn general a working installation of the [mbed-cli](https://github.com/ARMmbed/mbed-cli)\nis required. For instructions on the setup\nvisit the `mbed-cli`\n[project page](https://github.com/ARMmbed/mbed-cli#installing-mbed-cli).\n\nThe `atom-build-mbed` package itself requires\n[atom-build](https://github.com/noseglid/atom-build) e.g. installable through\n`apm` from the command line:\n\n    apm install build\n\nOptionally (but recommended) to display compile errors and warnings nicely,\nadd the [linter](https://atom.io/packages/linter) package:\n\n    apm install linter\n\n## Install\n\nInstall the mbed builder from the package sources:\n\n    apm install build-mbed\n\nOr install from git:\n\n    cd $HOME/.atom/packages\n    git clone https://github.com/wendlers/atom-build-mbed.git build-mbed\n\n## Usage\n\nSee [atom-build](https://github.com/noseglid/atom-build) for all available\nkey-bindings of the builder.\n\nTriggering / activation of this builder is done by existence of the file\n`mbed_settings.py` in the current projects directory.\n\nThe builder utilizes the `compile` sub-command of the `mbed-cli` described\n[here](https://github.com/ARMmbed/mbed-cli#compiling-code). Targets exposed by\nthe builder are (select by pressing `F7`, (re-)execute with `F9`):\n\n* _mbed: release_: perform release build which is the equivalent of\n  `mbed compile` on the command line.\n* _mbed: release (clean build)_: same as above but with added `-c` switch\n  to force a full rebuild. The command line equivalent would be\n  `mbed compile -c`.\n* _mbed: debug_: use the debugging profile for the build (which adds debug\n  symbols to the binary). This is the same as `mbed compile --profile mbed-os/tools/profiles/debug.json` on the command line.\n* _mbed: debug (clean build)_: same as above but with added `-c` switch\n  to force a full rebuild. The command line equivalent would be\n  `mbed compile -c --profile mbed-os/tools/profiles/debug.json`.\n* _mbed: clean_: remove the build directory. On the command line this\n  would be done by `rm -fr BUILD`.\n\nThe default target is _mbed: release_.\n\nYou could provide per project targets by creating the file `targets.ini`\nalongside the `mbed_settings.py` script. Each target is defined by `[targetname]`,\nfollowed by an entry specifying the parameters which should be passed to `mbed`:\n\n    [fw_one release]\n    params=\"--source fw_one --source mbed-os --source common --build BUILD/fw_one\"\n\n    [fw_one release (debug)]\n    params=\"--source fw_one --source mbed-os --source common --build BUILD/fw_one --profile mbed-os/tools/profiles/debug.json\"\n\n    [fw_two release]\n    params=\"--source fw_two --source mbed-os --source common --build BUILD/fw_two\"\n\n    [fw_two release (debug)]\n    params=\"--source fw_two --source mbed-os --source common --build BUILD/fw_two --profile mbed-os/tools/profiles/debug.json\"\n\nThe above example allows to build two different firmwares (one located in `fw_one`, the other in `fw_two`), sharing\ncommon parts (here `mbed-os` and `common`).\n\nPlease note, that when you created a `targets.ini` initially for your project,\nyou need to advice `atom-build` to refresh targets with `Build: Refresh Targets`.\nOnce `atom-build` is aware of the user targets, they will be refresh automatically\nevery time the `targets.ini` is saved.\n\nWithin the settings dialog of the builder the following could be adjusted:\n\n* _verbosity_: depending on the settings, this adds `--verbose` or\n  `--very_verbose` to the `mbed` call.\n* _jobs_: number of parallel jobs. If > 1, this will add `-j <NUM_JOBS>` to the\n  `mbed` call.\n* _build dir_: if set != `default`, the output directory will be set to this\n  (instead of using the mbed default which is `BUILD`). This will add\n  `--build <BUILD_DIR>` to the `mbed` call.\n* _source dir_: if set != `default`, the source directory will be set to this\n  (instead of using the mbed default which is the current project directory).\n  This will add `--source <SOURCE_DIR>` to the `mbed` call.\n* _mcu_: if set != `default`, the MCU will be set to this.\n  This will add `-m <MCU>` to the `mbed` call.\n* _toolchain_: if set != `default`, the toolchain will be set to this.\n  This will add `-t <TOOLCHAIN>` to the `mbed` call.\n",
    "metadata": {
        "name": "build-mbed",
        "version": "0.2.0",
        "description": "Perform mbed-cli builds",
        "repository": "https://github.com/wendlers/atom-build-mbed",
        "license": "MIT",
        "engines": {
            "atom": "^1.0.0"
        },
        "providedServices": {
            "builder": {
                "description": "Runs mbed",
                "versions": {
                    "2.0.0": "provideBuilder"
                }
            }
        },
        "keywords": [
            "build",
            "compile",
            "cross-compile",
            "mbed",
            "productivity"
        ],
        "main": "lib/mbed.js",
        "dependencies": {
            "ini": "1.3.4"
        }
    },
    "created": 1658336896255,
    "updated": 1658336896255,
    "star_gazers": [],
    "creation_method": "Migrated from Atom.io"
}