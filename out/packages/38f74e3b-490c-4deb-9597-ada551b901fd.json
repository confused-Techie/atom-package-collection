{
    "name": "transient-emacs",
    "repository": {
        "type": "git",
        "url": "https://github.com/yasuyuky/transient-emacs"
    },
    "downloads": 1134,
    "stargazers_count": 5,
    "releases": {
        "latest": "0.19.0"
    },
    "versions": {
        "0.19.0": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.19.0",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    },
                    {
                        "command": "transient.shellCommand",
                        "title": "Shell Command"
                    },
                    {
                        "command": "transient.shellCommandOnRegion",
                        "title": "Shell Command On Region"
                    },
                    {
                        "command": "transient.shellCommandAndInsert",
                        "title": "Shell Command and Insert"
                    },
                    {
                        "command": "transient.shellCommandOnRegionAndReplace",
                        "title": "Shell Command On Region and Replace"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    },
                    {
                        "key": "shift+alt+1",
                        "command": "transient.shellCommand",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+\\",
                        "command": "transient.shellCommandOnRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+u shift+alt+1",
                        "command": "transient.shellCommandAndInsert",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+u shift+alt+\\",
                        "command": "transient.shellCommandOnRegionAndReplace",
                        "when": "textInputFocus"
                    }
                ],
                "configuration": [
                    {
                        "title": "Transient Emacs",
                        "properties": {
                            "transientEmacs.codeWordRange": {
                                "type": "boolean",
                                "default": false,
                                "description": "Use the word range provided by vscode (if available)"
                            },
                            "transientEmacs.wordRegex": {
                                "type": "string",
                                "default": "[\\w\\d]+",
                                "description": "Word regex"
                            },
                            "transientEmacs.delimRegex": {
                                "type": "string",
                                "default": "[^\\w\\d]+",
                                "description": "Delimiter regex"
                            },
                            "transientEmacs.syncClipboard": {
                                "type": "boolean",
                                "default": true,
                                "description": "Sync clipboard"
                            }
                        }
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.3",
                "@types/mocha": "^8.2.2",
                "@types/node": "^15.3.1",
                "@types/vscode": "^1.56.0",
                "@typescript-eslint/eslint-plugin": "^2.34.0",
                "@typescript-eslint/parser": "^2.34.0",
                "eslint": "^6.8.0",
                "mocha": "^8.4.0",
                "typescript": "^4.2.4",
                "vscode-test": "^1.5.2"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.56.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.8.0",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.19.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.19.0",
            "sha": "08bade50e94eaae97531454f6523da18ed50f380"
        },
        "0.18.0": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.18.0",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    },
                    {
                        "command": "transient.shellCommand",
                        "title": "Shell Command"
                    },
                    {
                        "command": "transient.shellCommandOnRegion",
                        "title": "Shell Command On Region"
                    },
                    {
                        "command": "transient.shellCommandAndInsert",
                        "title": "Shell Command and Insert"
                    },
                    {
                        "command": "transient.shellCommandOnRegionAndReplace",
                        "title": "Shell Command On Region and Replace"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    },
                    {
                        "key": "shift+alt+1",
                        "command": "transient.shellCommand",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+\\",
                        "command": "transient.shellCommandOnRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+u shift+alt+1",
                        "command": "transient.shellCommandAndInsert",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+u shift+alt+\\",
                        "command": "transient.shellCommandOnRegionAndReplace",
                        "when": "textInputFocus"
                    }
                ],
                "configuration": [
                    {
                        "title": "Transient Emacs",
                        "properties": {
                            "transientEmacs.codeWordRange": {
                                "type": "boolean",
                                "default": false,
                                "description": "Use the word range provided by vscode (if available)"
                            },
                            "transientEmacs.wordRegex": {
                                "type": "string",
                                "default": "[\\w\\d]+",
                                "description": "Word regex"
                            },
                            "transientEmacs.delimRegex": {
                                "type": "string",
                                "default": "[^\\w\\d]+",
                                "description": "Delimiter regex"
                            }
                        }
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.3",
                "@types/mocha": "^8.2.0",
                "@types/node": "^14.14.14",
                "@types/vscode": "^1.51.0",
                "@typescript-eslint/eslint-plugin": "^2.34.0",
                "@typescript-eslint/parser": "^2.34.0",
                "eslint": "^6.8.0",
                "mocha": "^8.2.1",
                "typescript": "^4.1.3",
                "vscode-test": "^1.4.1"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.51.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.18.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.18.0",
            "sha": "d878d7969a84b130d855b11d80825971b54bb2a6"
        },
        "0.17.0": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.17.0",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ],
                "configuration": [
                    {
                        "title": "Transient Emacs",
                        "properties": {
                            "transientEmacs.codeWordRange": {
                                "type": "boolean",
                                "default": false,
                                "description": "Use the word range provided by vscode (if available)"
                            },
                            "transientEmacs.wordRegex": {
                                "type": "string",
                                "default": "[\\w\\d]+",
                                "description": "Word regex"
                            },
                            "transientEmacs.delimRegex": {
                                "type": "string",
                                "default": "[^\\w\\d]+",
                                "description": "Delimiter regex"
                            }
                        }
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.3",
                "@types/mocha": "^8.0.3",
                "@types/node": "^14.14.2",
                "@types/vscode": "^1.50.0",
                "@typescript-eslint/eslint-plugin": "^2.34.0",
                "@typescript-eslint/parser": "^2.34.0",
                "eslint": "^6.8.0",
                "mocha": "^8.2.0",
                "typescript": "^4.0.3",
                "vscode-test": "^1.4.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.50.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.17.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.17.0",
            "sha": "00bc52cb7fe523ba79d0470c36efd6177cca2543"
        },
        "0.16.4": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.16.4",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ],
                "configuration": [
                    {
                        "title": "Transient Emacs",
                        "properties": {
                            "transientEmacs.codeWordRange": {
                                "type": "boolean",
                                "default": false,
                                "description": "Use the word range provided by vscode (if available)"
                            },
                            "transientEmacs.wordRegex": {
                                "type": "string",
                                "default": "[\\w\\d]+",
                                "description": "Word regex"
                            },
                            "transientEmacs.delimRegex": {
                                "type": "string",
                                "default": "[^\\w\\d]+",
                                "description": "Delimiter regex"
                            }
                        }
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.3",
                "@types/mocha": "^8.0.3",
                "@types/node": "^14.11.8",
                "@types/vscode": "^1.50.0",
                "@typescript-eslint/eslint-plugin": "^2.34.0",
                "@typescript-eslint/parser": "^2.34.0",
                "eslint": "^6.8.0",
                "mocha": "^8.1.3",
                "typescript": "^4.0.3",
                "vscode-test": "^1.4.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.50.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.16.4/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.16.4",
            "sha": "7161a1b3b3b916c1ed81175eeab17137c8a11fef"
        },
        "0.16.3": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.16.3",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ],
                "configuration": [
                    {
                        "title": "Transient Emacs",
                        "properties": {
                            "transientEmacs.codeWordRange": {
                                "type": "boolean",
                                "default": false,
                                "description": "Use the word range provided by vscode (if available)"
                            },
                            "transientEmacs.wordRegex": {
                                "type": "string",
                                "default": "[\\w\\d]+",
                                "description": "Word regex"
                            },
                            "transientEmacs.delimRegex": {
                                "type": "string",
                                "default": "[^\\w\\d]+",
                                "description": "Delimiter regex"
                            }
                        }
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.3",
                "@types/mocha": "^7.0.2",
                "@types/node": "^14.0.20",
                "@types/vscode": "^1.46.0",
                "@typescript-eslint/eslint-plugin": "^2.34.0",
                "@typescript-eslint/parser": "^2.34.0",
                "eslint": "^6.8.0",
                "mocha": "^8.0.1",
                "typescript": "^3.9.6",
                "vscode-test": "^1.4.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.46.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.16.3/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.16.3",
            "sha": "012c086ba0735eafefbd7df458cf9383cdefbbc9"
        },
        "0.16.2": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.16.2",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ],
                "configuration": [
                    {
                        "title": "Transient Emacs",
                        "properties": {
                            "transientEmacs.codeWordRange": {
                                "type": "boolean",
                                "default": false,
                                "description": "Use the word range provided by vscode (if available)"
                            },
                            "transientEmacs.wordRegex": {
                                "type": "string",
                                "default": "[\\w\\d]+",
                                "description": "Word regex"
                            },
                            "transientEmacs.delimRegex": {
                                "type": "string",
                                "default": "[^\\w\\d]+",
                                "description": "Delimiter regex"
                            }
                        }
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^7.0.2",
                "@types/node": "^14.0.5",
                "@types/vscode": "^1.45.1",
                "@typescript-eslint/eslint-plugin": "^2.34.0",
                "@typescript-eslint/parser": "^2.34.0",
                "eslint": "^6.8.0",
                "mocha": "^7.1.2",
                "typescript": "^3.9.3",
                "vscode-test": "^1.3.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.45.1",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.16.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.16.2",
            "sha": "2a22ad3aaed559a1ec4dde6f9a07dbf5ae80d72e"
        },
        "0.16.1": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.16.1",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ],
                "configuration": [
                    {
                        "title": "Transient Emacs",
                        "properties": {
                            "transientEmacs.codeWordRange": {
                                "type": "boolean",
                                "default": false,
                                "description": "Use the word range provided by vscode (if available)"
                            },
                            "transientEmacs.wordRegex": {
                                "type": "string",
                                "default": "[\\w\\d]+",
                                "description": "Word regex"
                            },
                            "transientEmacs.delimRegex": {
                                "type": "string",
                                "default": "[^\\w\\d]+",
                                "description": "Delimiter regex"
                            }
                        }
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^7.0.2",
                "@types/node": "^13.13.5",
                "@types/vscode": "^1.44.0",
                "@typescript-eslint/eslint-plugin": "^2.31.0",
                "@typescript-eslint/parser": "^2.31.0",
                "eslint": "^6.8.0",
                "mocha": "^7.1.2",
                "typescript": "^3.8.3",
                "vscode-test": "^1.3.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.44.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.16.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.16.1",
            "sha": "87c14bc5476cf25120326bc52e76858cbae4c600"
        },
        "0.16.0": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.16.0",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ],
                "configuration": [
                    {
                        "title": "Transient Emacs",
                        "properties": {
                            "transientEmacs.codeWordRange": {
                                "type": "boolean",
                                "default": false,
                                "description": "Use the word range provided by vscode (if available)"
                            },
                            "transientEmacs.wordRegex": {
                                "type": "string",
                                "default": "[\\w\\d]+",
                                "description": "Word regex"
                            },
                            "transientEmacs.delimRegex": {
                                "type": "string",
                                "default": "[^\\w\\d]+",
                                "description": "Delimiter regex"
                            }
                        }
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^7.0.2",
                "@types/node": "^13.11.1",
                "@types/vscode": "^1.44.0",
                "@typescript-eslint/eslint-plugin": "^2.27.0",
                "@typescript-eslint/parser": "^2.27.0",
                "eslint": "^6.8.0",
                "mocha": "^7.1.1",
                "typescript": "^3.8.3",
                "vscode-test": "^1.3.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.44.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.16.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.16.0",
            "sha": "cee45e4c733990ab907df706ed2b80abd5a8878b"
        },
        "0.15.0": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.15.0",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^7.0.2",
                "@types/node": "^13.9.3",
                "@types/vscode": "^1.43.0",
                "@typescript-eslint/eslint-plugin": "^2.25.0",
                "@typescript-eslint/parser": "^2.25.0",
                "eslint": "^6.8.0",
                "mocha": "^7.1.1",
                "typescript": "^3.8.3",
                "vscode-test": "^1.3.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.43.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.15.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.15.0",
            "sha": "557aba6657140e9097a7a8f43ab1eede7c53aae3"
        },
        "0.14.3": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.14.3",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^7.0.2",
                "@types/node": "^13.9.2",
                "@types/vscode": "^1.43.0",
                "mocha": "^7.1.1",
                "tslint": "^6.1.0",
                "typescript": "^3.8.3",
                "vscode-test": "^1.3.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.42.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.3.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.14.3/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.14.3",
            "sha": "297c75231267d4bc13536aac082924b6636c788c"
        },
        "0.14.2": {
            "name": "transient-emacs",
            "displayName": "Transient Emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.14.2",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^7.0.1",
                "@types/node": "^13.7.1",
                "@types/vscode": "^1.42.0",
                "mocha": "^7.0.1",
                "tslint": "^6.0.0",
                "typescript": "^3.7.5",
                "vscode-test": "^1.3.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.42.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.2.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.14.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.14.2",
            "sha": "f84bab1251b2b640223902b380ba3e7e64d28fe3"
        },
        "0.14.1": {
            "name": "transient-emacs",
            "displayName": "transient-emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.14.1",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^7.0.1",
                "@types/node": "^13.7.0",
                "@types/vscode": "^1.42.0",
                "mocha": "^7.0.1",
                "tslint": "^6.0.0",
                "typescript": "^3.7.5",
                "vscode-test": "^1.3.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.42.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.1.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.14.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.14.1",
            "sha": "82498e8fef7e102c0e8f68dd66c6d6ea73e6ee22"
        },
        "0.14.0": {
            "name": "transient-emacs",
            "displayName": "transient-emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.14.0",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+l",
                        "command": "transient.adjustToCenter",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^5.2.7",
                "@types/node": "^13.1.2",
                "@types/vscode": "^1.41.0",
                "mocha": "^6.2.2",
                "tslint": "^5.20.1",
                "typescript": "^3.7.4",
                "vscode-test": "^1.3.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.40.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.1.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.14.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.14.0",
            "sha": "8161bd7bb197ad48c3cf9363ce34e40cf58eee12"
        },
        "0.13.0": {
            "name": "transient-emacs",
            "displayName": "transient-emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.13.0",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "alt+g n",
                        "command": "editor.action.marker.next",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "alt+g p",
                        "command": "editor.action.marker.prev",
                        "when": "editorTextFocus && !editorReadonly"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^5.2.7",
                "@types/node": "^12.12.14",
                "@types/vscode": "^1.40.0",
                "mocha": "^6.2.2",
                "tslint": "^5.20.1",
                "typescript": "^3.7.3",
                "vscode-test": "^1.2.3"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.40.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.1.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.13.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.13.0",
            "sha": "4c4bff7fdcd7ccdda8f4eade4790af144104c0e8"
        },
        "0.12.2": {
            "name": "transient-emacs",
            "displayName": "transient-emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.12.2",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^5.2.7",
                "@types/node": "^12.12.7",
                "@types/vscode": "^1.40.0",
                "mocha": "^6.2.2",
                "tslint": "^5.20.1",
                "typescript": "^3.7.2",
                "vscode-test": "^1.2.3"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.40.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.1.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.12.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.12.2",
            "sha": "da41712217d0203a82740d5fa05a7d57f47786cf"
        },
        "0.12.1": {
            "name": "transient-emacs",
            "displayName": "transient-emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.12.1",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+r",
                        "command": "workbench.action.files.saveWithoutFormatting"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^5.2.7",
                "@types/node": "^12.12.3",
                "@types/vscode": "^1.39.0",
                "mocha": "^6.2.2",
                "tslint": "^5.20.0",
                "typescript": "^3.6.4",
                "vscode-test": "^1.2.2"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": {
                "type": "git",
                "url": "https://github.com/yasuyuky/transient-emacs"
            },
            "icon": "image/icon.png",
            "license": "MIT",
            "engines": {
                "vscode": "^1.39.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.1.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.12.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.12.1",
            "sha": "adf16d7f520f777b2a7f8ee4a883bcdc1812b1e2"
        },
        "0.12.0": {
            "name": "transient-emacs",
            "displayName": "transient-emacs",
            "publisher": "yasuyuky",
            "main": "./lib/entrypoint",
            "version": "0.12.0",
            "categories": [
                "Keymaps"
            ],
            "activationEvents": [
                "*"
            ],
            "contributes": {
                "commands": [
                    {
                        "command": "transient.setMark",
                        "title": "Set Mark"
                    },
                    {
                        "command": "transient.yank",
                        "title": "Yank"
                    },
                    {
                        "command": "transient.kill",
                        "title": "Kill"
                    },
                    {
                        "command": "transient.killRegion",
                        "title": "Kill Region"
                    },
                    {
                        "command": "transient.copyRegion",
                        "title": "Copy Region"
                    },
                    {
                        "command": "transient.killRegionOrBackwardWord",
                        "title": "Kill Region Or Backward Word"
                    },
                    {
                        "command": "transient.showKillRing",
                        "title": "Show KillRing"
                    },
                    {
                        "command": "transient.cancel",
                        "title": "Cancel"
                    }
                ],
                "keybindings": [
                    {
                        "key": "ctrl+enter",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+2",
                        "command": "transient.setMark",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "left",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+b",
                        "command": "transient.cursorLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "right",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+f",
                        "command": "transient.cursorRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "up",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+p",
                        "command": "transient.cursorUp",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "down",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "ctrl+n",
                        "command": "transient.cursorDown",
                        "when": "textInputFocus && !suggestWidgetVisible"
                    },
                    {
                        "key": "home",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+a",
                        "command": "transient.cursorHome",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "end",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+e",
                        "command": "transient.cursorEnd",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+right",
                        "command": "transient.cursorWordRight",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+left",
                        "command": "transient.cursorWordLeft",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+right",
                        "command": "cursorWordRightSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+left",
                        "command": "cursorWordLeftSelect",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+up",
                        "command": "transient.cursorParagraphUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+down",
                        "command": "transient.cursorParagraphDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+,",
                        "command": "transient.cursorTop",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "shift+alt+.",
                        "command": "transient.cursorBottom",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+v",
                        "command": "transient.cursorPageDown",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+v",
                        "command": "transient.cursorPageUp",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+g g",
                        "command": "workbench.action.gotoLine"
                    },
                    {
                        "key": "ctrl+x ctrl+s",
                        "command": "workbench.action.files.save"
                    },
                    {
                        "key": "ctrl+x ctrl+w",
                        "command": "workbench.action.files.saveAs"
                    },
                    {
                        "key": "ctrl+x k",
                        "command": "workbench.action.closeActiveEditor"
                    },
                    {
                        "key": "ctrl+x ctrl+f",
                        "command": "workbench.action.files.openFileFolder"
                    },
                    {
                        "key": "ctrl+x ctrl+b",
                        "command": "workbench.action.quickOpen"
                    },
                    {
                        "key": "ctrl+x b",
                        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                    },
                    {
                        "key": "ctrl+x ctrl+c",
                        "command": "workbench.action.quit"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+s",
                        "command": "editor.action.nextMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "actions.find",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+r",
                        "command": "editor.action.previousMatchFindAction",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "enter",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeFindWidget",
                        "when": "findWidgetVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReplaceInFilesWidget",
                        "when": "replaceInputBoxFocus && searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "closeReviewPanel",
                        "when": "reviewPanelVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "search.action.cancel",
                        "when": "searchViewletVisible"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "workbench.action.closeQuickOpen",
                        "when": "inQuickOpen"
                    },
                    {
                        "key": "ctrl+g",
                        "command": "transient.cancel",
                        "when": "!findWidgetVisible"
                    },
                    {
                        "key": "ctrl+x u",
                        "command": "undo"
                    },
                    {
                        "key": "ctrl+w",
                        "command": "transient.killRegionOrBackwardWord",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+w",
                        "command": "transient.copyRegion",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+k",
                        "command": "transient.kill",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+y",
                        "command": "transient.yank",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "alt+y",
                        "command": "transient.showKillRing",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+j",
                        "command": "transient.insertNewline",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+down",
                        "command": "editor.action.insertCursorBelow",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+shift+up",
                        "command": "editor.action.insertCursorAbove",
                        "when": "textInputFocus"
                    },
                    {
                        "key": "ctrl+x 2",
                        "command": "workbench.action.splitEditorDown"
                    },
                    {
                        "key": "ctrl+x 3",
                        "command": "workbench.action.splitEditorRight"
                    },
                    {
                        "key": "ctrl+x 0",
                        "command": "workbench.action.closeEditorsInGroup"
                    },
                    {
                        "key": "ctrl+x o",
                        "command": "workbench.action.focusNextGroup"
                    },
                    {
                        "key": "alt+x",
                        "command": "workbench.action.showCommands"
                    },
                    {
                        "key": "alt+.",
                        "command": "workbench.action.gotoSymbol"
                    }
                ]
            },
            "scripts": {
                "vscode:prepublish": "npm install --production && npm run compile",
                "compile": "tsc -p ./",
                "watch": "tsc -watch -p ./",
                "test": "npm run compile && node ./lib/code/test/run.js"
            },
            "devDependencies": {
                "@types/clipboardy": "^2.0.1",
                "@types/glob": "^7.1.1",
                "@types/mocha": "^5.2.7",
                "@types/node": "^12.7.12",
                "@types/vscode": "^1.38.0",
                "mocha": "^6.2.1",
                "tslint": "^5.20.0",
                "typescript": "^3.6.3",
                "vscode-test": "^1.2.0"
            },
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "vscode": "^1.38.0",
                "atom": "^1.39.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "clipboardy": "^2.1.0"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.12.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.12.0",
            "sha": "980db7f91cbf2800b534476aa5b9d66134daf7db"
        },
        "0.11.0": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.11.0",
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "atom-select-list": "^0.7.2",
                "dom-listener": "0.1.2"
            },
            "deserializers": {
                "KillRing": "deserializeKillRing"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.11.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.11.0",
            "sha": "3cef566ba3f52a362a2723565734a541dd14231c"
        },
        "0.10.0": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.10.0",
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "dom-listener": "0.1.2",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.10.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.10.0",
            "sha": "ee3a604f52eef85619ad1a00d5646ca8300df7c5"
        },
        "0.9.1": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.9.1",
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "dom-listener": "0.1.2",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.9.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.9.1",
            "sha": "26ceca8cb316e3009dda3c88227bd506bb47c820"
        },
        "0.9.0": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.9.0",
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.9.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.9.0",
            "sha": "1e33ff50381d700d57819d209ca32e2eb4070e9a"
        },
        "0.8.6": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.8.6",
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.8.6/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.8.6",
            "sha": "acce888e0826e32bacf3ef174c91b21a84b44fe3"
        },
        "0.8.5": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.8.5",
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.8.5/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.8.5",
            "sha": "58a9163a9c497ef7eca6a9e4ebbbdf1b8e011017"
        },
        "0.8.4": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.8.4",
            "private": true,
            "description": "Emacs mode using transient mark",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.8.4/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.8.4",
            "sha": "9a18d789158f45d54b61f5e85f403e5d21b92f2b"
        },
        "0.8.3": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.8.3",
            "private": true,
            "description": "Emacs mode using transient mark (for OSX)",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.8.3/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.8.3",
            "sha": "e7e4a8e1bfb1f2f6d81d0381c35fc8fdfd5754b2"
        },
        "0.8.2": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.8.2",
            "private": true,
            "description": "Emacs mode using transient mark (for OSX)",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.8.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.8.2",
            "sha": "a04c6d784d7d18d9715e82a25a944c6684d278cf"
        },
        "0.8.1": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.8.1",
            "private": true,
            "description": "Emacs mode using transient mark (for OSX)",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.8.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.8.1",
            "sha": "e513d79278b6f8812cee0751d42a907d96e4b5ab"
        },
        "0.8.0": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.8.0",
            "private": true,
            "description": "Emacs mode using transient mark (for OSX)",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.8.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/yasuyuky/transient-emacs/tarball/refs/tags/v0.8.0",
            "sha": "4c14d43a72272592f4e835a3f1a72d97a312e768"
        },
        "0.7.0": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.7.0",
            "private": true,
            "description": "Emacs mode using transient mark (for OSX)",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.7.0/tarball"
            }
        },
        "0.6.0": {
            "name": "transient-emacs",
            "main": "./lib/transient-emacs",
            "version": "0.6.0",
            "private": true,
            "description": "Emacs mode using transient mark (for OSX)",
            "repository": "https://github.com/yasuyuky/transient-emacs",
            "license": "MIT",
            "engines": {
                "atom": ">0.150.0"
            },
            "dependencies": {
                "underscore-plus": "1.x",
                "space-pen": "^3"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/transient-emacs/versions/0.6.0/tarball"
            }
        }
    },
    "readme": "# Transient Emacs for Atom Editor / VS Code\n\n<img src=\"https://raw.githubusercontent.com/yasuyuky/transient-emacs/main/image/icon.png\" width=\"128px\">\n\nEmacs (transient mark mode) for Atom Editor / VS Code\n\n- [for Atom Editor](https://atom.io/packages/transient-emacs)\n- [for VS Code](https://marketplace.visualstudio.com/items?itemName=yasuyuky.transient-emacs)\n- [available on Open VSX Registry](https://open-vsx.org/extension/yasuyuky/transient-emacs)\n\n[![Build Status][travis-ci status]][travis-ci]\n[![Build Status][azure pipelines status]][azure pipelines]\n[![Actions Status][github actions status]][github actions]\n[![Dependencies Status][david-dm status]][david-dm]\n\nThis package emulate Emacs'\n[transient-mark-mode](http://www.emacswiki.org/emacs/TransientMarkMode).\n\n# Features\n\n- [x] emacs like keybindings\n- [x] kill-ring with multiple cursors\n- [x] sync kill-ring with clipboard\n- [x] emacs like incremental search\n- [x] yank text selected from kill-ring history\n\n# Keybindings\n\nSee keymaps/transient-emacs.cson (for atom) or package.json (for code) for detailed keybindings\n\n| keybindngs           | Atom Editor Commands                           | VS Code Commands                                   |\n| -------------------- | ---------------------------------------------- | -------------------------------------------------- |\n| **files**            |                                                |                                                    |\n| `ctrl-x ctrl-b`      | fuzzy-finder:toggle-file-finder                | workbench.action.quickOpen                         |\n| `ctrl-x b`           | fuzzy-finder:toggle-buffer-finder              | workbench.action.openNextRecentlyUsedEditorInGroup |\n| `ctrl-x ctrl-f`      | application:open                               | workbench.action.files.openFileFolder              |\n| `ctrl-x ctrl-c`      | application:quit                               | workbench.action.quit                              |\n| `ctrl-x ctrl-s`      | core:save                                      | workbench.action.files.save                        |\n| `ctrl-x ctrl-w`      | core:save-as                                   | workbench.action.files.saveAs                      |\n| `ctrl-x ctrl-r`      |                                                | workbench.action.files.saveWithoutFormatting       |\n| `ctrl-x k`           | core:close                                     | workbench.action.closeActiveEditor                 |\n| **general**          |                                                |                                                    |\n| `ctrl-j`             | core:confirm                                   | transient.insertNewLine                            |\n| `ctrl-m`             | core:confirm                                   |                                                    |\n| `ctrl-g`             | cancels                                        | (cancels)                                          |\n| `ctrl-x u`           | core:undo                                      | undo                                               |\n| **mark**             |                                                |                                                    |\n| `ctrl-enter`         |                                                | transient.setMark                                  |\n| `ctrl-@`             | emacs:set-mark                                 | transient.setMark                                  |\n| `` ctrl-` ``         | emacs:set-mark                                 |                                                    |\n| **edit**             |                                                |                                                    |\n| `ctrl-y`             | emacs:yank                                     | transient.yank                                     |\n| `alt-y`              | emacs:show-kill-ring                           | transient.showKillRing                             |\n| `ctrl-k`             | emacs:kill                                     | transient.kill                                     |\n| `ctrl-w`             | emacs:kill-region-or-backward-word             | transient.killRegionOrBackwardWord                 |\n| `alt-w`              | emacs:copy-region                              | transient.copyRegion                               |\n| `ctrl-j`             | editor:newline                                 | transient.insertNewline                            |\n| `ctrl-m`             | editor:newline                                 |                                                    |\n| `ctrl-d`             | core:delete                                    | deleteRight (default)                              |\n| `backspace`          | emacs:backspace                                | deleteLeft (default)                               |\n| `ctrl-h`             | emacs:backspace                                | deleteLeft (default)                               |\n| **move**             |                                                |                                                    |\n| `ctrl-n`             | core:move-down                                 | transient.cursorDown                               |\n| `ctrl-p`             | core:move-up                                   | transient.cursorUp                                 |\n| `ctrl-f`             | core:move-right                                | transient.cursorRight                              |\n| `ctrl-b`             | core:move-left                                 | transient.cursorLeft                               |\n| `ctrl-l`             | editor:scroll-to-cursor                        | transient.adjustToCenter                           |\n| `ctrl-a`             | editor:move-to-first-character-of-line         | transient.cursorHome                               |\n| `ctrl-e`             | editor:move-to-end-of-line                     | transient.cursorEnd                                |\n| `ctrl-right`         | editor:move-to-beginning-of-next-word          | transient.cursorWordRight                          |\n| `ctrl-left`          | editor:move-to-beginning-of-word               | transient.cursorWordLeft                           |\n| `ctrl-up`            | editor:move-to-beginning-of-previous-paragraph | transient.cursorParagraphUp                        |\n| `ctrl-down`          | editor:move-to-beginning-of-next-paragraph     | transient.cursorParagraphDown                      |\n| `ctrl-shift-right`   | editor:select-to-beginning-of-next-word        | cursorWordRightSelect                              |\n| `ctrl-shift-left`    | editor:select-to-beginning-of-word             | cursorWordLeftSelect                               |\n| `ctrl-v`             | core:page-down                                 | transient.cursorPageDown                           |\n| `alt-v`              | core:page-up                                   | transient.cursorPageUp                             |\n| `alt-<`              | core:move-to-top                               | transient.cursorTop                                |\n| `alt->`              | core:move-to-bottom                            | transient.cursorBottom                             |\n| `alt-g g`            | go-to-line:toggle                              | workbench.action.gotoLine                          |\n| `alt-g n`            |                                                | editor.action.marker.next                          |\n| `alt-g p`            |                                                | editor.action.marker.prev                          |\n| **search**           |                                                |                                                    |\n| `ctrl-s`             | emacs:isearch                                  | actions.find                                       |\n| `ctrl-r`             | emacs:backward-isearch                         | actions.find (reverse search)                      |\n| `ctrl-alt-s`         | emacs:isearch-regexp                           |                                                    |\n| `ctrl-alt-r`         | emacs:backward-isearch-regexp                  |                                                    |\n| **pane**             |                                                |                                                    |\n| `ctrl-x 2`           | pane:split-down                                | workbench.action.splitEditorDown                   |\n| `ctrl-x 3`           | pane:split-right                               | workbench.action.splitEditorRight                  |\n| `ctrl-x 0`           | pane:close                                     | workbench.action.closeEditorsInGroup               |\n| `ctrl-x o`           | window:focus-next-pane                         | workbench.action.focusNextGroup                    |\n| **misc**             |                                                |                                                    |\n| `alt-x`              | command-palette:toggle                         | workbench.action.showCommands                      |\n| `alt-/`              | autocomplete:toggle                            |                                                    |\n| `alt-.`              | symbols-view:toggle-file-symbols               | workbench.action.gotoSymbol                        |\n| `alt-.`              |                                                |                                                    |\n| `shift+alt+1`        |                                                | transient.shellCommand                             |\n| `ctrl+u shift+alt+1` |                                                | transient.shellCommandAndInsert                    |\n| `shift+alt+\\`        |                                                | transient.shellCommandOnRegion                     |\n| `ctrl+u shift+alt+\\` |                                                | transient.shellCommandOnRegionAndReplace           |\n\n# Release flow\n\n1. Update CHANGELOG\n2. `apm publish (major|minor|patch)`\n3. `vsce package && vsce publish`\n4. `npx ovsx publish transient-emacs-$(jq -r .version package.json).vsix -p $OVSX_TOKEN`\n\n[travis-ci status]: https://travis-ci.org/yasuyuky/transient-emacs.svg\n[travis-ci]: https://travis-ci.org/yasuyuky/transient-emacs\n[azure pipelines status]: https://dev.azure.com/yasuyuky/transient-emacs/_apis/build/status/yasuyuky.transient-emacs?branchName=main\n[azure pipelines]: https://dev.azure.com/yasuyuky/transient-emacs/_build/latest?definitionId=1&branchName=main\n[github actions status]: https://img.shields.io/github/workflow/status/yasuyuky/transient-emacs/Test.svg?logo=github\n[github actions]: https://github.com/yasuyuky/transient-emacs/actions\n[david-dm status]: https://david-dm.org/yasuyuky/transient-emacs/status.svg\n[david-dm]: https://david-dm.org/yasuyuky/transient-emacs\n",
    "metadata": {
        "name": "transient-emacs",
        "displayName": "Transient Emacs",
        "publisher": "yasuyuky",
        "main": "./lib/entrypoint",
        "version": "0.19.0",
        "categories": [
            "Keymaps"
        ],
        "activationEvents": [
            "*"
        ],
        "contributes": {
            "commands": [
                {
                    "command": "transient.setMark",
                    "title": "Set Mark"
                },
                {
                    "command": "transient.yank",
                    "title": "Yank"
                },
                {
                    "command": "transient.kill",
                    "title": "Kill"
                },
                {
                    "command": "transient.killRegion",
                    "title": "Kill Region"
                },
                {
                    "command": "transient.copyRegion",
                    "title": "Copy Region"
                },
                {
                    "command": "transient.killRegionOrBackwardWord",
                    "title": "Kill Region Or Backward Word"
                },
                {
                    "command": "transient.showKillRing",
                    "title": "Show KillRing"
                },
                {
                    "command": "transient.cancel",
                    "title": "Cancel"
                },
                {
                    "command": "transient.shellCommand",
                    "title": "Shell Command"
                },
                {
                    "command": "transient.shellCommandOnRegion",
                    "title": "Shell Command On Region"
                },
                {
                    "command": "transient.shellCommandAndInsert",
                    "title": "Shell Command and Insert"
                },
                {
                    "command": "transient.shellCommandOnRegionAndReplace",
                    "title": "Shell Command On Region and Replace"
                }
            ],
            "keybindings": [
                {
                    "key": "ctrl+enter",
                    "command": "transient.setMark",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+shift+2",
                    "command": "transient.setMark",
                    "when": "textInputFocus"
                },
                {
                    "key": "left",
                    "command": "transient.cursorLeft",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+b",
                    "command": "transient.cursorLeft",
                    "when": "textInputFocus"
                },
                {
                    "key": "right",
                    "command": "transient.cursorRight",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+f",
                    "command": "transient.cursorRight",
                    "when": "textInputFocus"
                },
                {
                    "key": "up",
                    "command": "transient.cursorUp",
                    "when": "textInputFocus && !suggestWidgetVisible"
                },
                {
                    "key": "ctrl+p",
                    "command": "transient.cursorUp",
                    "when": "textInputFocus && !suggestWidgetVisible"
                },
                {
                    "key": "down",
                    "command": "transient.cursorDown",
                    "when": "textInputFocus && !suggestWidgetVisible"
                },
                {
                    "key": "ctrl+n",
                    "command": "transient.cursorDown",
                    "when": "textInputFocus && !suggestWidgetVisible"
                },
                {
                    "key": "home",
                    "command": "transient.cursorHome",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+a",
                    "command": "transient.cursorHome",
                    "when": "textInputFocus"
                },
                {
                    "key": "end",
                    "command": "transient.cursorEnd",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+e",
                    "command": "transient.cursorEnd",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+right",
                    "command": "transient.cursorWordRight",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+left",
                    "command": "transient.cursorWordLeft",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+shift+right",
                    "command": "cursorWordRightSelect",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+shift+left",
                    "command": "cursorWordLeftSelect",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+up",
                    "command": "transient.cursorParagraphUp",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+down",
                    "command": "transient.cursorParagraphDown",
                    "when": "textInputFocus"
                },
                {
                    "key": "shift+alt+,",
                    "command": "transient.cursorTop",
                    "when": "textInputFocus"
                },
                {
                    "key": "shift+alt+.",
                    "command": "transient.cursorBottom",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+v",
                    "command": "transient.cursorPageDown",
                    "when": "textInputFocus"
                },
                {
                    "key": "alt+v",
                    "command": "transient.cursorPageUp",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+l",
                    "command": "transient.adjustToCenter",
                    "when": "textInputFocus"
                },
                {
                    "key": "alt+g g",
                    "command": "workbench.action.gotoLine"
                },
                {
                    "key": "alt+g n",
                    "command": "editor.action.marker.next",
                    "when": "editorTextFocus && !editorReadonly"
                },
                {
                    "key": "alt+g p",
                    "command": "editor.action.marker.prev",
                    "when": "editorTextFocus && !editorReadonly"
                },
                {
                    "key": "ctrl+x ctrl+s",
                    "command": "workbench.action.files.save"
                },
                {
                    "key": "ctrl+x ctrl+r",
                    "command": "workbench.action.files.saveWithoutFormatting"
                },
                {
                    "key": "ctrl+x ctrl+w",
                    "command": "workbench.action.files.saveAs"
                },
                {
                    "key": "ctrl+x k",
                    "command": "workbench.action.closeActiveEditor"
                },
                {
                    "key": "ctrl+x ctrl+f",
                    "command": "workbench.action.files.openFileFolder"
                },
                {
                    "key": "ctrl+x ctrl+b",
                    "command": "workbench.action.quickOpen"
                },
                {
                    "key": "ctrl+x b",
                    "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
                },
                {
                    "key": "ctrl+x ctrl+c",
                    "command": "workbench.action.quit"
                },
                {
                    "key": "ctrl+s",
                    "command": "actions.find",
                    "when": "!findWidgetVisible"
                },
                {
                    "key": "ctrl+s",
                    "command": "editor.action.nextMatchFindAction",
                    "when": "findWidgetVisible"
                },
                {
                    "key": "ctrl+r",
                    "command": "actions.find",
                    "when": "!findWidgetVisible"
                },
                {
                    "key": "ctrl+r",
                    "command": "editor.action.previousMatchFindAction",
                    "when": "findWidgetVisible"
                },
                {
                    "key": "enter",
                    "command": "closeFindWidget",
                    "when": "findWidgetVisible"
                },
                {
                    "key": "ctrl+g",
                    "command": "closeFindWidget",
                    "when": "findWidgetVisible"
                },
                {
                    "key": "ctrl+g",
                    "command": "closeReplaceInFilesWidget",
                    "when": "replaceInputBoxFocus && searchViewletVisible"
                },
                {
                    "key": "ctrl+g",
                    "command": "closeReviewPanel",
                    "when": "reviewPanelVisible"
                },
                {
                    "key": "ctrl+g",
                    "command": "search.action.cancel",
                    "when": "searchViewletVisible"
                },
                {
                    "key": "ctrl+g",
                    "command": "workbench.action.closeQuickOpen",
                    "when": "inQuickOpen"
                },
                {
                    "key": "ctrl+g",
                    "command": "transient.cancel",
                    "when": "!findWidgetVisible && !inQuickOpen && !reviewPanelVisible"
                },
                {
                    "key": "ctrl+x u",
                    "command": "undo"
                },
                {
                    "key": "ctrl+w",
                    "command": "transient.killRegionOrBackwardWord",
                    "when": "textInputFocus"
                },
                {
                    "key": "alt+w",
                    "command": "transient.copyRegion",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+k",
                    "command": "transient.kill",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+y",
                    "command": "transient.yank",
                    "when": "textInputFocus"
                },
                {
                    "key": "alt+y",
                    "command": "transient.showKillRing",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+j",
                    "command": "transient.insertNewline",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+shift+down",
                    "command": "editor.action.insertCursorBelow",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+shift+up",
                    "command": "editor.action.insertCursorAbove",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+x 2",
                    "command": "workbench.action.splitEditorDown"
                },
                {
                    "key": "ctrl+x 3",
                    "command": "workbench.action.splitEditorRight"
                },
                {
                    "key": "ctrl+x 0",
                    "command": "workbench.action.closeEditorsInGroup"
                },
                {
                    "key": "ctrl+x o",
                    "command": "workbench.action.focusNextGroup"
                },
                {
                    "key": "alt+x",
                    "command": "workbench.action.showCommands"
                },
                {
                    "key": "alt+.",
                    "command": "workbench.action.gotoSymbol"
                },
                {
                    "key": "shift+alt+1",
                    "command": "transient.shellCommand",
                    "when": "textInputFocus"
                },
                {
                    "key": "shift+alt+\\",
                    "command": "transient.shellCommandOnRegion",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+u shift+alt+1",
                    "command": "transient.shellCommandAndInsert",
                    "when": "textInputFocus"
                },
                {
                    "key": "ctrl+u shift+alt+\\",
                    "command": "transient.shellCommandOnRegionAndReplace",
                    "when": "textInputFocus"
                }
            ],
            "configuration": [
                {
                    "title": "Transient Emacs",
                    "properties": {
                        "transientEmacs.codeWordRange": {
                            "type": "boolean",
                            "default": false,
                            "description": "Use the word range provided by vscode (if available)"
                        },
                        "transientEmacs.wordRegex": {
                            "type": "string",
                            "default": "[\\w\\d]+",
                            "description": "Word regex"
                        },
                        "transientEmacs.delimRegex": {
                            "type": "string",
                            "default": "[^\\w\\d]+",
                            "description": "Delimiter regex"
                        },
                        "transientEmacs.syncClipboard": {
                            "type": "boolean",
                            "default": true,
                            "description": "Sync clipboard"
                        }
                    }
                }
            ]
        },
        "scripts": {
            "vscode:prepublish": "npm install && npm run compile",
            "compile": "tsc -p ./",
            "watch": "tsc -watch -p ./",
            "test": "npm run compile && node ./lib/code/test/run.js"
        },
        "devDependencies": {
            "@types/clipboardy": "^2.0.1",
            "@types/glob": "^7.1.3",
            "@types/mocha": "^8.2.2",
            "@types/node": "^15.3.1",
            "@types/vscode": "^1.56.0",
            "@typescript-eslint/eslint-plugin": "^2.34.0",
            "@typescript-eslint/parser": "^2.34.0",
            "eslint": "^6.8.0",
            "mocha": "^8.4.0",
            "typescript": "^4.2.4",
            "vscode-test": "^1.5.2"
        },
        "private": true,
        "description": "Emacs mode using transient mark",
        "repository": {
            "type": "git",
            "url": "https://github.com/yasuyuky/transient-emacs"
        },
        "icon": "image/icon.png",
        "license": "MIT",
        "engines": {
            "vscode": "^1.56.0",
            "atom": "^1.39.0"
        },
        "dependencies": {
            "atom-select-list": "^0.8.0",
            "clipboardy": "^2.3.0"
        },
        "deserializers": {
            "KillRing": "deserializeKillRing"
        }
    },
    "created": 1658430214347,
    "updated": 1658430214347,
    "star_gazers": [],
    "creation_method": "Migrated from Atom.io"
}