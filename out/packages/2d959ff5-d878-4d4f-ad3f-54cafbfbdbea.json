{
    "name": "mcduino",
    "repository": {
        "type": "git",
        "url": "https://github.com/marcelocorreia/mcduino"
    },
    "downloads": 4275,
    "stargazers_count": 7,
    "releases": {
        "latest": "1.5.0"
    },
    "versions": {
        "1.5.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:board-select",
                    "mcduino:boards-txt",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "^0.3.0",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "1.5.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/1.5.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v1.5.0",
            "sha": "aa1890b6d445fed673d71fec3fe210c81ec030b9"
        },
        "1.4.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:board-select",
                    "mcduino:boards-txt",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "1.4.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/1.4.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v1.4.0",
            "sha": "43ad6052fbf71f33e8af82beb747a1d63ff4b8ce"
        },
        "1.2.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:board-select",
                    "mcduino:boards-txt",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "1.2.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/1.2.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v1.2.0",
            "sha": "85553882270f91601588b11b502993dfa4ff6b7f"
        },
        "1.1.1": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "1.1.1",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/1.1.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v1.1.1",
            "sha": "7a4bb230d009ca89fb633f7db39b472355959ae9"
        },
        "1.1.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "1.1.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/1.1.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v1.1.0",
            "sha": "c64f7c2ae14d8b7bb47bbb1c156b33a6feb81872"
        },
        "1.0.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "1.0.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/1.0.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v1.0.0",
            "sha": "b5331e594408a033f3d1d8563ff3f27c11fa16e8"
        },
        "0.30.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.30.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.30.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.30.0",
            "sha": "7d21ff8d4be9d853a5e11bacb51f6e0814a736c0"
        },
        "0.29.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.29.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.29.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.29.0",
            "sha": "48b67cace270617a43512f867d0770c3650399cf"
        },
        "0.28.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.28.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.28.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.28.0",
            "sha": "4506df0884a8043dcef41b7e7d4084ce51ddbcb6"
        },
        "0.27.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.27.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.27.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.27.0",
            "sha": "bd2b6cb3246144eeab1d94750e39962bc1a36bc8"
        },
        "0.26.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.26.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.26.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.26.0",
            "sha": "3992a21d8219d88d2399a0b6857e920c7bca4783"
        },
        "0.25.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.25.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.25.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.25.0",
            "sha": "f88c4d291a3a01d3ad259504c38b9411ae6eea3b"
        },
        "0.24.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at \n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.24.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.24.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.24.0",
            "sha": "b3f54f41168dd45f1e7c54f5b221e656991b0533"
        },
        "0.22.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "devDependencies": {},
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "readme": "# MCduino Arduino plugin for Atom\n###Arduino support in [MCduino](https://github.com/marcelocorreia/mcduino)",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.22.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.22.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.22.0",
            "sha": "e68e41fbee7535b3a8a74c8dea6c272a43188adc"
        },
        "0.15.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "readmeFilename": "README.md",
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.15.0",
            "devDependencies": {},
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.15.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.15.0",
            "sha": "087c698f6ec9733cb6b2b9c7552602d88b0c6e33"
        },
        "0.14.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.14.0",
            "devDependencies": {},
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.14.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.14.0",
            "sha": "cb8f1144fe5f6fef0054f01b10c6736b801a6268"
        },
        "0.13.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:ino-check",
                    "mcduino:ino-clean",
                    "mcduino:ino-build",
                    "mcduino:ino-upload",
                    "mcduino:ino-serial",
                    "mcduino:ino-list-models",
                    "mcduino:ino-new-project",
                    "mcduino:checkRequirements",
                    "mcduino:dev-test"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "line-reader": "^0.2.4",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.13.0",
            "devDependencies": {},
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.13.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.13.0",
            "sha": "aed3d9ad9e36bbe8ccac943876c43b8f29e11807"
        },
        "0.11.0": {
            "activationCommands": {
                "atom-workspace": [
                    "tool-bar:toggle",
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:inoCheck",
                    "mcduino:inoClean",
                    "mcduino:inoBuild",
                    "mcduino:inoUpload",
                    "mcduino:inoSerial",
                    "mcduino:inoListModels",
                    "mcduino:inoInit",
                    "mcduino:checkRequirements"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz",
                "shelljs": "^0.5.1"
            },
            "description": "Arduino for Atom",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.11.0",
            "devDependencies": {},
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.11.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.11.0",
            "sha": "edee6f26665eec32363b9dd81f01792b3fcc94f2"
        },
        "0.10.0": {
            "activationCommands": {
                "atom-workspace": [
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:inoCheck",
                    "mcduino:inoClean",
                    "mcduino:inoBuild",
                    "mcduino:inoUpload",
                    "mcduino:inoSerial",
                    "mcduino:inoListModels",
                    "mcduino:inoInit",
                    "tool-bar:toggle"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz"
            },
            "description": "Arduino for Atom",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.10.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.10.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.10.0",
            "sha": "9200495142722c836f4b07f86ceceb4b440323fe"
        },
        "0.9.0": {
            "activationCommands": {
                "atom-workspace": [
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:inoCheck",
                    "mcduino:inoClean",
                    "mcduino:inoBuild",
                    "mcduino:inoUpload",
                    "mcduino:inoSerial",
                    "mcduino:inoListModels",
                    "mcduino:inoInit",
                    "tool-bar:toggle"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz"
            },
            "description": "Arduino for Atom",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.9.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.9.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.9.0",
            "sha": "4ff908be271441d4b819fed9f1374de7a2599bf3"
        },
        "0.8.0": {
            "activationCommands": {
                "atom-workspace": [
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:inoCheck",
                    "mcduino:inoClean",
                    "mcduino:inoBuild",
                    "mcduino:inoUpload",
                    "mcduino:inoSerial",
                    "mcduino:inoListModels",
                    "mcduino:inoInit",
                    "tool-bar:toggle"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz"
            },
            "description": "Arduino for Atom",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.8.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.8.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.8.0",
            "sha": "99e26ac3f50fd3b9161e1b909a64e1bce221cfd6"
        },
        "0.7.0": {
            "activationCommands": {
                "atom-workspace": [
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:inoCheck",
                    "mcduino:inoClean",
                    "mcduino:inoBuild",
                    "mcduino:inoUpload",
                    "mcduino:inoSerial",
                    "mcduino:inoListModels",
                    "mcduino:inoInit",
                    "tool-bar:toggle"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz"
            },
            "description": "Arduino for Atom",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.7.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.7.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.7.0",
            "sha": "00285285ada09bf7c4d833307a53e9d4c35b312a"
        },
        "0.6.0": {
            "activationCommands": {
                "atom-workspace": [
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:inoCheck",
                    "mcduino:inoClean",
                    "mcduino:inoBuild",
                    "mcduino:inoUpload",
                    "mcduino:inoSerial",
                    "mcduino:inoListModels",
                    "mcduino:inoInit"
                ]
            },
            "author": "Marcelo Correia",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz"
            },
            "description": "Arduino for Atom",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "license": "MIT",
            "main": "./lib/main",
            "name": "mcduino",
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "version": "0.6.0",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.6.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcelocorreia/mcduino/tarball/refs/tags/v0.6.0",
            "sha": "6725ab47810f9b829ce84efdec3ea49f76a9030c"
        },
        "0.5.0": {
            "name": "mcduino",
            "main": "./lib/main",
            "version": "0.5.0",
            "description": "Arduino for Atom",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "author": "Marcelo Correia",
            "activationCommands": {
                "atom-workspace": [
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:inoCheck",
                    "mcduino:inoClean",
                    "mcduino:inoBuild",
                    "mcduino:inoUpload",
                    "mcduino:inoSerial",
                    "mcduino:inoListModels",
                    "mcduino:inoPreproc",
                    "mcduino:inoInit"
                ]
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "license": "MIT",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz"
            },
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.5.0/tarball"
            }
        },
        "0.4.0": {
            "name": "mcduino",
            "main": "./lib/main",
            "version": "0.4.0",
            "description": "Arduino for Atom",
            "keywords": [
                "arduino",
                "mcduino",
                "avr",
                "c++"
            ],
            "homepage": "https://github.com/marcelocorreia/mcduino",
            "bugs": "https://github.com/marcelocorreia/mcduino",
            "author": "Marcelo Correia",
            "activationCommands": {
                "atom-workspace": [
                    "mcduino:run",
                    "mcduino:toggle-panel",
                    "mcduino:kill-last-command",
                    "mcduino:inoCheck",
                    "mcduino:inoClean",
                    "mcduino:inoBuild",
                    "mcduino:inoUpload",
                    "mcduino:inoSerial",
                    "mcduino:inoListModels",
                    "mcduino:inoPreproc",
                    "mcduino:inoInit"
                ]
            },
            "repository": "https://github.com/marcelocorreia/mcduino",
            "license": "MIT",
            "engines": {
                "atom": ">=0.174.0 <2.0.0"
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.3",
                "pty.js": "https://github.com/chjj/pty.js/archive/master.tar.gz"
            },
            "package-dependencies": {
                "tool-bar": "^0.1.0"
            },
            "consumedServices": {
                "tool-bar": {
                    "versions": {
                        "^0.1.0": "consumeToolBar"
                    }
                }
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/mcduino/versions/0.4.0/tarball"
            }
        }
    },
    "readme": "# MCduino Arduino Package for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Tested on Debian 8.1)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n# ROADMAP\n- ~~Read boards from Arduino's boards.txt~~\n- Improve test coverage\n- Read serial ports from OS\n- ~~Add compiler flags settings~~\n- Linux support\n- Support for Arduino 1.6.x\n\n# Resources & Docs\n\n### Dependencies\n- [Arduino IDE 1.0.x](http://arduino.cc)\n- [Python](https://www.python.org)\n- [Inotool](http://inotool.org)\n- [Suda tool-bar](https://github.com/suda/tool-bar) (optional)\n\n##Installing MCduino\n- Install Arduino and Inotool (Instructions below)\n\n\n### Download Arduino 1.0.0\n  - [MacOS](http://arduino.cc/download.php?f=/arduino-1.6.3-macosx.zip)\n  - [Linux64](http://arduino.cc/download.php?f=/arduino-1.6.3-linux64.tar.xz)\n  - [Linux32](http://arduino.cc/download.php?f=/arduino-1.6.3-linux32.tar.xz)\n\n---\n## Installing Arduino\n![Arduino logo](https://store.arduino.cc/includes/images/stickers_logo_text.png)\n###MacOS\n1. Download arduino. ([MacOS](http://arduino.cc/download.php?f=/arduino-1.6.3-macosx.zip) |  [Linux64](http://arduino.cc/download.php?f=/arduino-1.6.3-linux64.tar.xz) | [Linux32](http://arduino.cc/download.php?f=/arduino-1.6.3-linux32.tar.xz))\n2. Copy the Arduino application into the Applications folder (or elsewhere on your computer)\n\nIf you're using an Arduino Uno or Mega 2560, you don't have any drivers to install. Skip ahead to the next step.\nIf you're using an older board (Duemilanove, Diecimila, or any board with an FTDI driver chip.\n\nYou will need to install the drivers for the FTDI chip on the board. You need to download the latest version of the drivers from the [FTDI website](http://www.ftdichip.com/Drivers/VCP.htm). One downloaded, double click the package, and follow the instructions in the installer. You'll need to restart your computer after installing the drivers.\n\n---\n\n###Linux\nInstalling Arduino on Linux, for more detailed instructions, pick your distribution:\n\n\n[ArchLinux](http://playground.arduino.cc/Linux/ArchLinux)\n\n[CentOS]( http://playground.arduino.cc/Linux/CentOS6)\n\n[Debian](http://playground.arduino.cc/Linux/Debian)\n\n[Fedora](http://playground.arduino.cc/Linux/Fedora)\n\n[Gentoo](http://playground.arduino.cc/Linux/Gentoo)\n\n[Mageia](http://playground.arduino.cc/Linux/Mageia)\n\n[MEPIS](http://playground.arduino.cc/Linux/MEPIS)\n\n[Mint](http://playground.arduino.cc/Linux/Mint)\n\n[openSUSE](http://playground.arduino.cc/Linux/OpenSUSE)\n\n[Puppy](http://playground.arduino.cc/Linux/Puppy)\n\n[Pussy](http://playground.arduino.cc/Linux/Pussy)\n\n[Slackware](http://playground.arduino.cc/Linux/Slackware)\n\n[Ubuntu](http://playground.arduino.cc/Linux/Ubuntu)\n\n[Xandros](http://playground.arduino.cc/Linux/Xandros)\n\n[All \"the hard way\"](http://playground.arduino.cc/Linux/All)\n\n\n---\n\n## Inotool Resources and Install Guide\n![Inotool logo](http://inotool.org/_static/logo.png)\n\n###Ino\n\nIno is a command line toolkit for working with Arduino hardware\n\nIt allows you to:\n\nQuickly create new projects\nBuild a firmware from multiple source files and libraries\nUpload the firmware to a device\nPerform serial communication with a device (aka serial monitor)\nIno may replace Arduino IDE UI if you prefer to work with command line and an editor of your choice or if you want to integrate Arduino build process to 3-rd party IDE.\n\nIno is based on make to perform builds. However Makefiles are generated automatically and you’ll never see them if you don’t want to.\n\nFeatures\n\nSimple. No build scripts are necessary.\nOut-of-source builds. Directories with source files are not cluttered with intermediate object files.\nSupport for \\*.ino and \\*.pde sketches as well as raw \\*.c and \\*.cpp.\nSupport for Arduino Software versions 1.x as well as 0.x.\nAutomatic dependency tracking. Referred libraries are automatically included in the build process. Changes in \\*.h files lead to recompilation of sources which include them.\nPretty colorful output.\nSupport for all boards that are supported by Arduino IDE.\nFast. Discovered tool paths and other stuff is cached across runs. If nothing has changed, nothing is build.\nFlexible. Support for simple ini-style config files to setup machine-specific info like used Arduino model, Arduino distribution path, etc just once.\n\n### Installation\nFrom source:\n- [Download latest source tarball](http://pypi.python.org/pypi/ino/#downloads)\n- Or clone it from GitHub: git clone git://github.com/amperka/ino.git\n- Do make install to perform installation under /usr/local\n- Or see INSTALL for instructions on changing destination directory\n\nWith Python setup tools:\n- Either pip install ino\n- Or easy_install ino\n\n\n### Requirements\n- Python 2.6+\n- Arduino IDE distribution\n\n\n### Limitations\nAs for current version, ino works only in Linux and MacOS. However it was created with other OS users in mind, so it will eventually get full cross-platform support. Help from Windows-developers is much appreciated.\n\n### Getting Help\n- Take a look at [Quick start tutorial](http://inotool.org/quickstart).\n- Run ino --help.\n- Post [issues to GitHub](http://github.com/amperka/ino/issues).\n\n---\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
    "metadata": {
        "activationCommands": {
            "atom-workspace": [
                "tool-bar:toggle",
                "mcduino:run",
                "mcduino:toggle-panel",
                "mcduino:kill-last-command",
                "mcduino:ino-check",
                "mcduino:ino-clean",
                "mcduino:ino-build",
                "mcduino:ino-upload",
                "mcduino:ino-serial",
                "mcduino:ino-list-models",
                "mcduino:ino-new-project",
                "mcduino:board-select",
                "mcduino:boards-txt",
                "mcduino:dev-test"
            ]
        },
        "author": "Marcelo Correia",
        "bugs": "https://github.com/marcelocorreia/mcduino",
        "consumedServices": {
            "tool-bar": {
                "versions": {
                    "^0.1.0": "consumeToolBar"
                }
            }
        },
        "dependencies": {
            "atom-space-pen-views": "^2.0.3",
            "line-reader": "^0.2.4",
            "pty.js": "^0.3.0",
            "shelljs": "^0.5.1"
        },
        "description": "Arduino for Atom",
        "devDependencies": {},
        "engines": {
            "atom": ">=0.174.0 <2.0.0"
        },
        "homepage": "https://github.com/marcelocorreia/mcduino",
        "keywords": [
            "arduino",
            "mcduino",
            "avr",
            "c++"
        ],
        "license": "MIT",
        "main": "./lib/main",
        "name": "mcduino",
        "package-dependencies": {
            "tool-bar": "^0.1.0"
        },
        "readmeFilename": "README.md",
        "readme": "# MCduino Arduino plugin for Atom\nArduino 1.0.x support in [Atom](http://atom.io).\n\nBased on [Inotool](http://inotool.org)\n\n- More information at\n  - [Atom Packages](https://atom.io/packages/mcduino)  \n  - [Github](https://github.com/marcelocorreia/mcduino)  \n\nOriginally derived from Kyle Lacy's [run-command](https://github.com/kylewlacy/run-command).\n\nOptional Toolbar powered by https://github.com/suda/tool-bar\n\n\n###Currently for Arduino 1.0.x only and Unix based systems\n- MacOS (Tested on 10.10.14)\n- Linux (Not tested)\n- FreeBSD (Not tested)\n- OpenBSD (Not tested)\n\n![Screenshot](https://raw.githubusercontent.com/marcelocorreia/mcduino/master/screenshots/mcduino-screenshot.png)\n---\n\n#Compiler Extra Options & Flags\n\n```\n--make MAKE           Specifies the make tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"make\".\n\n--cc COMPILER         Specifies the compiler used for C files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-gcc\".\n\n\n--cxx COMPILER        Specifies the compiler used for C++ files. If a full\n                      path is not given, searches in Arduino directories\n                      before PATH. Default: \"avr-g++\".\n\n\n--ar AR               Specifies the AR tool to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-ar\".\n\n\n--objcopy OBJCOPY     Specifies the OBJCOPY to use. If a full path is not\n                      given, searches in Arduino directories before PATH.\n                      Default: \"avr-objcopy\".\n\n\n-f FLAGS, --cppflags FLAGS\n                      Flags that will be passed to the compiler. Note that\n                      multiple (space-separated) flags must be surrounded by\n                      quotes, e.g. `--cppflags=\"-DC1 -DC2\"' specifies flags\n                      to define the constants C1 and C2. Default:\n                      \"-ffunction-sections -fdata-sections -g -Os -w\".\n\n\n--cflags FLAGS        Like --cppflags, but the flags specified are only\n                      passed to compilations of C source files. Default: \"\".\n\n\n--cxxflags FLAGS      Like --cppflags, but the flags specified are only\n                      passed to compilations of C++ source files. Default:\n                      \"-fno-exceptions\".\n\n\n--ldflags FLAGS       Like --cppflags, but the flags specified are only\n                      passed during the linking stage. Note these flags\n                      should be specified as if `ld' were being invoked\n                      directly (i.e. the `-Wl,' prefix should be omitted).\n                      Default: \"-Os --gc-sections\".\n```\n",
        "repository": "https://github.com/marcelocorreia/mcduino",
        "version": "1.5.0"
    },
    "created": 1658357378205,
    "updated": 1658357378205,
    "star_gazers": [],
    "creation_method": "Migrated from Atom.io"
}