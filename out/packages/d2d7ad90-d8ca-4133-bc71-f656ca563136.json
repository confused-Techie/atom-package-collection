{
    "name": "atom-holochain-snippets",
    "repository": {
        "type": "git",
        "url": "https://github.com/marcusnewton1/atom-holochain-snippets"
    },
    "downloads": 109,
    "stargazers_count": 1,
    "releases": {
        "latest": "0.3.3"
    },
    "versions": {
        "0.3.3": {
            "name": "atom-holochain-snippets",
            "version": "0.3.3",
            "description": "Atom package containing snippets for the Rust version of the Holochain development kit (rust-hdk)",
            "keywords": [
                "atom",
                "holochain",
                "holochain-snippets"
            ],
            "author": {
                "name": "Marcus Newton",
                "url": "https://github.com/marcusnewton1"
            },
            "activationCommands": {
                "atom-workspace": "holochain-snippets:toggle"
            },
            "repository": "https://github.com/marcusnewton1/atom-holochain-snippets",
            "license": "MIT",
            "engines": {
                "atom": ">=1.0.0"
            },
            "dependencies": {},
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-holochain-snippets/versions/0.3.3/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcusnewton/atom-holochain-snippets/tarball/refs/tags/v0.3.3",
            "sha": "ba860a58668e16c308510d6ea1a06bbcce6e9765"
        },
        "0.3.2": {
            "name": "atom-holochain-snippets",
            "version": "0.3.2",
            "description": "Atom package containing snippets for the Rust version of the Holochain development kit (rust-hdk)",
            "keywords": [
                "atom",
                "holochain",
                "holochain-snippets"
            ],
            "author": {
                "name": "Marcus Newton",
                "url": "https://github.com/marcusnewton1"
            },
            "activationCommands": {
                "atom-workspace": "holochain-snippets:toggle"
            },
            "repository": "https://github.com/marcusnewton1/atom-holochain-snippets",
            "license": "MIT",
            "engines": {
                "atom": ">=1.0.0"
            },
            "dependencies": {},
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-holochain-snippets/versions/0.3.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcusnewton/atom-holochain-snippets/tarball/refs/tags/v0.3.2",
            "sha": "b83ca16f722eea1e06b1d28f64a822cb3542218c"
        },
        "0.3.1": {
            "name": "atom-holochain-snippets",
            "version": "0.3.1",
            "description": "Atom package containing snippets for the Rust version of the Holochain development kit (rust-hdk)",
            "keywords": [
                "atom",
                "holochain",
                "holochain-snippets"
            ],
            "author": {
                "name": "Marcus Newton",
                "url": "https://github.com/marcusnewton1"
            },
            "activationCommands": {
                "atom-workspace": "holochain-snippets:toggle"
            },
            "repository": "https://github.com/marcusnewton1/atom-holochain-snippets",
            "license": "MIT",
            "engines": {
                "atom": ">=1.0.0"
            },
            "dependencies": {},
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-holochain-snippets/versions/0.3.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcusnewton/atom-holochain-snippets/tarball/refs/tags/v0.3.1",
            "sha": "b69667a9413cfe6742bab30137089fa810e54dca"
        },
        "0.3.0": {
            "name": "atom-holochain-snippets",
            "version": "0.3.0",
            "description": "Atom package containing snippets for the Rust version of the Holochain development kit (rust-hdk)",
            "keywords": [
                "atom",
                "holochain",
                "holochain-snippets"
            ],
            "author": {
                "name": "Marcus Newton",
                "url": "https://github.com/marcusnewton1"
            },
            "activationCommands": {
                "atom-workspace": "holochain-snippets:toggle"
            },
            "repository": "https://github.com/marcusnewton1/atom-holochain-snippets",
            "license": "MIT",
            "engines": {
                "atom": ">=1.0.0"
            },
            "dependencies": {},
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-holochain-snippets/versions/0.3.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/marcusnewton/atom-holochain-snippets/tarball/refs/tags/v0.3.0",
            "sha": "c4ef9ddbafaf29e56a289884c4a227f6cdb77a45"
        }
    },
    "readme": "# atom-holochain-snippets\n\nAtom package for Holochain snippets (hdk-rust)\n\n[Install](https://atom.io/packages/atom-holochain-snippets)\n\nSnippets:\n\n| snippet | result |\n| ---     | ---    |\n| hclib | Default crate imports for main lib.rs file |\n| hcmod | Default crate imports for modules where you define application logic |\n| hczome | define_zome! macro |\n| hcdef | definition() |\n| hcentry | entry! macro |\n| hcfun | zome function |\n| hclink | link! macro |\n| hcfrom | from! macro |\n| hcto | to! macro |\n| hcstruct | new entry struct/impl |\n| hccreate | basic create entry function |\n| hcget | basic get entry function |\n| hcupdate | basic update entry function |\n| hcdelete | basic delete entry function |\n| hcsend | basic send payload function |\n\n<hr>\n\n### hclib \nDefault crate imports for main lib.rs file\n```rust\n#![feature(try_from)]\n#[macro_use]\nextern crate hdk;\nextern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n#[macro_use]\nextern crate holochain_core_types_derive;\n\nuse hdk::{\n    entry_definition::ValidatingEntryType,\n    error::ZomeApiResult,\n};\n\nuse hdk::holochain_core_types::{\n    cas::content::Address,\n    entry::Entry,\n    dna::entry_types::Sharing,\n    error::HolochainError,\n    json::JsonString,\n    validation::EntryValidationData\n};\n```\n\n### hcmod \nDefault crate imports for modules where you define application logic\n```rust\nuse hdk::{\n    self,\n    error::{ZomeApiError, ZomeApiResult},\n    holochain_core_types::{\n        cas::content::Address,\n        dna::capabilities::CapabilityRequest,\n        entry::{cap_entries::CapabilityType, entry_type::EntryType, Entry},\n        error::HolochainError,\n        json::JsonString,\n        signature::{Provenance, Signature},\n    },\n    holochain_wasm_utils::api_serialization::{\n        commit_entry::CommitEntryOptions,\n        get_entry::{\n            EntryHistory, GetEntryOptions, GetEntryResult, GetEntryResultType, StatusRequestKind,\n        },\n        get_links::{GetLinksOptions, GetLinksResult},\n        QueryArgsOptions, QueryResult,\n    },\n    AGENT_ADDRESS, AGENT_ID_STR, CAPABILITY_REQ, DNA_ADDRESS, DNA_NAME, PROPERTIES, PUBLIC_TOKEN,\n};\n```\n\n### hczome \ndefine_zome! macro\n```rust\ndefine_zome! {\n    entries: [\n        $1\n    ]\n    \n    genesis: || {\n        Ok(())\n    }\n    \n    functions: [\n    \n    ]\n    \n    traits: {\n        hc_public [\n        \n        ]\n    }\n}\n```\n\n### hcdef \ndefinition()\n```rust\npub fn definition() -> ValidatingEntryType {\n    $1\n}\n```\n\n### hcentry \nentry! macro\n```rust\nentry!(\n    name: ${1:\"myentry\"},\n    description: ${2:\"description\"},\n    sharing: Sharing::${3:Public},\n    validation_package: || {\n        hdk::ValidationPackageDefinition::${4:Entry}\n    },\n    validation: |_validation_data: ValidationData<${5:EntryType}>| {\n        ${6:Ok(())}\n    },\n    links: [\n        $7\n    ]\n)\n```\n\n### hcfun \nzome function\n```rust\n${1:my_function_name}: {\n    inputs: | $2 |,\n    outputs: | $3 |,\n    handler: handle_${1:my_function_name}\n}\n```\n\n### hclink \nlink! macro\n```rust\nlink!(\n    hdk::LinkDirection::${1:From},\n    ${2:\"%agent_id\"},\n    link_type: ${3:\"my_link_type\"},\n    validation_package: || {\n        hdk::ValidationPackageDefinition::${4:ChainFull}\n    },\n    validation: | _validation_data: hdk::LinkValidationData | {\n        ${5:Ok(())}\n    }\n)\n```\n\n### hcfrom \nfrom! macro\n```rust\nfrom!(\n    ${1:\"%agent_id\"},\n    link_type: ${2:\"my_link_type\"},\n    validation_package: || {\n        hdk::ValidationPackageDefinition::${3:ChainFull}\n    },\n    validation: | _validation_data: hdk::LinkValidationData | {\n        ${4:Ok(())}\n    }\n)\n```\n\n### hcto \nto! macro\n```rust\nto!(\n    ${1:\"entry_name\"},\n    link_type: ${2:\"my_link_type\"},\n    validation_package: || {\n        hdk::ValidationPackageDefinition::${3:ChainFull}\n    },\n    validation: | _validation_data: hdk::LinkValidationData | {\n        ${4:Ok(())}\n    }\n)\n```\n\n### hcstruct \nnew entry struct + impl\n```rust\n#[derive(Serialize, Deserialize, Debug, DefaultJson)]\nstruct ${1:MyEntryType} {\n    ${2:my_field}: String\n}\n\nimpl ${1:MyEntryType} {\n    pub fn new(${2:my_field}: &str) -> ${1:MyEntryType} {\n        ${1:MyEntryType} {\n            ${2:my_field}: ${2:my_field}.to_owned()\n        }\n    }\n    \n    pub fn ${2:my_field}(&self) -> String {\n        self.${2:my_field}.clone()\n    }\n}\n```\n\n### hccreate \nbasic create entry function\n```rust\nfn handle_create_${1:my_entry}(${2:my_field}: String) -> ZomeApiResult<Address> {\n    let address = hdk::commit_entry(Entry::App(\"${1:my_entry}\".into(), ${3:MyEntryType}::new(&${2:my_field}, \"now\").into()))?;\n    Ok(address)\n}\n```\n\n### hcget \nbasic get entry function\n```rust\nfn handle_get_${1:my_entry}(${1:my_entry}_address: Address) -> ZomeApiResult<Option<Entry>> {\n    hdk::get_entry(&${1:my_entry}_address)\n}\n```\n\n### hcupdate \nbasic update entry function\n```rust\nfn handle_update_${1:my_entry}(${1:my_entry}_address: Address, new_content: ${3:String}) -> ZomeApiResult<Address> {\n    let updated_${1:my_entry} = Entry::App(\n        \"${1:my_entry}\".into(),\n        ${2:MyEntryType}::new(&new_content).into(),\n    );\n    hdk::update_entry(updated_${1:my_entry}, &${1:my_entry}_address)\n}\n```\n\n### hcdelete \nbasic delete entry function\n```rust\nfn handle_delete_${1:my_entry}(${1:my_entry}_address: Address) -> ZomeApiResult<Address> {\n    hdk::get_entry(&${1:my_entry}_address)?;\n    hdk::remove_entry(&${1:my_entry}_address)\n}\n```\n\n### hcsend \nbasic send payload function\n```rust\nfn handle_send_${1:my_payload}(to_agent: Address, payload: ${2:String}) -> ZomeApiResult<String> {\n    hdk::send(to_agent, payload, ${3:60000}.into())\n}\n```\n",
    "metadata": {
        "name": "atom-holochain-snippets",
        "version": "0.3.3",
        "description": "Atom package containing snippets for the Rust version of the Holochain development kit (rust-hdk)",
        "keywords": [
            "atom",
            "holochain",
            "holochain-snippets"
        ],
        "author": {
            "name": "Marcus Newton",
            "url": "https://github.com/marcusnewton1"
        },
        "activationCommands": {
            "atom-workspace": "holochain-snippets:toggle"
        },
        "repository": "https://github.com/marcusnewton1/atom-holochain-snippets",
        "license": "MIT",
        "engines": {
            "atom": ">=1.0.0"
        },
        "dependencies": {}
    },
    "created": 1658332588714,
    "updated": 1658332588714,
    "star_gazers": [],
    "creation_method": "Migrated from Atom.io"
}