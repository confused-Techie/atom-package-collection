{
    "name": "lazy-unity-helper",
    "repository": {
        "type": "git",
        "url": "https://github.com/DarrenTsung/lazy-unity-helper"
    },
    "downloads": 4953,
    "stargazers_count": 2,
    "releases": {
        "latest": "0.1.0"
    },
    "versions": {
        "0.1.0": {
            "name": "lazy-unity-helper",
            "main": "./lib/lazy-unity-helper",
            "version": "0.1.0",
            "description": "A non-efficient package for functions that help unity development",
            "keywords": [],
            "activationCommands": {
                "atom-workspace": "lazy-unity-helper:jump-to-definition"
            },
            "repository": "https://github.com/darrentsung/lazy-unity-helper",
            "license": "MIT",
            "engines": {
                "atom": ">=1.0.0 <2.0.0"
            },
            "dependencies": {
                "atom-space-pen-views": "^2.0.5",
                "fuzzaldrin": "^2.0"
            },
            "dist": {
                "tarball": "https://www.atom.io/api/packages/lazy-unity-helper/versions/0.1.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/DarrenTsung/lazy-unity-helper/tarball/refs/tags/v0.1.0",
            "sha": "c306d3ed859e2cb82d44d8da22fd58f68c425fd3"
        }
    },
    "readme": "# lazy-unity-helper package\n\nA non-efficient package for functions that help unity development\n\n      'lazy-unity-helper:insert-inherited-functions': => \n        # Function Overview: (this works / is tested for c# only)\n        # 1. does a regex search for the base class name\n        # 2. searches project for files with 'public BaseClassName '\n        # 3. if files.length == 1, use that file otherwise present user list of files to choose\n        # 4. regex search for all virtual / override functions\n        # 5. insert them where the user cursor is\n        \n      'lazy-unity-helper:jump-to-definition': => \n        # Function Overview: (this works / is tested for c# only)\n        # 1. verifies that the current word under cursor looks like a function\n        # 2. makes a regex pattern that matches methods with same # of params and name\n        # 3. find all matches in all files found and the row index\n        # 4. if only one match, use that match otherwise present user with list of matches\n        # 5. go to that filePath / that row index\n",
    "metadata": {
        "name": "lazy-unity-helper",
        "main": "./lib/lazy-unity-helper",
        "version": "0.1.0",
        "description": "A non-efficient package for functions that help unity development",
        "keywords": [],
        "activationCommands": {
            "atom-workspace": "lazy-unity-helper:jump-to-definition"
        },
        "repository": "https://github.com/darrentsung/lazy-unity-helper",
        "license": "MIT",
        "engines": {
            "atom": ">=1.0.0 <2.0.0"
        },
        "dependencies": {
            "atom-space-pen-views": "^2.0.5",
            "fuzzaldrin": "^2.0"
        }
    },
    "created": 1658350448450,
    "updated": 1658350448450,
    "star_gazers": [],
    "creation_method": "Migrated from Atom.io"
}