{
    "name": "atom-ide-code-format",
    "repository": {
        "type": "git",
        "url": "https://github.com/atom-community/atom-ide-code-format"
    },
    "downloads": 207094,
    "stargazers_count": 9,
    "releases": {
        "latest": "1.0.3"
    },
    "versions": {
        "1.0.3": {
            "name": "atom-ide-code-format",
            "displayName": "Code Formatting for Atom IDE",
            "repository": "https://github.com/atom-community/atom-ide-code-format",
            "main": "./dist/main.js",
            "version": "1.0.3",
            "description": "Provides a code-formatting provider API",
            "scripts": {
                "format": "prettier --write .",
                "test.format": "prettier . --check",
                "lint": "eslint . --fix",
                "test.lint": "eslint .",
                "test": "npm run build.unit && npm run test.only",
                "test.only": "atom --test ./dist/spec",
                "clean": "shx rm -rf dist",
                "build.unit": "tsc -p ./tsconfig.json",
                "dev": "npm run clean && cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=true rollup -c -w",
                "build": "npm run clean && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=true rollup -c ",
                "build-commit": "build-commit -o dist",
                "bump": "ncu -u -x coffeescript",
                "prepare": "npm run build"
            },
            "atomTestRunner": "./dist/spec/runner",
            "activationHooks": [
                "core:loaded-shell-environment"
            ],
            "engines": {
                "atom": ">=1.52.0 <2.0.0"
            },
            "consumedServices": {
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                },
                "nuclide-code-format.provider": {
                    "versions": {
                        "0.0.0": "consumeLegacyProvider"
                    }
                },
                "code-format.range": {
                    "versions": {
                        "0.1.0": "consumeRangeProvider"
                    }
                },
                "code-format.file": {
                    "versions": {
                        "0.1.0": "consumeFileProvider"
                    }
                },
                "code-format.onType": {
                    "versions": {
                        "0.1.0": "consumeOnTypeProvider"
                    }
                },
                "code-format.onSave": {
                    "versions": {
                        "0.1.0": "consumeOnSaveProvider"
                    }
                }
            },
            "dependencies": {
                "@atom-ide-community/nuclide-commons": "^0.8.3",
                "@atom-ide-community/nuclide-commons-atom": "^0.8.3",
                "log4js": "6.4.4"
            },
            "devDependencies": {
                "@artemv/wait-until-promise": "^1.1.2",
                "@types/atom": "1.40.11",
                "@types/jasmine": "^3.8.1",
                "@types/node": "^16.3.2",
                "atom-ide-base": "^3.3.0",
                "atom-jasmine3-test-runner": "^5.2.7",
                "babel-preset-atomic": "^4.1.0",
                "build-commit": "0.1.4",
                "cross-env": "^7.0.3",
                "eslint-config-atomic": "^1.16.1",
                "prettier-config-atomic": "^2.0.5",
                "rollup-plugin-atomic": "^3.0.0",
                "shx": "^0.3.3",
                "temp": "^0.9.4",
                "typescript": "^4.3.5",
                "waitit": "^1.0.3"
            },
            "prettier": "prettier-config-atomic",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-ide-code-format/versions/1.0.3/tarball"
            },
            "tarball_url": "https://api.github.com/repos/atom-community/atom-ide-code-format/tarball/refs/tags/v1.0.3",
            "sha": "a11dcdef814fff5b2b8f40d4d25f40c2b9d46189"
        },
        "1.0.2": {
            "name": "atom-ide-code-format",
            "displayName": "Code Formatting for Atom IDE",
            "repository": "https://github.com/atom-community/atom-ide-code-format",
            "main": "./dist/main.js",
            "version": "1.0.2",
            "description": "Provides a code-formatting provider API",
            "scripts": {
                "format": "prettier --write .",
                "test.format": "prettier . --check",
                "lint": "eslint . --fix",
                "test.lint": "eslint .",
                "test": "npm run build.unit && npm run test.only",
                "test.only": "atom --test ./dist/spec",
                "clean": "shx rm -rf dist",
                "build.unit": "tsc -p ./tsconfig.json",
                "dev": "npm run clean && cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=true rollup -c -w",
                "build": "npm run clean && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=true rollup -c ",
                "build-commit": "build-commit -o dist",
                "bump": "ncu -u -x coffeescript",
                "prepare": "npm run build"
            },
            "atomTestRunner": "./dist/spec/runner",
            "activationHooks": [
                "core:loaded-shell-environment"
            ],
            "engines": {
                "atom": ">=1.52.0 <2.0.0"
            },
            "consumedServices": {
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                },
                "nuclide-code-format.provider": {
                    "versions": {
                        "0.0.0": "consumeLegacyProvider"
                    }
                },
                "code-format.range": {
                    "versions": {
                        "0.1.0": "consumeRangeProvider"
                    }
                },
                "code-format.file": {
                    "versions": {
                        "0.1.0": "consumeFileProvider"
                    }
                },
                "code-format.onType": {
                    "versions": {
                        "0.1.0": "consumeOnTypeProvider"
                    }
                },
                "code-format.onSave": {
                    "versions": {
                        "0.1.0": "consumeOnSaveProvider"
                    }
                }
            },
            "dependencies": {
                "@atom-ide-community/nuclide-commons": "^0.8.3",
                "@atom-ide-community/nuclide-commons-atom": "^0.8.3",
                "log4js": "6.3.0"
            },
            "devDependencies": {
                "@artemv/wait-until-promise": "^1.1.2",
                "@types/atom": "1.40.11",
                "@types/jasmine": "^3.8.1",
                "@types/node": "^16.3.2",
                "atom-ide-base": "^3.3.0",
                "atom-jasmine3-test-runner": "^5.2.7",
                "babel-preset-atomic": "^4.1.0",
                "build-commit": "0.1.4",
                "cross-env": "^7.0.3",
                "eslint-config-atomic": "^1.16.1",
                "prettier-config-atomic": "^2.0.5",
                "rollup-plugin-atomic": "^2.3.2",
                "shx": "^0.3.3",
                "temp": "^0.9.4",
                "typescript": "^4.3.5",
                "waitit": "^1.0.3"
            },
            "prettier": "prettier-config-atomic",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-ide-code-format/versions/1.0.2/tarball"
            },
            "tarball_url": "https://api.github.com/repos/atom-community/atom-ide-code-format/tarball/refs/tags/v1.0.2",
            "sha": "1c978408a85911afe7ea70734607c997deffb26c"
        },
        "1.0.1": {
            "name": "atom-ide-code-format",
            "displayName": "Code Formatting for Atom IDE",
            "repository": "https://github.com/atom-community/atom-ide-code-format",
            "main": "./dist/main.js",
            "version": "1.0.1",
            "description": "Provides a code-formatting provider API",
            "scripts": {
                "format": "prettier --write .",
                "test.format": "prettier . --check",
                "lint": "eslint . --fix",
                "test.lint": "eslint .",
                "test": "npm run build.unit && npm run test.only",
                "test.only": "atom --test ./dist/spec",
                "clean": "shx rm -rf dist",
                "build.unit": "tsc -p ./tsconfig.json",
                "dev": "npm run clean && cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=true rollup -c -w",
                "build": "npm run clean && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=true rollup -c ",
                "build-commit": "build-commit -o dist",
                "bump": "ncu -u -x coffeescript",
                "prepare": "npm run build"
            },
            "atomTestRunner": "./dist/spec/runner",
            "activationHooks": [
                "core:loaded-shell-environment"
            ],
            "engines": {
                "atom": ">=1.52.0 <2.0.0"
            },
            "consumedServices": {
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                },
                "nuclide-code-format.provider": {
                    "versions": {
                        "0.0.0": "consumeLegacyProvider"
                    }
                },
                "code-format.range": {
                    "versions": {
                        "0.1.0": "consumeRangeProvider"
                    }
                },
                "code-format.file": {
                    "versions": {
                        "0.1.0": "consumeFileProvider"
                    }
                },
                "code-format.onType": {
                    "versions": {
                        "0.1.0": "consumeOnTypeProvider"
                    }
                },
                "code-format.onSave": {
                    "versions": {
                        "0.1.0": "consumeOnSaveProvider"
                    }
                }
            },
            "dependencies": {
                "@atom-ide-community/nuclide-commons": "^0.8.3",
                "@atom-ide-community/nuclide-commons-atom": "^0.8.3",
                "log4js": "6.3.0"
            },
            "devDependencies": {
                "@artemv/wait-until-promise": "^1.1.2",
                "@types/atom": "1.40.11",
                "@types/jasmine": "^3.8.1",
                "@types/node": "^16.3.2",
                "atom-ide-base": "^3.3.0",
                "atom-jasmine3-test-runner": "^5.2.7",
                "babel-preset-atomic": "^4.1.0",
                "build-commit": "0.1.4",
                "cross-env": "^7.0.3",
                "eslint-config-atomic": "^1.16.1",
                "prettier-config-atomic": "^2.0.5",
                "rollup-plugin-atomic": "^2.3.2",
                "shx": "^0.3.3",
                "temp": "^0.9.4",
                "typescript": "^4.3.5",
                "waitit": "^1.0.3"
            },
            "prettier": "prettier-config-atomic",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-ide-code-format/versions/1.0.1/tarball"
            },
            "tarball_url": "https://api.github.com/repos/atom-community/atom-ide-code-format/tarball/refs/tags/v1.0.1",
            "sha": "bad8ebde91cde2f379ecd458e815cf0ce9ebc416"
        },
        "1.0.0": {
            "name": "atom-ide-code-format",
            "displayName": "Code Formatting for Atom IDE",
            "repository": "https://github.com/atom-community/atom-ide-code-format",
            "main": "./dist/main.js",
            "version": "1.0.0",
            "description": "Provides a code-formatting provider API",
            "scripts": {
                "format": "prettier --write .",
                "test.format": "prettier . --check",
                "lint": "eslint . --fix",
                "test.lint": "eslint .",
                "test": "npm run build.unit && npm run test.only",
                "test.only": "atom --test ./dist/spec",
                "clean": "shx rm -rf dist",
                "build.unit": "tsc -p ./tsconfig.json",
                "dev": "npm run clean && cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=true rollup -c -w",
                "build": "npm run clean && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=true rollup -c ",
                "build-commit": "build-commit -o dist",
                "bump": "ncu -u -x coffeescript",
                "prepare": "npm run build"
            },
            "atomTestRunner": "./dist/spec/runner",
            "activationHooks": [
                "core:loaded-shell-environment"
            ],
            "engines": {
                "atom": ">=1.52.0 <2.0.0"
            },
            "consumedServices": {
                "atom-ide-busy-signal": {
                    "versions": {
                        "0.1.0": "consumeBusySignal"
                    }
                },
                "nuclide-code-format.provider": {
                    "versions": {
                        "0.0.0": "consumeLegacyProvider"
                    }
                },
                "code-format.range": {
                    "versions": {
                        "0.1.0": "consumeRangeProvider"
                    }
                },
                "code-format.file": {
                    "versions": {
                        "0.1.0": "consumeFileProvider"
                    }
                },
                "code-format.onType": {
                    "versions": {
                        "0.1.0": "consumeOnTypeProvider"
                    }
                },
                "code-format.onSave": {
                    "versions": {
                        "0.1.0": "consumeOnSaveProvider"
                    }
                }
            },
            "dependencies": {
                "@atom-ide-community/nuclide-commons": "^0.8.3",
                "@atom-ide-community/nuclide-commons-atom": "^0.8.3",
                "log4js": "1.1.1",
                "nullthrows": "1.0.0",
                "rxjs-compat": "6.3.3"
            },
            "devDependencies": {
                "@artemv/wait-until-promise": "^1.1.2",
                "@types/atom": "1.40.11",
                "@types/jasmine": "^3.8.1",
                "@types/node": "^16.3.2",
                "atom-ide-base": "^3.3.0",
                "atom-jasmine3-test-runner": "^5.2.7",
                "babel-preset-atomic": "^4.1.0",
                "build-commit": "0.1.4",
                "cross-env": "^7.0.3",
                "eslint-config-atomic": "^1.16.1",
                "prettier-config-atomic": "^2.0.5",
                "rollup-plugin-atomic": "^2.3.2",
                "shx": "^0.3.3",
                "temp": "^0.9.4",
                "typescript": "^4.3.5",
                "waitit": "^1.0.3"
            },
            "prettier": "prettier-config-atomic",
            "dist": {
                "tarball": "https://www.atom.io/api/packages/atom-ide-code-format/versions/1.0.0/tarball"
            },
            "tarball_url": "https://api.github.com/repos/atom-community/atom-ide-code-format/tarball/refs/tags/v1.0.0",
            "sha": "34eba0eeb92577e1f904a1cdde5323aaaf0a43cb"
        }
    },
    "readme": "# Code Format\n\n## Usage\n\n- By default the currently open file is formatted on save.\n\n- Format a selection of code using the `code-format:format-code` (`CTRL+SHIFT+C`) command.\n  (Also accessible via context menu, or \"Edit > Text > Format Code\"). When no selection is provided, the entire file is formatted.\n\n- For the languages that support on type formatting, the package is able to format as you type in the editor. You should enable this from the settings of this package (disabled by default).\n\n![Code Format](https://raw.githubusercontent.com/facebookarchive/atom-ide-ui/master/docs/images/code-format.gif)\n\n## Developer Service API\n\nCode Format also provides APIs to:\n\n- format code on save (after you press save but before writing to disk).\n- format code as you type\n\nYou can enable format-on-save using plain range/file providers from the atom-ide-code-format's settings\n\nProvide code format [Atom services](http://flight-manual.atom.io/behind-atom/sections/interacting-with-other-packages-via-services/) by adding one or more of these to your `package.json`:\n(Only the ones that you want to use; you don't need all of them!)\n\n```json\n\"providedServices\": {\n  \"code-format.range\": {\n    \"versions\": {\n      \"0.1.0\": \"provideRangeCodeFormat\"\n    }\n  },\n  \"code-format.file\": {\n    \"versions\": {\n      \"0.1.0\": \"provideFileCodeFormat\"\n    }\n  },\n  \"code-format.onType\": {\n    \"versions\": {\n      \"0.1.0\": \"provideOnTypeCodeFormat\"\n    }\n  },\n  \"code-format.onSave\": {\n    \"versions\": {\n      \"0.1.0\": \"provideOnSaveCodeFormat\"\n    }\n  }\n}\n```\n\nThen, in your package entry point:\n\n```ts\nexport function provideRangeCodeFormat(): RangeCodeFormatProvider {}\nexport function provideFileCodeFormat(): FileCodeFormatProvider {}\nexport function provideOnTypeCodeFormat(): OnTypeCodeFormatProvider {}\nexport function provideOnSaveCodeFormat(): OnSaveCodeFormatProvider {}\n```\n\nThe various provider types are described in\n[`atom-ide-code-format/lib/types.js`](./src/types.ts).\n",
    "metadata": {
        "name": "atom-ide-code-format",
        "displayName": "Code Formatting for Atom IDE",
        "repository": "https://github.com/atom-community/atom-ide-code-format",
        "main": "./dist/main.js",
        "version": "1.0.3",
        "description": "Provides a code-formatting provider API",
        "scripts": {
            "format": "prettier --write .",
            "test.format": "prettier . --check",
            "lint": "eslint . --fix",
            "test.lint": "eslint .",
            "test": "npm run build.unit && npm run test.only",
            "test.only": "atom --test ./dist/spec",
            "clean": "shx rm -rf dist",
            "build.unit": "tsc -p ./tsconfig.json",
            "dev": "npm run clean && cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=true rollup -c -w",
            "build": "npm run clean && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=true rollup -c ",
            "build-commit": "build-commit -o dist",
            "bump": "ncu -u -x coffeescript",
            "prepare": "npm run build"
        },
        "atomTestRunner": "./dist/spec/runner",
        "activationHooks": [
            "core:loaded-shell-environment"
        ],
        "engines": {
            "atom": ">=1.52.0 <2.0.0"
        },
        "consumedServices": {
            "atom-ide-busy-signal": {
                "versions": {
                    "0.1.0": "consumeBusySignal"
                }
            },
            "nuclide-code-format.provider": {
                "versions": {
                    "0.0.0": "consumeLegacyProvider"
                }
            },
            "code-format.range": {
                "versions": {
                    "0.1.0": "consumeRangeProvider"
                }
            },
            "code-format.file": {
                "versions": {
                    "0.1.0": "consumeFileProvider"
                }
            },
            "code-format.onType": {
                "versions": {
                    "0.1.0": "consumeOnTypeProvider"
                }
            },
            "code-format.onSave": {
                "versions": {
                    "0.1.0": "consumeOnSaveProvider"
                }
            }
        },
        "dependencies": {
            "@atom-ide-community/nuclide-commons": "^0.8.3",
            "@atom-ide-community/nuclide-commons-atom": "^0.8.3",
            "log4js": "6.4.4"
        },
        "devDependencies": {
            "@artemv/wait-until-promise": "^1.1.2",
            "@types/atom": "1.40.11",
            "@types/jasmine": "^3.8.1",
            "@types/node": "^16.3.2",
            "atom-ide-base": "^3.3.0",
            "atom-jasmine3-test-runner": "^5.2.7",
            "babel-preset-atomic": "^4.1.0",
            "build-commit": "0.1.4",
            "cross-env": "^7.0.3",
            "eslint-config-atomic": "^1.16.1",
            "prettier-config-atomic": "^2.0.5",
            "rollup-plugin-atomic": "^3.0.0",
            "shx": "^0.3.3",
            "temp": "^0.9.4",
            "typescript": "^4.3.5",
            "waitit": "^1.0.3"
        },
        "prettier": "prettier-config-atomic"
    },
    "created": 1658332655755,
    "updated": 1658332655755,
    "star_gazers": [],
    "creation_method": "Migrated from Atom.io"
}