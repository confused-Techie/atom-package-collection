{
  "name": "mzlp-gotodefinition",
  "repository": {
    "type": "git",
    "url": "https://github.com/jusung21c/mzlp-gotodefinition"
  },
  "downloads": 295,
  "stargazers_count": 0,
  "releases": {
    "latest": "1.0.1"
  },
  "versions": {
    "1.0.1": {
      "author": {
        "name": "JuicyJusung"
      },
      "bugs": {
        "url": "https://github.com/jusung21c/mzlp-gotodefinition/issues"
      },
      "bundleDependencies": false,
      "dependencies": {
        "atom-select-list": "^0.2.0",
        "etch": "^0.12.2"
      },
      "deprecated": false,
      "description": "Goto definition for Mediazen Lp Team",
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-airbnb": "^14.1.0",
        "eslint-plugin-import": "^2.2.0",
        "eslint-plugin-jsx-a11y": "^4.0.0",
        "eslint-plugin-react": "^6.10.3"
      },
      "homepage": "https://github.com/jusung21c/mzlp-gotodefinition#readme",
      "keywords": [
        "mzlp",
        "mediazen",
        "lpteam",
        "juicyjusung"
      ],
      "license": "MIT",
      "main": "./lib/goto-definition",
      "name": "mzlp-gotodefinition",
      "optionalDependencies": {},
      "providedServices": {
        "hyperclick": {
          "versions": {
            "0.1.0": "getProvider"
          }
        }
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/jusung21c/mzlp-gotodefinition.git"
      },
      "scripts": {
        "lint": "eslint .",
        "test": "apm test"
      },
      "version": "1.0.1",
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mzlp-gotodefinition/versions/1.0.1/tarball"
      }
    },
    "0.1.3": {
      "_args": [
        [
          {
            "raw": "C:\\Users\\jusun\\AppData\\Local\\Temp\\d-117527-7448-1efxpzk.ly5ddt2o6r\\package.tgz",
            "scope": null,
            "escapedName": null,
            "name": null,
            "rawSpec": "C:\\Users\\jusun\\AppData\\Local\\Temp\\d-117527-7448-1efxpzk.ly5ddt2o6r\\package.tgz",
            "spec": "C:\\Users\\jusun\\AppData\\Local\\Temp\\d-117527-7448-1efxpzk.ly5ddt2o6r\\package.tgz",
            "type": "local"
          },
          "C:\\Users\\jusun\\AppData\\Local\\Temp\\apm-install-dir-117527-7448-da6m48.tb0e50o1or"
        ]
      ],
      "_from": "..\\d-117527-7448-1efxpzk.ly5ddt2o6r\\package.tgz",
      "_id": "mzlp-gotodefinition@0.1.2",
      "_inCache": true,
      "_location": "/mzlp-gotodefinition",
      "_phantomChildren": {},
      "_requested": {
        "raw": "C:\\Users\\jusun\\AppData\\Local\\Temp\\d-117527-7448-1efxpzk.ly5ddt2o6r\\package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "C:\\Users\\jusun\\AppData\\Local\\Temp\\d-117527-7448-1efxpzk.ly5ddt2o6r\\package.tgz",
        "spec": "C:\\Users\\jusun\\AppData\\Local\\Temp\\d-117527-7448-1efxpzk.ly5ddt2o6r\\package.tgz",
        "type": "local"
      },
      "_requiredBy": [
        "#USER"
      ],
      "_resolved": "file:..\\d-117527-7448-1efxpzk.ly5ddt2o6r\\package.tgz",
      "_shasum": "b836e2862c901140b0b88b17b7bad5d5068924c9",
      "_shrinkwrap": null,
      "_spec": "C:\\Users\\jusun\\AppData\\Local\\Temp\\d-117527-7448-1efxpzk.ly5ddt2o6r\\package.tgz",
      "_where": "C:\\Users\\jusun\\AppData\\Local\\Temp\\apm-install-dir-117527-7448-da6m48.tb0e50o1or",
      "author": {
        "name": "JuicyJusung"
      },
      "bugs": {
        "url": "https://github.com/jusung21c/mzlp-gotodefinition/issues"
      },
      "dependencies": {
        "atom-select-list": "^0.2.0",
        "etch": "^0.12.2"
      },
      "description": "Goto definition for Mediazen Lp Team",
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-airbnb": "^14.1.0",
        "eslint-plugin-import": "^2.2.0",
        "eslint-plugin-jsx-a11y": "^4.0.0",
        "eslint-plugin-react": "^6.10.3"
      },
      "homepage": "https://github.com/jusung21c/mzlp-gotodefinition#readme",
      "keywords": [
        "mzlp",
        "mediazen",
        "lpteam",
        "juicyjusung"
      ],
      "license": "MIT",
      "main": "./lib/goto-definition",
      "name": "mzlp-gotodefinition",
      "optionalDependencies": {},
      "providedServices": {
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "getProvider"
          }
        }
      },
      "readme": "# Goto Definition\n\n[![macOS & Linux Build Status](https://travis-ci.org/faceair/atom-goto-definition.svg?branch=master)](https://travis-ci.org/faceair/atom-goto-definition)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/q8lttuxttxf69xs4?svg=true)](https://ci.appveyor.com/project/faceair/atom-goto-definition)\n[![dependencies Status](https://david-dm.org/faceair/atom-goto-definition/status.svg)](https://david-dm.org/faceair/atom-goto-definition)\n\n![demo](http://ww1.sinaimg.cn/large/71ef46c1ly1fdt8wgbaiqg20zi0j8hdu.gif)\n\n* Support for `JavaScript(ES6 && JSX)`, `TypeScript`, `CoffeeScript`, `Python`, `Ruby`, `PHP`, `Hack`, `Perl`, `KRL`, `Erb`, `Haml`, `C/C++`, `Puppet`, `ASP`, `Shell`\n* Works with Mac OSX, Linux and Windows\n* Goto-Definition functionality, by default on `Alt+Cmd+Enter`/`Ctrl+Alt+Enter`\n* Support [hyperclick](https://atom.io/packages/hyperclick), `<cmd-click>` on a word to jump it's declaration\n\n## Installing\nInstall the package ```goto-definition``` in Atom (Preferences->Install) or use Atom's package manager from a shell:  \n```\n$ apm install goto-definition\n```\n\n## Performance Mode\n\nPerformance mode is 10x faster then nomal model. if you want a better experience, please open the performance mode.\n\nSteps:\n\n1. Install `ripgrep`, see [https://github.com/BurntSushi/ripgrep#installation](https://github.com/BurntSushi/ripgrep#installation). Yeap, now we use `ripgrep` to search definitions, because of it's incredibly fast.\n2. Turn `Settings -> Packages -> goto-definition -> Settings -> Performance Mode` on.\n3. Enjoy it.\n\nNow the performance model is still testing, welcome suggestions and feedback. If it goes well, we will open the performance mode by default in the next version.\n\n### Ignoring files\n\nIn performance mode, if you want ignore some files, you can create a file called `.ignore` in the root of the project, it working like `.gitignore`.\n\n### Notice\n\n* In nomal model, if you want include VCS ignored paths, please turn `Settings -> Exclude VCS Ignored Paths` option off.\n",
      "readmeFilename": "README.md",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jusung21c/mzlp-gotodefinition.git"
      },
      "scripts": {
        "lint": "eslint .",
        "test": "apm test"
      },
      "version": "0.1.3",
      "_atomModuleCache": {
        "version": 1,
        "dependencies": [
          {
            "name": "atom-select-list",
            "version": "0.2.0",
            "path": "node_modules\\atom-select-list\\src\\select-list-view.js"
          },
          {
            "name": "etch",
            "version": "0.9.5",
            "path": "node_modules\\atom-select-list\\node_modules\\etch\\lib\\index.js"
          },
          {
            "name": "etch",
            "version": "0.12.4",
            "path": "node_modules\\etch\\lib\\index.js"
          },
          {
            "name": "fuzzaldrin",
            "version": "2.1.0",
            "path": "node_modules\\fuzzaldrin\\lib\\fuzzaldrin.js"
          }
        ],
        "extensions": {
          ".js": [
            "lib\\config.js",
            "lib\\definitions-view.js",
            "lib\\goto-definition.js",
            "lib\\searcher.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\component-helpers.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\default-scheduler.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\dom.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\event-listener-props.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\index.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\patch.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\render.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\scheduler-assignment.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\svg-attribute-translations.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\svg-tags.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\dist\\update-props.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\component-helpers.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\default-scheduler.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\dom.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\event-listener-props.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\index.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\patch.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\render.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\scheduler-assignment.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\svg-attribute-translations.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\svg-tags.js",
            "node_modules\\atom-select-list\\node_modules\\etch\\lib\\update-props.js",
            "node_modules\\atom-select-list\\src\\select-list-view.js",
            "node_modules\\etch\\lib\\component-helpers.js",
            "node_modules\\etch\\lib\\default-scheduler.js",
            "node_modules\\etch\\lib\\dom.js",
            "node_modules\\etch\\lib\\event-listener-props.js",
            "node_modules\\etch\\lib\\index.js",
            "node_modules\\etch\\lib\\patch.js",
            "node_modules\\etch\\lib\\render.js",
            "node_modules\\etch\\lib\\scheduler-assignment.js",
            "node_modules\\etch\\lib\\svg-attribute-translations.js",
            "node_modules\\etch\\lib\\svg-tags.js",
            "node_modules\\etch\\lib\\update-props.js",
            "node_modules\\fuzzaldrin\\lib\\filter.js",
            "node_modules\\fuzzaldrin\\lib\\fuzzaldrin.js",
            "node_modules\\fuzzaldrin\\lib\\matcher.js",
            "node_modules\\fuzzaldrin\\lib\\scorer.js"
          ],
          ".json": [
            "node_modules\\atom-select-list\\node_modules\\etch\\package.json",
            "node_modules\\atom-select-list\\package.json",
            "node_modules\\etch\\package.json",
            "node_modules\\fuzzaldrin\\package.json",
            "package.json"
          ]
        },
        "folders": [
          {
            "paths": [
              "keymaps",
              "lib",
              "menus",
              "",
              "spec\\fixtures",
              "spec"
            ],
            "dependencies": {
              "atom-select-list": "^0.2.0",
              "etch": "^0.12.2"
            }
          },
          {
            "paths": [
              "node_modules\\atom-select-list",
              "node_modules\\atom-select-list\\src",
              "node_modules\\atom-select-list\\test"
            ],
            "dependencies": {
              "etch": "^0.9.5",
              "fuzzaldrin": "^2.1.0"
            }
          }
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mzlp-gotodefinition/versions/0.1.3/tarball"
      }
    },
    "0.1.2": {
      "author": {
        "name": "JuicyJusung"
      },
      "dependencies": {
        "atom-select-list": "^0.2.0",
        "etch": "^0.12.2"
      },
      "description": "Goto definition for Mediazen Lp Team",
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-airbnb": "^14.1.0",
        "eslint-plugin-import": "^2.2.0",
        "eslint-plugin-jsx-a11y": "^4.0.0",
        "eslint-plugin-react": "^6.10.3"
      },
      "license": "MIT",
      "main": "./lib/goto-definition",
      "name": "mzlp-gotodefinition",
      "optionalDependencies": {},
      "providedServices": {
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "getProvider"
          }
        }
      },
      "readme": "# Goto Definition\n\n[![macOS & Linux Build Status](https://travis-ci.org/faceair/atom-goto-definition.svg?branch=master)](https://travis-ci.org/faceair/atom-goto-definition)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/q8lttuxttxf69xs4?svg=true)](https://ci.appveyor.com/project/faceair/atom-goto-definition)\n[![dependencies Status](https://david-dm.org/faceair/atom-goto-definition/status.svg)](https://david-dm.org/faceair/atom-goto-definition)\n\n![demo](http://ww1.sinaimg.cn/large/71ef46c1ly1fdt8wgbaiqg20zi0j8hdu.gif)\n\n* Support for `JavaScript(ES6 && JSX)`, `TypeScript`, `CoffeeScript`, `Python`, `Ruby`, `PHP`, `Hack`, `Perl`, `KRL`, `Erb`, `Haml`, `C/C++`, `Puppet`, `ASP`, `Shell`\n* Works with Mac OSX, Linux and Windows\n* Goto-Definition functionality, by default on `Alt+Cmd+Enter`/`Ctrl+Alt+Enter`\n* Support [hyperclick](https://atom.io/packages/hyperclick), `<cmd-click>` on a word to jump it's declaration\n\n## Installing\nInstall the package ```goto-definition``` in Atom (Preferences->Install) or use Atom's package manager from a shell:  \n```\n$ apm install goto-definition\n```\n\n## Performance Mode\n\nPerformance mode is 10x faster then nomal model. if you want a better experience, please open the performance mode.\n\nSteps:\n\n1. Install `ripgrep`, see [https://github.com/BurntSushi/ripgrep#installation](https://github.com/BurntSushi/ripgrep#installation). Yeap, now we use `ripgrep` to search definitions, because of it's incredibly fast.\n2. Turn `Settings -> Packages -> goto-definition -> Settings -> Performance Mode` on.\n3. Enjoy it.\n\nNow the performance model is still testing, welcome suggestions and feedback. If it goes well, we will open the performance mode by default in the next version.\n\n### Ignoring files\n\nIn performance mode, if you want ignore some files, you can create a file called `.ignore` in the root of the project, it working like `.gitignore`.\n\n### Notice\n\n* In nomal model, if you want include VCS ignored paths, please turn `Settings -> Exclude VCS Ignored Paths` option off.\n",
      "readmeFilename": "README.md",
      "repository": "https://github.com/jusung21c/mzlp-gotodefinition",
      "keywords": [
        "mzlp",
        "mediazen",
        "lpteam",
        "juicyjusung"
      ],
      "scripts": {
        "lint": "eslint .",
        "test": "apm test"
      },
      "version": "0.1.2",
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mzlp-gotodefinition/versions/0.1.2/tarball"
      }
    },
    "0.1.1": {
      "author": {
        "name": "JuicyJusung"
      },
      "dependencies": {
        "atom-select-list": "^0.2.0",
        "etch": "^0.12.2"
      },
      "description": "Goto definition for Mediazen Lp Team",
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-airbnb": "^14.1.0",
        "eslint-plugin-import": "^2.2.0",
        "eslint-plugin-jsx-a11y": "^4.0.0",
        "eslint-plugin-react": "^6.10.3"
      },
      "license": "MIT",
      "main": "./lib/goto-definition",
      "name": "mzlp-gotodefinition",
      "optionalDependencies": {},
      "providedServices": {
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "getProvider"
          }
        }
      },
      "readme": "# Goto Definition\n\n[![macOS & Linux Build Status](https://travis-ci.org/faceair/atom-goto-definition.svg?branch=master)](https://travis-ci.org/faceair/atom-goto-definition)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/q8lttuxttxf69xs4?svg=true)](https://ci.appveyor.com/project/faceair/atom-goto-definition)\n[![dependencies Status](https://david-dm.org/faceair/atom-goto-definition/status.svg)](https://david-dm.org/faceair/atom-goto-definition)\n\n![demo](http://ww1.sinaimg.cn/large/71ef46c1ly1fdt8wgbaiqg20zi0j8hdu.gif)\n\n* Support for `JavaScript(ES6 && JSX)`, `TypeScript`, `CoffeeScript`, `Python`, `Ruby`, `PHP`, `Hack`, `Perl`, `KRL`, `Erb`, `Haml`, `C/C++`, `Puppet`, `ASP`, `Shell`\n* Works with Mac OSX, Linux and Windows\n* Goto-Definition functionality, by default on `Alt+Cmd+Enter`/`Ctrl+Alt+Enter`\n* Support [hyperclick](https://atom.io/packages/hyperclick), `<cmd-click>` on a word to jump it's declaration\n\n## Installing\nInstall the package ```goto-definition``` in Atom (Preferences->Install) or use Atom's package manager from a shell:  \n```\n$ apm install goto-definition\n```\n\n## Performance Mode\n\nPerformance mode is 10x faster then nomal model. if you want a better experience, please open the performance mode.\n\nSteps:\n\n1. Install `ripgrep`, see [https://github.com/BurntSushi/ripgrep#installation](https://github.com/BurntSushi/ripgrep#installation). Yeap, now we use `ripgrep` to search definitions, because of it's incredibly fast.\n2. Turn `Settings -> Packages -> goto-definition -> Settings -> Performance Mode` on.\n3. Enjoy it.\n\nNow the performance model is still testing, welcome suggestions and feedback. If it goes well, we will open the performance mode by default in the next version.\n\n### Ignoring files\n\nIn performance mode, if you want ignore some files, you can create a file called `.ignore` in the root of the project, it working like `.gitignore`.\n\n### Notice\n\n* In nomal model, if you want include VCS ignored paths, please turn `Settings -> Exclude VCS Ignored Paths` option off.\n",
      "readmeFilename": "README.md",
      "repository": "https://github.com/jusung21c/mzlp-gotodefinition",
      "keywords": [
        "mzlp",
        "mediazen",
        "lpteam",
        "juicyjusung"
      ],
      "scripts": {
        "lint": "eslint .",
        "test": "apm test"
      },
      "version": "0.1.1",
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mzlp-gotodefinition/versions/0.1.1/tarball"
      }
    },
    "0.1.0": {
      "author": {
        "name": "JuicyJusung"
      },
      "dependencies": {
        "atom-select-list": "^0.2.0",
        "etch": "^0.12.2"
      },
      "description": "Goto definition for Mediazen Lp Team",
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-airbnb": "^14.1.0",
        "eslint-plugin-import": "^2.2.0",
        "eslint-plugin-jsx-a11y": "^4.0.0",
        "eslint-plugin-react": "^6.10.3"
      },
      "license": "MIT",
      "main": "./lib/goto-definition",
      "name": "mzlp-gotodefinition",
      "optionalDependencies": {},
      "providedServices": {
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "getProvider"
          }
        }
      },
      "readme": "# Goto Definition\n\n[![macOS & Linux Build Status](https://travis-ci.org/faceair/atom-goto-definition.svg?branch=master)](https://travis-ci.org/faceair/atom-goto-definition)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/q8lttuxttxf69xs4?svg=true)](https://ci.appveyor.com/project/faceair/atom-goto-definition)\n[![dependencies Status](https://david-dm.org/faceair/atom-goto-definition/status.svg)](https://david-dm.org/faceair/atom-goto-definition)\n\n![demo](http://ww1.sinaimg.cn/large/71ef46c1ly1fdt8wgbaiqg20zi0j8hdu.gif)\n\n* Support for `JavaScript(ES6 && JSX)`, `TypeScript`, `CoffeeScript`, `Python`, `Ruby`, `PHP`, `Hack`, `Perl`, `KRL`, `Erb`, `Haml`, `C/C++`, `Puppet`, `ASP`, `Shell`\n* Works with Mac OSX, Linux and Windows\n* Goto-Definition functionality, by default on `Alt+Cmd+Enter`/`Ctrl+Alt+Enter`\n* Support [hyperclick](https://atom.io/packages/hyperclick), `<cmd-click>` on a word to jump it's declaration\n\n## Installing\nInstall the package ```goto-definition``` in Atom (Preferences->Install) or use Atom's package manager from a shell:  \n```\n$ apm install goto-definition\n```\n\n## Performance Mode\n\nPerformance mode is 10x faster then nomal model. if you want a better experience, please open the performance mode.\n\nSteps:\n\n1. Install `ripgrep`, see [https://github.com/BurntSushi/ripgrep#installation](https://github.com/BurntSushi/ripgrep#installation). Yeap, now we use `ripgrep` to search definitions, because of it's incredibly fast.\n2. Turn `Settings -> Packages -> goto-definition -> Settings -> Performance Mode` on.\n3. Enjoy it.\n\nNow the performance model is still testing, welcome suggestions and feedback. If it goes well, we will open the performance mode by default in the next version.\n\n### Ignoring files\n\nIn performance mode, if you want ignore some files, you can create a file called `.ignore` in the root of the project, it working like `.gitignore`.\n\n### Notice\n\n* In nomal model, if you want include VCS ignored paths, please turn `Settings -> Exclude VCS Ignored Paths` option off.\n",
      "readmeFilename": "README.md",
      "repository": "https://github.com/jusung21c/mzlp-gotodefinition",
      "keywords": [
        "mzlp",
        "mediazen",
        "lpteam",
        "juicyjusung"
      ],
      "scripts": {
        "lint": "eslint .",
        "test": "apm test"
      },
      "version": "0.1.0",
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mzlp-gotodefinition/versions/0.1.0/tarball"
      }
    },
    "0.0.2": {
      "author": {
        "name": "JuicyJusung"
      },
      "dependencies": {
        "atom-select-list": "^0.2.0",
        "etch": "^0.12.2"
      },
      "description": "Goto definition for Mediazen Lp Team",
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-airbnb": "^14.1.0",
        "eslint-plugin-import": "^2.2.0",
        "eslint-plugin-jsx-a11y": "^4.0.0",
        "eslint-plugin-react": "^6.10.3"
      },
      "license": "MIT",
      "main": "./lib/goto-definition",
      "name": "mzlp-gotodefinition",
      "optionalDependencies": {},
      "providedServices": {
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "getProvider"
          }
        }
      },
      "readme": "# Goto Definition\n\n[![macOS & Linux Build Status](https://travis-ci.org/faceair/atom-goto-definition.svg?branch=master)](https://travis-ci.org/faceair/atom-goto-definition)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/q8lttuxttxf69xs4?svg=true)](https://ci.appveyor.com/project/faceair/atom-goto-definition)\n[![dependencies Status](https://david-dm.org/faceair/atom-goto-definition/status.svg)](https://david-dm.org/faceair/atom-goto-definition)\n\n![demo](http://ww1.sinaimg.cn/large/71ef46c1ly1fdt8wgbaiqg20zi0j8hdu.gif)\n\n* Support for `JavaScript(ES6 && JSX)`, `TypeScript`, `CoffeeScript`, `Python`, `Ruby`, `PHP`, `Hack`, `Perl`, `KRL`, `Erb`, `Haml`, `C/C++`, `Puppet`, `ASP`, `Shell`\n* Works with Mac OSX, Linux and Windows\n* Goto-Definition functionality, by default on `Alt+Cmd+Enter`/`Ctrl+Alt+Enter`\n* Support [hyperclick](https://atom.io/packages/hyperclick), `<cmd-click>` on a word to jump it's declaration\n\n## Installing\nInstall the package ```goto-definition``` in Atom (Preferences->Install) or use Atom's package manager from a shell:  \n```\n$ apm install goto-definition\n```\n\n## Performance Mode\n\nPerformance mode is 10x faster then nomal model. if you want a better experience, please open the performance mode.\n\nSteps:\n\n1. Install `ripgrep`, see [https://github.com/BurntSushi/ripgrep#installation](https://github.com/BurntSushi/ripgrep#installation). Yeap, now we use `ripgrep` to search definitions, because of it's incredibly fast.\n2. Turn `Settings -> Packages -> goto-definition -> Settings -> Performance Mode` on.\n3. Enjoy it.\n\nNow the performance model is still testing, welcome suggestions and feedback. If it goes well, we will open the performance mode by default in the next version.\n\n### Ignoring files\n\nIn performance mode, if you want ignore some files, you can create a file called `.ignore` in the root of the project, it working like `.gitignore`.\n\n### Notice\n\n* In nomal model, if you want include VCS ignored paths, please turn `Settings -> Exclude VCS Ignored Paths` option off.\n",
      "readmeFilename": "README.md",
      "repository": "https://github.com/jusung21c/mzlp-gotodefinition",
      "keywords": [
        "mzlp",
        "mediazen",
        "lpteam",
        "juicyjusung"
      ],
      "scripts": {
        "lint": "eslint .",
        "test": "apm test"
      },
      "version": "0.0.2",
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mzlp-gotodefinition/versions/0.0.2/tarball"
      }
    }
  },
  "readme": "# mzlp-gotodefinition package\n\nA short description of your package.\n\n![A screenshot of your package](https://f.cloud.github.com/assets/69169/2290250/c35d867a-a017-11e3-86be-cd7c5bf3ff9b.gif)\n",
  "metadata": {
    "author": {
      "name": "JuicyJusung"
    },
    "bugs": {
      "url": "https://github.com/jusung21c/mzlp-gotodefinition/issues"
    },
    "bundleDependencies": false,
    "dependencies": {
      "atom-select-list": "^0.2.0",
      "etch": "^0.12.2"
    },
    "deprecated": false,
    "description": "Goto definition for Mediazen Lp Team",
    "devDependencies": {
      "eslint": "^3.18.0",
      "eslint-config-airbnb": "^14.1.0",
      "eslint-plugin-import": "^2.2.0",
      "eslint-plugin-jsx-a11y": "^4.0.0",
      "eslint-plugin-react": "^6.10.3"
    },
    "homepage": "https://github.com/jusung21c/mzlp-gotodefinition#readme",
    "keywords": [
      "mzlp",
      "mediazen",
      "lpteam",
      "juicyjusung"
    ],
    "license": "MIT",
    "main": "./lib/goto-definition",
    "name": "mzlp-gotodefinition",
    "optionalDependencies": {},
    "providedServices": {
      "hyperclick": {
        "versions": {
          "0.1.0": "getProvider"
        }
      }
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/jusung21c/mzlp-gotodefinition.git"
    },
    "scripts": {
      "lint": "eslint .",
      "test": "apm test"
    },
    "version": "1.0.1"
  }
}