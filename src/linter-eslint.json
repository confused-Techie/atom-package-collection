{
  "name": "linter-eslint",
  "repository": {
    "type": "git",
    "url": "https://github.com/AtomLinter/linter-eslint"
  },
  "downloads": 2418043,
  "stargazers_count": 1660,
  "releases": {
    "latest": "9.0.1"
  },
  "versions": {
    "9.0.1": {
      "name": "linter-eslint",
      "main": "./dist/main.js",
      "version": "9.0.1",
      "description": "Lint JavaScript on the fly, using ESLint (v7 or older)",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project (if using a relative path, the file should be present in all your projects).",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            },
            "showIncompatibleVersionNotification": {
              "title": "Notify when incompatible ESLint is detected",
              "description": "When enabled, will show a notification if this package loads inside a project using ESLint version 8 or greater _and_ the user has not already installed the newer `linter-eslint-node` package. Uncheck if you don't want these notifications.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "npm run build && eslint .",
        "test": "npm run build && atom --test spec",
        "clean": "rimraf dist",
        "dev": "npm run build -- --watch",
        "build": "cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=false babel src --out-dir dist --delete-dir-on-start",
        "prepare": "npm run build",
        "build-commit": "build-commit -o dist"
      },
      "atomTestRunner": "./spec/runner",
      "dependencies": {
        "atom-linter": "10.0.0",
        "atom-package-deps": "8.0.0",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "eslint": "7.32.0",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.16.0",
        "@babel/core": "^7.16.0",
        "@types/atom": "^1.40.11",
        "@types/eslint": "8.4.1",
        "@types/jasmine": "^4.0.0",
        "@types/node": "^17.0.0",
        "@types/rimraf": "^3.0.2",
        "atom-jasmine3-test-runner": "^5.2.9",
        "babel-preset-atomic": "^4.2.1",
        "build-commit": "^0.1.4",
        "cross-env": "^7.0.3",
        "eslint-config-airbnb-base": "15.0.0",
        "eslint-plugin-import": "2.25.4",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "root": true,
        "rules": {
          "no-console": "off",
          "max-len": [
            1,
            {
              "code": 130
            }
          ],
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-import-module-exports": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "readonly"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/9.0.1/tarball"
      }
    },
    "9.0.0": {
      "name": "linter-eslint",
      "main": "./dist/main.js",
      "version": "9.0.0",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project (if using a relative path, the file should be present in all your projects).",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "npm run build && eslint .",
        "test": "npm run build && atom --test spec",
        "clean": "rimraf dist",
        "dev": "npm run build -- --watch",
        "build": "cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=false babel src --out-dir dist --delete-dir-on-start",
        "prepare": "npm run build",
        "build-commit": "build-commit -o dist"
      },
      "atomTestRunner": "./spec/runner",
      "dependencies": {
        "atom-linter": "10.0.0",
        "atom-package-deps": "8.0.0",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "eslint": "7.32.0",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.7",
        "@babel/core": "^7.15.8",
        "@types/atom": "^1.40.11",
        "@types/eslint": "7.28.2",
        "@types/jasmine": "^3.10.1",
        "@types/node": "^12",
        "@types/rimraf": "^3.0.2",
        "atom-jasmine3-test-runner": "^5.2.9",
        "babel-preset-atomic": "^4.2.0",
        "build-commit": "^0.1.4",
        "cross-env": "^7.0.3",
        "eslint-config-airbnb-base": "14.2.1",
        "eslint-plugin-import": "2.25.2",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "root": true,
        "rules": {
          "no-console": "off",
          "max-len": [
            1,
            {
              "code": 130
            }
          ],
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "readonly"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/9.0.0/tarball"
      }
    },
    "8.6.6": {
      "name": "linter-eslint",
      "main": "./dist/main.js",
      "version": "8.6.6",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project (if using a relative path, the file should be present in all your projects).",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "npm run build && eslint .",
        "test": "npm run build && atom --test spec",
        "clean": "rimraf dist",
        "dev": "npm run build -- --watch",
        "build": "cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=false babel src --out-dir dist --delete-dir-on-start",
        "prepare": "npm run build",
        "build-commit": "build-commit -o dist"
      },
      "atomTestRunner": "./spec/runner",
      "dependencies": {
        "atom-linter": "10.0.0",
        "atom-package-deps": "7.2.3",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0"
      },
      "devDependencies": {
        "@types/atom": "^1.40.10",
        "@types/jasmine": "^3.6.7",
        "@types/rimraf": "^3.0.0",
        "@babel/cli": "^7.13.10",
        "@babel/core": "^7.13.10",
        "atom-jasmine3-test-runner": "^5.2.2",
        "babel-preset-atomic": "^3.0.3",
        "build-commit": "^0.1.4",
        "cross-env": "^7.0.3",
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.6.6/tarball"
      }
    },
    "8.6.5": {
      "name": "linter-eslint",
      "main": "./dist/main.js",
      "version": "8.6.5",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project (if using a relative path, the file should be present in all your projects).",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "npm run build && eslint .",
        "test": "npm run build && atom --test spec",
        "clean": "rimraf dist",
        "dev": "npm run build -- --watch",
        "build": "cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=false babel src --out-dir dist --delete-dir-on-start",
        "prepare": "npm run build",
        "build-commit": "build-commit -o dist"
      },
      "dependencies": {
        "atom-linter": "10.0.0",
        "atom-package-deps": "7.2.3",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.13.10",
        "@babel/core": "^7.13.10",
        "babel-preset-atomic": "^3.0.3",
        "build-commit": "^0.1.4",
        "cross-env": "^7.0.3",
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.6.5/tarball"
      }
    },
    "8.6.4": {
      "name": "linter-eslint",
      "main": "./dist/main.js",
      "version": "8.6.4",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project (if using a relative path, the file should be present in all your projects).",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "npm run babel && eslint .",
        "test": "npm run babel && atom --test spec",
        "clean": "shx rm -rf dist",
        "babel": "cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=false babel src --out-dir dist --delete-dir-on-start",
        "dev": "npm run babel && cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=true rollup -c -w",
        "build": "npm run babel && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=true rollup -c ",
        "prepare": "npm run build",
        "build-commit": "build-commit -o dist"
      },
      "dependencies": {
        "atom-linter": "10.0.0",
        "atom-package-deps": "7.2.3",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.13.10",
        "@babel/core": "^7.13.10",
        "babel-preset-atomic": "^3.0.3",
        "build-commit": "^0.1.4",
        "cross-env": "^7.0.3",
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2",
        "rollup": "^2.42.4",
        "rollup-plugin-atomic": "^2.1.1",
        "shx": "^0.3.3"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.6.4/tarball"
      }
    },
    "8.6.3": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.6.3",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project (if using a relative path, the file should be present in all your projects).",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test"
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "7.2.3",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.6.3/tarball"
      }
    },
    "8.6.2": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.6.2",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test"
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "7.2.2",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.6.2/tarball"
      }
    },
    "8.6.1": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.6.1",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test"
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "7.2.2",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.6.1/tarball"
      }
    },
    "8.6.0": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.6.0",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test"
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "7.2.2",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.6.0/tarball"
      }
    },
    "8.5.9": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.9",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test"
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "7.2.2",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "3.3.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.9/tarball"
      }
    },
    "8.5.8": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.8",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test"
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "7.2.2",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2"
      },
      "package-deps": [
        {
          "name": "linter",
          "minimumVersion": "2.0.0"
        }
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.8/tarball"
      }
    },
    "8.5.7": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.7",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test"
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "5.1.0",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "3.3.1",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "8.3.5",
        "@commitlint/config-conventional": "8.3.4",
        "@commitlint/travis-cli": "8.3.5",
        "@semantic-release/apm-config": "8.0.0",
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "husky": "4.2.3",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2",
        "semantic-release": "17.0.4"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "renovate": {
        "extends": [
          "config:base"
        ]
      },
      "release": {
        "extends": "@semantic-release/apm-config"
      },
      "commitlint": {
        "extends": [
          "@commitlint/config-conventional"
        ]
      },
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.7/tarball"
      }
    },
    "8.5.6": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.6",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "collapsed": true,
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test"
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "5.1.0",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "2.0.0",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "8.3.5",
        "@commitlint/config-conventional": "8.3.4",
        "@commitlint/travis-cli": "8.3.5",
        "@semantic-release/apm-config": "8.0.0",
        "eslint-config-airbnb-base": "13.2.0",
        "eslint-plugin-import": "2.20.1",
        "husky": "4.2.3",
        "jasmine-fix": "1.3.1",
        "rimraf": "3.0.2",
        "semantic-release": "17.0.4"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "renovate": {
        "extends": [
          "config:base"
        ]
      },
      "release": {
        "extends": "@semantic-release/apm-config"
      },
      "commitlint": {
        "extends": [
          "@commitlint/config-conventional"
        ]
      },
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.6/tarball"
      }
    },
    "8.5.5": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.5",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "5.1.0",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "2.0.0",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "7.5.2",
        "@commitlint/config-conventional": "7.5.0",
        "@commitlint/travis-cli": "7.5.2",
        "@semantic-release/apm-config": "6.0.1",
        "eslint-config-airbnb-base": "13.1.0",
        "eslint-plugin-import": "2.17.2",
        "husky": "1.3.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "2.6.3",
        "semantic-release": "15.13.3"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "renovate": {
        "extends": [
          "config:base"
        ]
      },
      "release": {
        "extends": "@semantic-release/apm-config"
      },
      "commitlint": {
        "extends": [
          "@commitlint/config-conventional"
        ]
      },
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.5/tarball"
      }
    },
    "8.5.4": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.4",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "5.0.0",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "2.0.0",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.23",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "7.5.2",
        "@commitlint/config-conventional": "7.5.0",
        "@commitlint/travis-cli": "7.5.2",
        "@semantic-release/apm-config": "6.0.1",
        "eslint-config-airbnb-base": "13.1.0",
        "eslint-plugin-import": "2.16.0",
        "husky": "1.3.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "2.6.3",
        "semantic-release": "15.13.3"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "renovate": {
        "extends": [
          "config:base"
        ]
      },
      "release": {
        "extends": "@semantic-release/apm-config"
      },
      "commitlint": {
        "extends": [
          "@commitlint/config-conventional"
        ]
      },
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.4/tarball"
      }
    },
    "8.5.3": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.3",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "5.0.0",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "2.0.0",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.22",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "7.5.2",
        "@commitlint/config-conventional": "7.5.0",
        "@commitlint/travis-cli": "7.5.2",
        "@semantic-release/apm-config": "6.0.1",
        "eslint-config-airbnb-base": "13.1.0",
        "eslint-plugin-import": "2.16.0",
        "husky": "1.3.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "2.6.3",
        "semantic-release": "15.13.3"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "renovate": {
        "extends": [
          "config:base"
        ]
      },
      "release": {
        "extends": "@semantic-release/apm-config"
      },
      "commitlint": {
        "extends": [
          "@commitlint/config-conventional"
        ]
      },
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.3/tarball"
      }
    },
    "8.5.2": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.2",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "5.0.0",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "1.0.0",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.22",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "7.5.0",
        "@commitlint/config-conventional": "7.5.0",
        "@commitlint/travis-cli": "7.5.0",
        "@semantic-release/apm-config": "6.0.1",
        "eslint-config-airbnb-base": "13.1.0",
        "eslint-plugin-import": "2.16.0",
        "husky": "1.3.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "2.6.3",
        "semantic-release": "15.13.3"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "renovate": {
        "extends": [
          "config:base"
        ]
      },
      "release": {
        "extends": "@semantic-release/apm-config"
      },
      "commitlint": {
        "extends": [
          "@commitlint/config-conventional"
        ]
      },
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.2/tarball"
      }
    },
    "8.5.1": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.1",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "5.0.0",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "1.0.0",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.22",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "7.4.0",
        "@commitlint/config-conventional": "7.3.1",
        "@commitlint/travis-cli": "7.4.0",
        "@semantic-release/apm-config": "6.0.1",
        "eslint-config-airbnb-base": "13.1.0",
        "eslint-plugin-import": "2.15.0",
        "husky": "1.3.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "2.6.3",
        "semantic-release": "15.13.3"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "renovate": {
        "extends": [
          "config:base"
        ]
      },
      "release": {
        "extends": "@semantic-release/apm-config"
      },
      "commitlint": {
        "extends": [
          "@commitlint/config-conventional"
        ]
      },
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.1/tarball"
      }
    },
    "8.5.0": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.5.0",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.flow",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "autofix": {
          "type": "object",
          "order": 3,
          "title": "Automatic Fixes",
          "properties": {
            "fixOnSave": {
              "title": "Fix errors on save",
              "description": "Have eslint attempt to fix some errors automatically when saving the file.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "ignoreFixableRulesWhileTyping": {
              "title": "Ignore fixable rules while typing",
              "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "rulesToDisableWhileFixing": {
              "title": "Disable specific rules from fixes",
              "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 3
            }
          }
        },
        "global": {
          "type": "object",
          "order": 4,
          "title": "Global ESLint",
          "properties": {
            "useGlobalEslint": {
              "title": "Use global ESLint installation",
              "description": "Make sure you have it in your $PATH",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "eslintrcPath": {
              "title": ".eslintrc Path",
              "description": "It will only be used when there's no config file in project",
              "type": "string",
              "default": "",
              "order": 4
            },
            "globalNodePath": {
              "title": "Global Node Installation Path",
              "description": "Write the value of `npm get prefix` here",
              "type": "string",
              "default": "",
              "order": 2
            }
          }
        },
        "disabling": {
          "type": "object",
          "order": 5,
          "properties": {
            "disableWhenNoEslintConfig": {
              "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "rulesToSilenceWhileTyping": {
              "title": "Silence specific rules while typing",
              "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 2
            }
          }
        },
        "advanced": {
          "type": "object",
          "collapsed": true,
          "title": "Uncommon",
          "order": 6,
          "properties": {
            "disableEslintIgnore": {
              "title": "Don't use .eslintignore files",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "disableFSCache": {
              "title": "Disable FileSystem Cache",
              "description": "Paths of node_modules, .eslintignore and others are normally cached",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "showRuleIdInMessage": {
              "title": "Show Rule ID in Messages",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "eslintRulesDirs": {
              "title": "ESLint Rules Directories",
              "description": "Specify a comma separated list of directories for ESLint to load rules from.",
              "type": "array",
              "default": [],
              "items": {
                "type": "string"
              },
              "order": 4
            },
            "localNodeModules": {
              "title": "Path to the local node_modules folder",
              "description": "Optionally specify the path to the local node_modules folder",
              "type": "string",
              "default": "",
              "order": 5
            }
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "1.2.0",
        "atom-linter": "10.0.0",
        "atom-package-deps": "4.6.2",
        "babel-preset-env": "1.7.0",
        "consistent-path": "2.0.3",
        "crypto-random-string": "1.0.0",
        "eslint": "4.19.1",
        "eslint-rule-documentation": "1.0.21",
        "fs-plus": "3.1.1",
        "resolve-env": "1.0.0",
        "user-home": "2.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "7.2.1",
        "@commitlint/config-conventional": "7.1.2",
        "@commitlint/travis-cli": "7.2.1",
        "eslint-config-airbnb-base": "13.1.0",
        "eslint-plugin-import": "2.14.0",
        "husky": "1.3.1",
        "jasmine-fix": "1.3.1",
        "rimraf": "2.6.2"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "renovate": {
        "extends": [
          "config:base"
        ]
      },
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.5.0/tarball"
      }
    },
    "8.4.1": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.4.1",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDirs": {
          "title": "ESLint Rules Directories",
          "description": "Specify a comma separated list of directories for ESLint to load rules from.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "ignoreFixableRulesWhileTyping": {
          "title": "Ignore fixable rules while typing",
          "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
          "type": "boolean",
          "default": false
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "^1.1.3",
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "babel-preset-env": "^1.6.1",
        "consistent-path": "^2.0.1",
        "crypto-random-string": "^1.0.0",
        "eslint": "^4.9.0",
        "eslint-rule-documentation": "^1.0.18",
        "fs-plus": "^3.0.1",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "^12.1.0",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.3.1",
        "rimraf": "^2.6.2"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                [
                  "env",
                  {
                    "targets": {
                      "node": "current"
                    }
                  }
                ]
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.4.1/tarball"
      }
    },
    "8.4.0": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.4.0",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDirs": {
          "title": "ESLint Rules Directories",
          "description": "Specify a comma separated list of directories for ESLint to load rules from.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "ignoreFixableRulesWhileTyping": {
          "title": "Ignore fixable rules while typing",
          "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
          "type": "boolean",
          "default": false
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "^1.1.1",
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "babel-preset-node5": "^12.0.0",
        "consistent-path": "^2.0.1",
        "crypto-random-string": "^1.0.0",
        "eslint": "^4.9.0",
        "eslint-rule-documentation": "^1.0.18",
        "fs-plus": "^3.0.1",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "^12.1.0",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.3.1",
        "rimraf": "^2.6.2"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                "node5"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.4.0/tarball"
      }
    },
    "8.3.2": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.3.2",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDir": {
          "title": "ESLint Rules Dir",
          "description": "Specify a directory for ESLint to load rules from",
          "type": "string",
          "default": ""
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "ignoreFixableRulesWhileTyping": {
          "title": "Ignore fixable rules while typing",
          "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
          "type": "boolean",
          "default": false
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "^1.1.1",
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "babel-preset-node5": "^12.0.0",
        "consistent-path": "^2.0.1",
        "crypto-random-string": "^1.0.0",
        "eslint": "^4.6.0",
        "eslint-rule-documentation": "^1.0.18",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "^12.0.0",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.3.0",
        "rimraf": "^2.5.4"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                "node5"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.3.2/tarball"
      }
    },
    "8.3.1": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.3.1",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDir": {
          "title": "ESLint Rules Dir",
          "description": "Specify a directory for ESLint to load rules from",
          "type": "string",
          "default": ""
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "ignoreFixableRulesWhileTyping": {
          "title": "Ignore fixable rules while typing",
          "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
          "type": "boolean",
          "default": false
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "^1.1.1",
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "babel-preset-node5": "^12.0.0",
        "consistent-path": "^2.0.1",
        "crypto-random-string": "^1.0.0",
        "eslint": "^4.6.0",
        "eslint-rule-documentation": "^1.0.18",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "^12.0.0",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.3.0",
        "rimraf": "^2.5.4"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                "node5"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.3.1/tarball"
      }
    },
    "8.3.0": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.3.0",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDir": {
          "title": "ESLint Rules Dir",
          "description": "Specify a directory for ESLint to load rules from",
          "type": "string",
          "default": ""
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "ignoreFixableRulesWhileTyping": {
          "title": "Ignore fixable rules while typing",
          "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated.",
          "type": "boolean",
          "default": false
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "^1.1.1",
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "babel-preset-node5": "^12.0.0",
        "consistent-path": "^2.0.1",
        "crypto-random-string": "^1.0.0",
        "eslint": "^4.6.0",
        "eslint-rule-documentation": "^1.0.18",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "eslint-config-airbnb-base": "^12.0.0",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.3.0",
        "rimraf": "^2.5.4"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": "off",
          "semi": [
            "error",
            "never"
          ],
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ],
          "object-curly-newline": [
            "error",
            {
              "ObjectExpression": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              },
              "ObjectPattern": {
                "minProperties": 5,
                "multiline": true,
                "consistent": true
              }
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "setBabelEnv": false,
            "babel": {
              "presets": [
                "node5"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.3.0/tarball"
      }
    },
    "8.2.1": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.2.1",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDir": {
          "title": "ESLint Rules Dir",
          "description": "Specify a directory for ESLint to load rules from",
          "type": "string",
          "default": ""
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "^1.1.1",
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "babel-preset-node5": "^12.0.0",
        "consistent-path": "^2.0.1",
        "crypto-random-string": "^1.0.0",
        "eslint": "^3.6.0",
        "eslint-rule-documentation": "^1.0.0",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.17.0",
        "eslint-config-airbnb-base": "^11.0.0",
        "eslint-plugin-import": "^2.2.0",
        "jasmine-fix": "^1.0.1",
        "rimraf": "^2.5.4"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": 0,
          "semi": [
            2,
            "never"
          ],
          "func-names": 0,
          "no-param-reassign": [
            2,
            {
              "props": false
            }
          ],
          "comma-dangle": 0,
          "no-underscore-dangle": 0,
          "global-require": 0,
          "import/no-unresolved": [
            2,
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "babel": {
              "presets": [
                "node5"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.2.1/tarball"
      }
    },
    "8.2.0": {
      "name": "linter-eslint",
      "main": "./src/main.js",
      "version": "8.2.0",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.13.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDir": {
          "title": "ESLint Rules Dir",
          "description": "Specify a directory for ESLint to load rules from",
          "type": "string",
          "default": ""
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "dependencies": {
        "atom-babel6-transpiler": "^1.1.1",
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "babel-preset-node5": "^12.0.0",
        "consistent-path": "^2.0.1",
        "crypto-random-string": "^1.0.0",
        "eslint": "^3.6.0",
        "eslint-rule-documentation": "^1.0.0",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.17.0",
        "eslint-config-airbnb-base": "^11.0.0",
        "eslint-plugin-import": "^2.2.0",
        "jasmine-fix": "^1.0.1",
        "rimraf": "^2.5.4"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": 0,
          "semi": [
            2,
            "never"
          ],
          "func-names": 0,
          "no-param-reassign": [
            2,
            {
              "props": false
            }
          ],
          "comma-dangle": 0,
          "no-underscore-dangle": 0,
          "global-require": 0,
          "import/no-unresolved": [
            2,
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "atomTranspilers": [
        {
          "glob": "{src,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "babel": {
              "presets": [
                "node5"
              ],
              "sourceMaps": "inline"
            },
            "cacheKeyFiles": [
              "package.json"
            ]
          }
        }
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.2.0/tarball"
      }
    },
    "8.1.7": {
      "name": "linter-eslint",
      "main": "./lib/main.js",
      "version": "8.1.7",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.10.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDir": {
          "title": "ESLint Rules Dir",
          "description": "Specify a directory for ESLint to load rules from",
          "type": "string",
          "default": ""
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint .",
        "clean": "rimraf lib",
        "watch": "npm run compile -- -w",
        "compile": "npm run clean && babel src --out-dir lib"
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "consistent-path": "^2.0.1",
        "escape-html": "^1.0.3",
        "eslint": "^3.6.0",
        "eslint-rule-documentation": "^1.0.0",
        "process-communication": "^1.1.0",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.18.0",
        "babel-preset-node5": "^12.0.0",
        "eslint": "^3.17.0",
        "eslint-config-airbnb-base": "^11.0.0",
        "eslint-plugin-import": "^2.2.0",
        "jasmine-fix": "^1.0.1",
        "rimraf": "^2.5.4"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": 0,
          "semi": [
            2,
            "never"
          ],
          "func-names": 0,
          "no-param-reassign": [
            2,
            {
              "props": false
            }
          ],
          "comma-dangle": 0,
          "no-underscore-dangle": 0,
          "global-require": 0,
          "import/no-unresolved": [
            2,
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.1.7/tarball"
      }
    },
    "8.1.6": {
      "name": "linter-eslint",
      "main": "./lib/main.js",
      "version": "8.1.6",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.10.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDir": {
          "title": "ESLint Rules Dir",
          "description": "Specify a directory for ESLint to load rules from",
          "type": "string",
          "default": ""
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint .",
        "clean": "rimraf lib",
        "watch": "npm run compile -- -w",
        "compile": "npm run clean && babel src --out-dir lib"
      },
      "dependencies": {
        "atom-linter": "^9.0.0",
        "atom-package-deps": "^4.0.1",
        "consistent-path": "^2.0.1",
        "escape-html": "^1.0.3",
        "eslint": "^3.6.0",
        "eslint-rule-documentation": "^1.0.0",
        "process-communication": "^1.1.0",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.18.0",
        "babel-preset-node5": "^12.0.0",
        "eslint": "^3.17.0",
        "eslint-config-airbnb-base": "^11.0.0",
        "eslint-plugin-import": "^2.2.0",
        "jasmine-fix": "^1.0.1",
        "rimraf": "^2.5.4"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": 0,
          "semi": [
            2,
            "never"
          ],
          "func-names": 0,
          "no-param-reassign": [
            2,
            {
              "props": false
            }
          ],
          "comma-dangle": 0,
          "no-underscore-dangle": 0,
          "global-require": 0,
          "import/no-unresolved": [
            2,
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.1.6/tarball"
      }
    },
    "8.1.5": {
      "name": "linter-eslint",
      "main": "./lib/main.js",
      "version": "8.1.5",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.10.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDir": {
          "title": "ESLint Rules Dir",
          "description": "Specify a directory for ESLint to load rules from",
          "type": "string",
          "default": ""
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint .",
        "clean": "rimraf lib",
        "watch": "npm run compile -- -w",
        "compile": "npm run clean && babel src --out-dir lib"
      },
      "dependencies": {
        "atom-linter": "^9.0.0",
        "atom-package-deps": "^4.0.1",
        "consistent-path": "^2.0.1",
        "escape-html": "^1.0.3",
        "eslint": "^3.6.0",
        "eslint-rule-documentation": "^1.0.0",
        "process-communication": "^1.1.0",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.18.0",
        "babel-preset-node5": "^12.0.0",
        "eslint": "^3.17.0",
        "eslint-config-airbnb-base": "^11.0.0",
        "eslint-plugin-import": "^2.2.0",
        "rimraf": "^2.5.4"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": 0,
          "semi": [
            2,
            "never"
          ],
          "func-names": 0,
          "no-param-reassign": [
            2,
            {
              "props": false
            }
          ],
          "comma-dangle": 0,
          "no-underscore-dangle": 0,
          "global-require": 0,
          "import/no-unresolved": [
            2,
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.1.5/tarball"
      }
    },
    "8.1.4": {
      "name": "linter-eslint",
      "main": "./lib/main.js",
      "version": "8.1.4",
      "description": "Lint JavaScript on the fly, using ESLint",
      "repository": "https://github.com/AtomLinter/linter-eslint.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.10.0 <2.0.0"
      },
      "configSchema": {
        "lintHtmlFiles": {
          "title": "Lint HTML Files",
          "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
          "type": "boolean",
          "default": false
        },
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": ""
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": ""
        },
        "advancedLocalNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": ""
        },
        "eslintRulesDir": {
          "title": "ESLint Rules Dir",
          "description": "Specify a directory for ESLint to load rules from",
          "type": "string",
          "default": ""
        },
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are cached",
          "type": "boolean",
          "default": false
        },
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false
        },
        "scopes": {
          "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
          "type": "array",
          "default": [
            "source.js",
            "source.jsx",
            "source.js.jsx",
            "source.babel",
            "source.js-semantic"
          ],
          "items": {
            "type": "string"
          }
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint .",
        "clean": "rimraf lib",
        "watch": "npm run compile -- -w",
        "compile": "npm run clean && babel src --out-dir lib"
      },
      "dependencies": {
        "atom-linter": "^9.0.0",
        "atom-package-deps": "^4.0.1",
        "consistent-path": "^2.0.1",
        "escape-html": "^1.0.3",
        "eslint": "^3.6.0",
        "eslint-rule-documentation": "^1.0.0",
        "process-communication": "^1.1.0",
        "resolve-env": "^1.0.0",
        "user-home": "^2.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.18.0",
        "babel-preset-node5": "^12.0.0",
        "eslint": "^3.17.0",
        "eslint-config-airbnb-base": "^11.0.0",
        "eslint-plugin-import": "^2.2.0",
        "rimraf": "^2.5.4"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "eslintConfig": {
        "rules": {
          "no-console": 0,
          "semi": [
            2,
            "never"
          ],
          "func-names": 0,
          "no-param-reassign": [
            2,
            {
              "props": false
            }
          ],
          "comma-dangle": 0,
          "no-underscore-dangle": 0,
          "global-require": 0,
          "import/no-unresolved": [
            2,
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": "true"
        },
        "env": {
          "node": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-eslint/versions/8.1.4/tarball"
      }
    }
  },
  "readme": "# linter-eslint\n\n[![CI](https://github.com/AtomLinter/linter-eslint/actions/workflows/CI.yml/badge.svg)](https://github.com/AtomLinter/linter-eslint/actions/workflows/CI.yml)\n[![Dependency Status](https://david-dm.org/AtomLinter/linter-eslint.svg)](https://david-dm.org/AtomLinter/linter-eslint)\n\nThis linter plugin for [Linter](https://github.com/AtomLinter/Linter) provides\nan interface to [eslint](http://eslint.org) versions 7 and below. It will be used with files that\nhave the \"JavaScript\" syntax.\n\n**For linting in projects that use ESLint v8 and above, install [linter-eslint-node](https://atom.io/packages/linter-eslint-node).**\n\n## Installation\n\n```ShellSession\napm install linter-eslint\n```\n\n`linter-eslint` will look for a version of `eslint` local to your project and\nuse it if it's available. If none is found it will fall back to the version it\nships with.\n\nLet's say you depend on a specific version of `eslint`. Maybe it has unreleased\nfeatures or maybe it's newer than what `linter-eslint` ships with. If\n`your-project/node_modules/eslint` exists `linter-eslint` will be used.\nThis package requires an `eslint` of at least v1.0.0.\n\nIf you do not have the `linter` package installed, it will be\ninstalled\nfor you. If you are using an alternative `linter-*` consumer,\nthe `linter` package can be disabled.\n\nIf you wish to lint files in JavaScript-derivative languages (like Typescript,\nFlow) with ESLint, you must add the scope name for that grammar to the\n`List of scopes to run ESLint on` option in `linter-eslint` Settings. For\nexample, to lint TypeScript files, add `source.ts` to the list.\n\n## Use with plugins\n\nYou have two options:\n\n*   Install locally to your project `eslint` and the plugin\n\n    *   `$ npm i --save-dev eslint [eslint-plugins]`\n\n*   Install globally `eslint` and plugins\n\n    *   `$ npm i -g eslint [eslint-plugins]`\n    *   Activate `Use Global Eslint` package option\n    *   (Optional) Set `Global Node Path` with `$ npm config get prefix`\n\n## Using ESLint\n\nNote that recent versions of ESLint do not use any rules by default. This\nmeans you have to specify a configuration file for your project!\n\nTo do this in a straightforward way run this:\n\n```ShellSession\neslint --init\n```\n\nAlternatively you can create the `.eslintrc` file by yourself. It is a good\nidea to have a look at the [ESLint documentation](http://eslint.org/docs/user-guide/configuring),\nincluding the [list of rules](http://eslint.org/docs/rules/).\n\n## A Note About Settings\n\nIf Use Global is on, Atom will use the global ESLint. The path to it is figured out by running `npm get prefix`. If this fails for any reason, you can set the global path manually in Global Node Installation Path.\n\nIf Use Global is off, Atom will try to find a local installation in the project folder, look if there's ESLint in `${PROJECT_ROOT}/node_modules` and use it if found.\n\nThe path to the local node_modules folder can be a path relative to the project or an absolute path and should end in `/node_modules/`. This path is used if the other methods of discovery have failed.\n\nIf there is no local installation Atom will use the built-in ESLint in the linter-eslint package itself.\n\n## Contributing\n\nSee the [contributing guidelines](./CONTRIBUTING.md) to get started.\n",
  "metadata": {
    "name": "linter-eslint",
    "main": "./dist/main.js",
    "version": "9.0.1",
    "description": "Lint JavaScript on the fly, using ESLint (v7 or older)",
    "repository": "https://github.com/AtomLinter/linter-eslint.git",
    "license": "MIT",
    "engines": {
      "atom": ">=1.13.0 <2.0.0"
    },
    "configSchema": {
      "scopes": {
        "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
        "type": "array",
        "default": [
          "source.js",
          "source.jsx",
          "source.js.jsx",
          "source.flow",
          "source.babel",
          "source.js-semantic"
        ],
        "items": {
          "type": "string"
        },
        "order": 1
      },
      "lintHtmlFiles": {
        "title": "Lint HTML Files",
        "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
        "type": "boolean",
        "default": false,
        "order": 2
      },
      "autofix": {
        "type": "object",
        "order": 3,
        "title": "Automatic Fixes",
        "properties": {
          "fixOnSave": {
            "title": "Fix errors on save",
            "description": "Have eslint attempt to fix some errors automatically when saving the file.",
            "type": "boolean",
            "default": false,
            "order": 1
          },
          "ignoreFixableRulesWhileTyping": {
            "title": "Ignore fixable rules while typing",
            "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
            "type": "boolean",
            "default": false,
            "order": 2
          },
          "rulesToDisableWhileFixing": {
            "title": "Disable specific rules from fixes",
            "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
            "type": "array",
            "default": [],
            "items": {
              "type": "string"
            },
            "order": 3
          }
        }
      },
      "global": {
        "type": "object",
        "collapsed": true,
        "order": 4,
        "title": "Global ESLint",
        "properties": {
          "useGlobalEslint": {
            "title": "Use global ESLint installation",
            "description": "Make sure you have it in your $PATH. ⚠️ Using the global ESLint install is heavily discouraged. If the installation is not found, linter-eslint will not work.",
            "type": "boolean",
            "default": false,
            "order": 1
          },
          "eslintrcPath": {
            "title": ".eslintrc Path",
            "description": "It will only be used when there's no config file in project (if using a relative path, the file should be present in all your projects).",
            "type": "string",
            "default": "",
            "order": 4
          },
          "globalNodePath": {
            "title": "Global Node Installation Path",
            "description": "Write the value of `npm get prefix` here",
            "type": "string",
            "default": "",
            "order": 2
          }
        }
      },
      "disabling": {
        "type": "object",
        "order": 5,
        "properties": {
          "disableWhenNoEslintConfig": {
            "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
            "type": "boolean",
            "default": true,
            "order": 1
          },
          "rulesToSilenceWhileTyping": {
            "title": "Silence specific rules while typing",
            "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
            "type": "array",
            "default": [],
            "items": {
              "type": "string"
            },
            "order": 2
          }
        }
      },
      "advanced": {
        "type": "object",
        "collapsed": true,
        "title": "Uncommon",
        "order": 6,
        "properties": {
          "disableEslintIgnore": {
            "title": "Don't use .eslintignore files",
            "type": "boolean",
            "default": false,
            "order": 1
          },
          "disableFSCache": {
            "title": "Disable FileSystem Cache",
            "description": "Paths of node_modules, .eslintignore and others are normally cached",
            "type": "boolean",
            "default": false,
            "order": 2
          },
          "showRuleIdInMessage": {
            "title": "Show Rule ID in Messages",
            "type": "boolean",
            "default": true,
            "order": 3
          },
          "eslintRulesDirs": {
            "title": "ESLint Rules Directories",
            "description": "Specify a comma separated list of directories for ESLint to load rules from.",
            "type": "array",
            "default": [],
            "items": {
              "type": "string"
            },
            "order": 4
          },
          "localNodeModules": {
            "title": "Path to the local node_modules folder",
            "description": "Optionally specify the path to the local node_modules folder",
            "type": "string",
            "default": "",
            "order": 5
          },
          "showIncompatibleVersionNotification": {
            "title": "Notify when incompatible ESLint is detected",
            "description": "When enabled, will show a notification if this package loads inside a project using ESLint version 8 or greater _and_ the user has not already installed the newer `linter-eslint-node` package. Uncheck if you don't want these notifications.",
            "type": "boolean",
            "default": true,
            "order": 6
          }
        }
      }
    },
    "scripts": {
      "format": "prettier --write .",
      "test.format": "prettier . --check",
      "lint": "eslint . --fix",
      "test.lint": "npm run build && eslint .",
      "test": "npm run build && atom --test spec",
      "clean": "rimraf dist",
      "dev": "npm run build -- --watch",
      "build": "cross-env NODE_ENV=development cross-env BABEL_KEEP_MODULES=false babel src --out-dir dist --delete-dir-on-start",
      "prepare": "npm run build",
      "build-commit": "build-commit -o dist"
    },
    "atomTestRunner": "./spec/runner",
    "dependencies": {
      "atom-linter": "10.0.0",
      "atom-package-deps": "8.0.0",
      "babel-preset-env": "1.7.0",
      "consistent-path": "2.0.3",
      "eslint": "7.32.0",
      "eslint-rule-documentation": "1.0.23",
      "fs-plus": "3.1.1",
      "resolve-env": "1.0.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.16.0",
      "@babel/core": "^7.16.0",
      "@types/atom": "^1.40.11",
      "@types/eslint": "8.4.1",
      "@types/jasmine": "^4.0.0",
      "@types/node": "^17.0.0",
      "@types/rimraf": "^3.0.2",
      "atom-jasmine3-test-runner": "^5.2.9",
      "babel-preset-atomic": "^4.2.1",
      "build-commit": "^0.1.4",
      "cross-env": "^7.0.3",
      "eslint-config-airbnb-base": "15.0.0",
      "eslint-plugin-import": "2.25.4",
      "jasmine-fix": "1.3.1",
      "rimraf": "3.0.2"
    },
    "package-deps": [
      {
        "name": "linter",
        "minimumVersion": "3.3.0"
      }
    ],
    "providedServices": {
      "linter": {
        "versions": {
          "2.0.0": "provideLinter"
        }
      }
    },
    "activationHooks": [
      "core:loaded-shell-environment"
    ],
    "eslintConfig": {
      "root": true,
      "rules": {
        "no-console": "off",
        "max-len": [
          1,
          {
            "code": 130
          }
        ],
        "semi": [
          "error",
          "never"
        ],
        "comma-dangle": "off",
        "global-require": "off",
        "import/no-import-module-exports": "off",
        "import/no-unresolved": [
          "error",
          {
            "ignore": [
              "atom"
            ]
          }
        ],
        "object-curly-newline": [
          "error",
          {
            "ObjectExpression": {
              "minProperties": 5,
              "multiline": true,
              "consistent": true
            },
            "ObjectPattern": {
              "minProperties": 5,
              "multiline": true,
              "consistent": true
            }
          }
        ]
      },
      "extends": "airbnb-base",
      "globals": {
        "atom": "readonly"
      },
      "env": {
        "node": true,
        "browser": true
      }
    }
  }
}