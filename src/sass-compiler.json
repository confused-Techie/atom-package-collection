{
  "name": "sass-compiler",
  "repository": {
    "type": "git",
    "url": "https://github.com/GomatoX/sass-compiler"
  },
  "downloads": 16124,
  "stargazers_count": 6,
  "releases": {
    "latest": "0.4.0"
  },
  "versions": {
    "0.4.0": {
      "name": "sass-compiler",
      "main": "./lib/sass-compiler",
      "version": "0.4.0",
      "description": "Sass Compiler based on node-sass library that provides binding for Node.js to libsass. Works only with scss syntax. ",
      "repository": "https://github.com/GomatoX/sass-compiler",
      "license": "MIT",
      "engines": {
        "atom": ">=0.170.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/sass-compiler/versions/0.4.0/tarball"
      }
    },
    "0.3.0": {
      "name": "sass-compiler",
      "main": "./lib/sass-compiler",
      "version": "0.3.0",
      "description": "SASS Compiler based on node-sass library that provides binding for Node.js to libsass. Works only with scss syntax. ",
      "repository": "https://github.com/GomatoX/sass-compiler",
      "license": "MIT",
      "engines": {
        "atom": ">=0.170.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/sass-compiler/versions/0.3.0/tarball"
      }
    }
  },
  "readme": "# Sass Compiler for ATOM editor\n\nSass Compiler based on node-sass library that provides binding for Node.js to libsass. Works only with scss syntax.\n\n## Dependencies\n* node-sass library https://github.com/sass/node-sass\n\n## Modes\nAvailable two compiling file detection modes:\n* Base path is editor project.\n* Tries to extract current path from editable file. It will check if **inputPath** value are in editable file path, and it will be reference point for compiling `Scss` file. Aslo it could be specified based on reference point with **outputPathExtracted**.\n\n## Settings\n| Parameter           \t| Description                                    \t|\n|---------------------\t|--------------------------------------------------------------------------------------------------------------------\t|\n| inputPath           \t| Specifies where the *Scss* files are stored. ( Path relative to your project ).                                    \t|\n| outputPath          \t| This specifies where the *CSS* will be saved. ( Path relative to your project ).                                   \t|\n| fileName            \t| *Scss* type file name, to be parent of all @include.                                                               \t|\n| outputStyle         \t| `String` to determine how the final *CSS* should be rendered. Its value should be one of `nested` or `compressed`. \t|\n| successMsg          \t| Eneable/disable success message.                                                                                   \t|\n| extractPath         \t| Eneable/disable - Get path from file. ( package tries to extract current path based on editable file and sets reference point ).                              \t|\n| inputPathExtracted  \t| Specifies where your *Scss* files are stored. ( Relative to extracted reference point ).                            \t|\n| outputPathExtracted \t| Specifies where the *CSS* will be saved. ( Relative to extracted reference point ).                                 \t|\n\n## Plans\n* Include `node-sass` in package dependencies to use apm node not local one.\n",
  "metadata": {
    "name": "sass-compiler",
    "main": "./lib/sass-compiler",
    "version": "0.4.0",
    "description": "Sass Compiler based on node-sass library that provides binding for Node.js to libsass. Works only with scss syntax. ",
    "repository": "https://github.com/GomatoX/sass-compiler",
    "license": "MIT",
    "engines": {
      "atom": ">=0.170.0"
    },
    "dependencies": {}
  }
}