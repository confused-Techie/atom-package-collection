{
  "name": "dbg-gdb-custom-server",
  "repository": {
    "type": "git",
    "url": "https://github.com/msembinelli/atom-dbg-gdb-custom-server"
  },
  "downloads": 1044,
  "stargazers_count": 1,
  "releases": {
    "latest": "0.3.0"
  },
  "versions": {
    "0.3.0": {
      "name": "dbg-gdb-custom-server",
      "main": "./lib/main",
      "version": "0.3.0",
      "description": "An interactive GDB debugger for Atom. Based on dbg-gdb, but provides more customization.",
      "keywords": [
        "gdb",
        "debugger",
        "C",
        "C++",
        "D",
        "Go",
        "Objective-C",
        "Fortran",
        "Pascal",
        "Rust",
        "assembly",
        "Ada"
      ],
      "repository": "https://github.com/msembinelli/atom-dbg-gdb-custom-server",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "package-deps": [
        "dbg",
        "output-panel"
      ],
      "dependencies": {
        "atom-package-deps": "^4.0.1"
      },
      "providedServices": {
        "dbgProvider": {
          "description": "Provides a dbg gdb debugger, and optionally starting a remote GDB debug server.",
          "versions": {
            "1.1.0": "provideDbgProvider"
          }
        }
      },
      "consumedServices": {
        "dbg": {
          "versions": {
            "^1.0.0": "consumeDbg"
          }
        },
        "output-panel": {
          "versions": {
            "^1.0.0": "consumeOutputPanel",
            "^0.1.0": "consumeOutputPanel"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/dbg-gdb-custom-server/versions/0.3.0/tarball"
      }
    },
    "0.2.0": {
      "name": "dbg-gdb-custom-server",
      "main": "./lib/main",
      "version": "0.2.0",
      "description": "An interactive GDB debugger for Atom. Based on dbg-gdb, but provides more customization.",
      "keywords": [
        "gdb",
        "debugger",
        "C",
        "C++",
        "D",
        "Go",
        "Objective-C",
        "Fortran",
        "Pascal",
        "Rust",
        "assembly",
        "Ada"
      ],
      "repository": "https://github.com/msembinelli/atom-dbg-gdb-custom-server",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "package-deps": [
        "dbg",
        "output-panel"
      ],
      "dependencies": {
        "atom-package-deps": "^4.0.1"
      },
      "providedServices": {
        "dbgProvider": {
          "description": "Provides a dbg gdb debugger, and optionally starting a remote GDB debug server.",
          "versions": {
            "1.1.0": "provideDbgProvider"
          }
        }
      },
      "consumedServices": {
        "dbg": {
          "versions": {
            "^1.0.0": "consumeDbg"
          }
        },
        "output-panel": {
          "versions": {
            "^1.0.0": "consumeOutputPanel",
            "^0.1.0": "consumeOutputPanel"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/dbg-gdb-custom-server/versions/0.2.0/tarball"
      }
    },
    "0.1.0": {
      "name": "dbg-gdb-custom-server",
      "main": "./lib/main",
      "version": "0.1.0",
      "description": "An interactive GDB debugger for Atom. Based on dbg-gdb, but provides more customization.",
      "keywords": [
        "gdb",
        "debugger",
        "C",
        "C++",
        "D",
        "Go",
        "Objective-C",
        "Fortran",
        "Pascal",
        "Rust",
        "assembly",
        "Ada"
      ],
      "repository": "https://github.com/msembinelli/atom-dbg-gdb-custom-server",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "package-deps": [
        "dbg",
        "output-panel"
      ],
      "dependencies": {
        "atom-package-deps": "^4.0.1"
      },
      "providedServices": {
        "dbgProvider": {
          "description": "Provides a dbg gdb debugger, and optionally starting a remote GDB debug server.",
          "versions": {
            "1.1.0": "provideDbgProvider"
          }
        }
      },
      "consumedServices": {
        "dbg": {
          "versions": {
            "^1.0.0": "consumeDbg"
          }
        },
        "output-panel": {
          "versions": {
            "^1.0.0": "consumeOutputPanel",
            "^0.1.0": "consumeOutputPanel"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/dbg-gdb-custom-server/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# dbg-gdb-custom-server package\n\nAn interactive GDB debugger for Atom.\n\ndbg-gdb-custom-server additions:\n\nBased on dbg-gdb, but removes some of the hardcoded start commands, and provides an option for a debug server. Great for debugging remote embedded targets.\n\nRemoved commands: 'set mi-async on' && 'set target-async on' as these cause problems for remote targets.\n\n![Debug screenshot](http://i.imgur.com/XcI592U.png)\n\n## How to use\n\n1. Right click on an executable in the treeview, select `Debug this file`, and click `Save`\n2. (Optional) Customize the gdb_executable, gdb_arguments, server_executable, and server_arguments if your device is a remote/embedded target.\n3. Toggle breakpoints by clicking beside line numbers or pressing `F9`\n4. Press `F5`, and select the executable\n5. ...\n6. Profit!\n\n## Service: `dbgProvider`\n\nCreates a `dbgProvider` for GDB, see [basic dbgProvider  service description](https://github.com/31i73/atom-dbg#consumed-service-dbgprovider)\n\n## Supported options\n> `path` - *Optional*. The path to the file to debug  \n> `args` - *Optional*. An array of arguments to pass to the file being debugged  \n> `cwd` - *Optional*. The working directory to use when debugging  \n> `env_vars` - *Optional*. An array of environmental variables, ex: ['VAR1=9', 'VAR2=thing', ...]  \n> `gdb_executable` - *Optional*. The full command used to execute gdb (defaults to 'gdb')  \n> `gdb_arguments` - *Optional*. An array of extra arguments to pass to gdb (note that the arguments ['-quiet', '--interpreter=mi2'] are always included first)  \n> `gdb_commands` - *Optional*. An array of commands to pass to gdb, once active (these are executed last of all, but right before '-exec-run')  \n> `server_executable` - *Optional*. Starts a remote GDB server of your choice, ex: 'JLinkGDBServerCL')  \n> `server_arguments` - *Optional*. An array of extra arguments to pass to the remote GDB server ex: ['-if', 'swd', '-device', 'nRF52832_xxAA'])  \n\nFor a list of features and all available keyboard shortcuts, please see [dbg](https://atom.io/packages/dbg) and [dbg-gdb](https://atom.io/packages/dbg-gdb)\n\n## Example .atom-dbg.cson for nRF52 Embedded Target\n```\n\"out\\\\out.axf\":\n\tdebugger: \"dbg-gdb-custom-server\"\n\tgdb_executable: 'arm-none-eabi-gdb'\n\tgdb_commands: ['target remote localhost:2331', 'monitor speed 1000',\n                       'monitor clrbp', 'monitor reset', 'monitor halt',\n                       'monitor regs', 'monitor flash breakpoints 1',\n                       'monitor semihosting enable', 'monitor semihosting IOClient 1',\n                       'monitor SWO DisableTarget 0xFFFFFFFF',\n                       'monitor SWO EnableTarget 0 0 0x1 0']\n\tpath: \"out\\\\out.axf\"\n\tcwd: \"out\"\n\tserver_executable: 'JLinkGDBServerCL'\n\tserver_arguments: ['-if', 'swd', '-device', 'nRF52832_xxAA',\n\t                   '-endian', 'little', '-speed', '1000', '-port',\n                           '2331', '-swoport', '2332', '-telnetport',\n                           '2333', '-vd', '-ir', '-localhostonly', '1',\n                           '-singlerun', '-strict', '-timeout', '0']\n```\n",
  "metadata": {
    "name": "dbg-gdb-custom-server",
    "main": "./lib/main",
    "version": "0.3.0",
    "description": "An interactive GDB debugger for Atom. Based on dbg-gdb, but provides more customization.",
    "keywords": [
      "gdb",
      "debugger",
      "C",
      "C++",
      "D",
      "Go",
      "Objective-C",
      "Fortran",
      "Pascal",
      "Rust",
      "assembly",
      "Ada"
    ],
    "repository": "https://github.com/msembinelli/atom-dbg-gdb-custom-server",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "package-deps": [
      "dbg",
      "output-panel"
    ],
    "dependencies": {
      "atom-package-deps": "^4.0.1"
    },
    "providedServices": {
      "dbgProvider": {
        "description": "Provides a dbg gdb debugger, and optionally starting a remote GDB debug server.",
        "versions": {
          "1.1.0": "provideDbgProvider"
        }
      }
    },
    "consumedServices": {
      "dbg": {
        "versions": {
          "^1.0.0": "consumeDbg"
        }
      },
      "output-panel": {
        "versions": {
          "^1.0.0": "consumeOutputPanel",
          "^0.1.0": "consumeOutputPanel"
        }
      }
    }
  }
}