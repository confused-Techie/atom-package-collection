{
  "name": "linter-flake8",
  "repository": {
    "type": "git",
    "url": "https://github.com/AtomLinter/linter-flake8"
  },
  "downloads": 697803,
  "stargazers_count": 399,
  "releases": {
    "latest": "2.4.0"
  },
  "versions": {
    "2.4.0": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.4.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used",
        "MagicPython:grammar-used",
        "django-atom:grammar-used",
        "atom-django:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [
            "tox.ini",
            ".flake8",
            "setup.cfg"
          ],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 79
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        },
        "builtins": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Define additional built in variables, in a comma separated list."
        }
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^5.0.0",
        "fs-plus": "^3.0.0",
        "semver": "^5.4.1"
      },
      "devDependencies": {
        "eslint": "^4.6.0",
        "eslint-config-airbnb-base": "^12.0.0",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.0.1"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.4.0/tarball"
      }
    },
    "2.3.0": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.3.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used",
        "MagicPython:grammar-used",
        "django-atom:grammar-used",
        "atom-django:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [
            "tox.ini",
            ".flake8",
            "setup.cfg"
          ],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 79
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        },
        "builtins": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Define additional built in variables, in a comma separated list."
        }
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^3.0.0",
        "semver": "^5.4.1"
      },
      "devDependencies": {
        "eslint": "^4.6.0",
        "eslint-config-airbnb-base": "^12.0.0",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.3.0/tarball"
      }
    },
    "2.2.1": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.2.1",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used",
        "MagicPython:grammar-used",
        "django-atom:grammar-used",
        "atom-django:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 79
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        },
        "builtins": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Define additional built in variables, in a comma separated list."
        }
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^3.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1",
        "eslint-config-airbnb-base": "^11.1.1",
        "eslint-plugin-import": "^2.2.0",
        "jasmine-fix": "^1.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.2.1/tarball"
      }
    },
    "2.2.0": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.2.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used",
        "MagicPython:grammar-used",
        "django-atom:grammar-used",
        "atom-django:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 79
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        },
        "builtins": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Define additional built in variables, in a comma separated list."
        }
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^3.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1",
        "eslint-config-airbnb-base": "^11.1.1",
        "eslint-plugin-import": "^2.2.0",
        "jasmine-fix": "^1.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.2.0/tarball"
      }
    },
    "2.1.5": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.1.5",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used",
        "MagicPython:grammar-used",
        "django-atom:grammar-used",
        "atom-django:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "disableTimeout": {
          "type": "boolean",
          "default": false,
          "description": "Disable the 10 second execution timeout"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        }
      },
      "dependencies": {
        "atom-linter": "^9.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^3.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1",
        "eslint-config-airbnb-base": "^11.1.1",
        "eslint-plugin-import": "^2.2.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.1.5/tarball"
      }
    },
    "2.1.4": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.1.4",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used",
        "MagicPython:grammar-used",
        "django-atom:grammar-used",
        "atom-django:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "disableTimeout": {
          "type": "boolean",
          "default": false,
          "description": "Disable the 10 second execution timeout"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        }
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.9.3"
      },
      "devDependencies": {
        "eslint": "^3.12.0",
        "eslint-config-airbnb-base": "^11.0.0",
        "eslint-plugin-import": "^2.2.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.1.4/tarball"
      }
    },
    "2.1.3": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.1.3",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used",
        "MagicPython:grammar-used",
        "django-atom:grammar-used",
        "atom-django:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "disableTimeout": {
          "type": "boolean",
          "default": false,
          "description": "Disable the 10 second execution timeout"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        }
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.9.3"
      },
      "devDependencies": {
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.0",
        "eslint-plugin-import": "^2.1.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.1.3/tarball"
      }
    },
    "2.1.2": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.1.2",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used",
        "MagicPython:grammar-used",
        "django-atom:grammar-used",
        "atom-django:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "disableTimeout": {
          "type": "boolean",
          "default": false,
          "description": "Disable the 10 second execution timeout"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        }
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.9.3"
      },
      "devDependencies": {
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.0",
        "eslint-plugin-import": "^2.1.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.1.2/tarball"
      }
    },
    "2.1.1": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.1.1",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used",
        "MagicPython:grammar-used",
        "atom-django:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "disableTimeout": {
          "type": "boolean",
          "default": false,
          "description": "Disable the 10 second execution timeout"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        }
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.9.3"
      },
      "devDependencies": {
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.0",
        "eslint-plugin-import": "^2.1.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.1.1/tarball"
      }
    },
    "2.1.0": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.1.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "activationHooks": [
        "language-python:grammar-used"
      ],
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "disableTimeout": {
          "type": "boolean",
          "default": false,
          "description": "Disable the 10 second execution timeout"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        }
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.9.3"
      },
      "devDependencies": {
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.0",
        "eslint-plugin-import": "^2.1.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.1.0/tarball"
      }
    },
    "2.0.2": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.0.2",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "disableTimeout": {
          "type": "boolean",
          "default": false,
          "description": "Disable the 10 second execution timeout"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        }
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.9.3"
      },
      "devDependencies": {
        "eslint": "^3.8.0",
        "eslint-config-airbnb-base": "^9.0.0",
        "eslint-plugin-import": "^2.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.0.2/tarball"
      }
    },
    "2.0.1": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.0.1",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "disableTimeout": {
          "type": "boolean",
          "default": false,
          "description": "Disable the 10 second execution timeout"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        }
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.9.3"
      },
      "devDependencies": {
        "eslint": "^3.8.0",
        "eslint-config-airbnb-base": "^9.0.0",
        "eslint-plugin-import": "^2.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.0.1/tarball"
      }
    },
    "2.0.0": {
      "name": "linter-flake8",
      "main": "./lib/main.js",
      "version": "2.0.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "flake8",
          "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
        },
        "disableTimeout": {
          "type": "boolean",
          "default": false,
          "description": "Disable the 10 second execution timeout"
        },
        "projectConfigFile": {
          "type": "array",
          "default": [],
          "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
          "items": {
            "type": "string"
          }
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable)",
          "type": "integer",
          "default": -1
        },
        "hangClosing": {
          "type": "boolean",
          "default": false
        },
        "selectErrors": {
          "description": "input \"E, W\" to include all errors/warnings",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pycodestyleErrorsToWarnings": {
          "description": "Convert pycodestyle \"E\" messages to linter warnings",
          "type": "boolean",
          "default": false
        },
        "flakeErrors": {
          "description": "Convert Flake \"F\" messages to linter errors",
          "type": "boolean",
          "default": false
        }
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.8.1"
      },
      "devDependencies": {
        "eslint": "^3.6.0",
        "eslint-config-airbnb-base": "^8.0.0",
        "eslint-plugin-import": "^1.16.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/2.0.0/tarball"
      }
    },
    "1.13.4": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.13.4",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.8.1"
      },
      "devDependencies": {
        "coffeelint": "^1.15.0",
        "eslint": "^3.4.0",
        "eslint-config-airbnb-base": "^6.0.0",
        "eslint-plugin-import": "^1.14.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "coffeelint lib && eslint spec"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "off",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.13.4/tarball"
      }
    },
    "1.13.3": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.13.3",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.8.1"
      },
      "devDependencies": {
        "coffeelint": "^1.15.0",
        "eslint": "^3.4.0",
        "eslint-config-airbnb-base": "^5.0.3",
        "eslint-plugin-import": "^1.14.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "coffeelint lib && eslint spec"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": "off",
          "global-require": "off",
          "import/no-unresolved": [
            "off",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.13.3/tarball"
      }
    },
    "1.13.2": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.13.2",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^5.0.2",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.8.1"
      },
      "devDependencies": {
        "coffeelint": "^1.15.0",
        "eslint": "^2.9.0",
        "eslint-config-airbnb-base": "^3.0.1",
        "eslint-plugin-import": "^1.7.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "coffeelint lib && eslint spec"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": 0,
          "global-require": 0,
          "import/no-unresolved": [
            2,
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.13.2/tarball"
      }
    },
    "1.13.1": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.13.1",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^5.0.0",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.8.1"
      },
      "devDependencies": {
        "coffeelint": "^1.15.0",
        "eslint": "^2.9.0",
        "eslint-config-airbnb-base": "^3.0.1",
        "eslint-plugin-import": "^1.7.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "test": "apm test",
        "lint": "coffeelint lib && eslint spec"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": 0,
          "global-require": 0,
          "import/no-unresolved": [
            2,
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "extends": "airbnb-base",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.13.1/tarball"
      }
    },
    "1.13.0": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.13.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^4.3.4",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.8.1"
      },
      "devDependencies": {
        "coffeelint": "^1.14.2",
        "eslint": "^2.2.0",
        "babel-eslint": "^5.0.0",
        "eslint-config-airbnb": "^6.0.2"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": 0
        },
        "extends": "airbnb/base",
        "parser": "babel-eslint",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.13.0/tarball"
      }
    },
    "1.12.1": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.12.1",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^4.3.4",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.8.1"
      },
      "devDependencies": {
        "coffeelint": "^1.14.2",
        "eslint": "^2.2.0",
        "babel-eslint": "^5.0.0",
        "eslint-config-airbnb": "^6.0.2"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": 0
        },
        "extends": "airbnb/base",
        "parser": "babel-eslint",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.12.1/tarball"
      }
    },
    "1.12.0": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.12.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^4.3.4",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.8.1"
      },
      "devDependencies": {
        "coffeelint": "^1.14.2",
        "eslint": "^2.2.0",
        "babel-eslint": "^5.0.0",
        "eslint-config-airbnb": "^6.0.2"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": 0
        },
        "extends": "airbnb/base",
        "parser": "babel-eslint",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.12.0/tarball"
      }
    },
    "1.11.0": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.11.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^4.3.4",
        "atom-package-deps": "^4.0.1",
        "fs-plus": "^2.8.1"
      },
      "devDependencies": {
        "coffeelint": "^1.14.2",
        "eslint": "^1.10.3",
        "babel-eslint": "^5.0.0",
        "eslint-config-airbnb": "^5.0.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": 0
        },
        "extends": "airbnb/base",
        "parser": "babel-eslint",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.11.0/tarball"
      }
    },
    "1.10.1": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.10.1",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^4.3.4",
        "atom-package-deps": "^3.0.7"
      },
      "devDependencies": {
        "coffeelint": "^1.14.2",
        "eslint": "^1.10.3",
        "babel-eslint": "^4.1.6",
        "eslint-config-airbnb": "^5.0.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": 0
        },
        "extends": "airbnb/base",
        "parser": "babel-eslint",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.10.1/tarball"
      }
    },
    "1.10.0": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.10.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^4.3.4",
        "atom-package-deps": "^3.0.7"
      },
      "devDependencies": {
        "coffeelint": "^1.14.2",
        "eslint": "^1.10.3",
        "babel-eslint": "^4.1.6",
        "eslint-config-airbnb": "^4.0.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": 0
        },
        "extends": "airbnb/base",
        "parser": "babel-eslint",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.10.0/tarball"
      }
    },
    "1.9.3": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.9.3",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^4.1.1",
        "atom-package-deps": "^3.0.6"
      },
      "devDependencies": {
        "coffeelint": "^1.14.1",
        "eslint": "^1.10.3",
        "babel-eslint": "^4.1.5",
        "eslint-config-airbnb": "^2.0.0"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "eslintConfig": {
        "rules": {
          "comma-dangle": 0
        },
        "extends": "airbnb/base",
        "parser": "babel-eslint",
        "globals": {
          "atom": true
        },
        "env": {
          "es6": true,
          "node": true
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.9.3/tarball"
      }
    },
    "1.9.2": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.9.2",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^3.0.0",
        "atom-package-deps": "^2.0.5"
      },
      "devDependencies": {
        "coffeelint": "^1.12.1"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.9.2/tarball"
      }
    },
    "1.9.1": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.9.1",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^3.0.0",
        "atom-package-deps": "^2.0.5"
      },
      "devDependencies": {
        "coffeelint": "^1.12.1"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.9.1/tarball"
      }
    },
    "1.9.0": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.9.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^3.0.0",
        "atom-package-deps": "^2.0.5"
      },
      "devDependencies": {
        "coffeelint": "^1.12.1"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.9.0/tarball"
      }
    },
    "1.8.0": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.8.0",
      "description": "Atom linter plugin for Python, using flake8",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "dependencies": {
        "atom-linter": "^3.0.0",
        "atom-package-deps": "^2.0.5"
      },
      "devDependencies": {
        "coffeelint": "^1.12.1"
      },
      "package-deps": [
        "linter"
      ],
      "scripts": {
        "lint": "./node_modules/.bin/coffeelint lib"
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.8.0/tarball"
      }
    },
    "1.7.0": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.7.0",
      "description": "Atom linter plugin for Python, using flake8",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "license": "MIT",
      "dependencies": {
        "atom-linter": "^3.0.0",
        "atom-package-deps": "^2.0.5"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.7.0/tarball"
      }
    },
    "1.6.1": {
      "name": "linter-flake8",
      "main": "./lib/main",
      "version": "1.6.1",
      "description": "Atom linter plugin for Python, using flake8",
      "repository": {
        "type": "git",
        "url": "https://github.com/AtomLinter/linter-flake8"
      },
      "license": "MIT",
      "dependencies": {
        "atom-linter": "^2.0.0"
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-flake8/versions/1.6.1/tarball"
      }
    }
  },
  "readme": "# linter-flake8\n\n[![Build Status](https://travis-ci.org/AtomLinter/linter-flake8.svg)](https://travis-ci.org/AtomLinter/linter-flake8)\n\nlinter-flake8 is a [flake8](https://pypi.python.org/pypi/flake8) provider for\n[linter](https://github.com/atom-community/linter).\n\n![img](https://cloud.githubusercontent.com/assets/4278113/8768482/52f975c6-2e3f-11e5-87e4-27c8359fd36c.gif)\n\n## Installation\n\nTo use this plugin `flake8` will need to be installed on your\nsystem. If it is not already installed, you can install\n[flake8](https://pypi.python.org/pypi/flake8) by typing the following in a\nterminal:\n\n```ShellSession\npip install flake8\n```\n\nYou can then install this package from with Atom or by typing:\n\n```ShellSession\n$ apm install linter-flake8\n```\n\n_Note: If the `linter` package is not currently installed, it will be installed\nfor you._\n\n### Built-in docstrings check (Optional)\n\nTo include built-in docstrings (pep257) support you will also need to install:\n\n```ShellSession\npip install flake8-docstrings\n```\n\n### OpenStack Style Guidelines check (Optional)\n\nTo support\n[OpenStack Style Guidelines](http://google.github.io/styleguide/pyguide.html),\nyou will also need to install the\n[hacking](https://github.com/openstack-dev/hacking) module:\n\n```ShellSession\npip install hacking\n```\n\n### Virtualenv\n\nTo ensure `flake8` targets the proper Python version for each project you work\non, it is highly recommended to install `flake8` in each project's\n[virtualenv](https://virtualenv.pypa.io/en/latest/):\n\n*   If you are okay with installing `flake8` inside each virtualenv, just do\n    that.\n\n*   If you'd rather use the system-wide `flake8` versions (e.g. `flake8` and\n    `flake8-python2`), create a `flake8` symlink in each virtualenv pointing to\n    your desired flake8 version. For example: `ln -s /usr/bin/flake8-python2\n    ~/.virtualenvs/random_python2_project/bin/flake8`\n\nThen [activate your virtualenv](https://virtualenv.pypa.io/en/latest/userguide.html#activate-script)\nfrom the command line before starting Atom, and you're good to go!\n\n## Settings\n\nYou can configure linter-flake8 like any [Atom](https://atom.io/) package by\nediting the settings in _Atom -> Preferences -> Packages -> linter-flake8_.\n\n![image](https://cloud.githubusercontent.com/assets/427137/10375451/758567d2-6dad-11e5-9b5e-3e820f4c3d57.png)\n\nOr if you prefer you can use Atom _config.cson_ file _~/.atom/config.cson_\n(click _Open Your Config_ in _Atom_ menu).\n\nIf you installed `flake8` in a location not in your `$PATH`, the Settings panel\nwill let you specify where it lives. For example:\n\n```cson\n'linter-flake8':\n  'executablePath': '/usr/bin/flake8'\n```\n\nThe `executablePath` setting may use `$PROJECT` and `$PROJECT_NAME` for the path or name of the current project, respectively.\n\n\n\n### Project configuration files\n\nLinter also supports reading `flake8` configuration files. To use them, you\nneed specify their names manually into _Config Files Names_ in the package\nsettings. Note that package settings from Settings panel will be **ignored** if\na configuration file was found.\n\n![img](https://cloud.githubusercontent.com/assets/4278113/8768510/0d3769f2-2e40-11e5-8e27-d31991973246.png)\n",
  "metadata": {
    "name": "linter-flake8",
    "main": "./lib/main.js",
    "version": "2.4.0",
    "description": "Atom linter plugin for Python, using flake8",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/AtomLinter/linter-flake8"
    },
    "engines": {
      "atom": ">=1.9.0 <2.0.0"
    },
    "activationHooks": [
      "language-python:grammar-used",
      "MagicPython:grammar-used",
      "django-atom:grammar-used",
      "atom-django:grammar-used"
    ],
    "configSchema": {
      "executablePath": {
        "type": "string",
        "default": "flake8",
        "description": "Semicolon separated list of paths to a binary (e.g. /usr/local/bin/flake8). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`"
      },
      "projectConfigFile": {
        "type": "array",
        "default": [
          "tox.ini",
          ".flake8",
          "setup.cfg"
        ],
        "description": "flake config file relative path from project (e.g. tox.ini or .flake8rc)",
        "items": {
          "type": "string"
        }
      },
      "maxLineLength": {
        "type": "integer",
        "default": 79
      },
      "ignoreErrorCodes": {
        "type": "array",
        "default": [],
        "items": {
          "type": "string"
        }
      },
      "maxComplexity": {
        "description": "McCabe complexity threshold (`-1` to disable)",
        "type": "integer",
        "default": -1
      },
      "hangClosing": {
        "type": "boolean",
        "default": false
      },
      "selectErrors": {
        "description": "input \"E, W\" to include all errors/warnings",
        "type": "array",
        "default": [],
        "items": {
          "type": "string"
        }
      },
      "pycodestyleErrorsToWarnings": {
        "description": "Convert pycodestyle \"E\" messages to linter warnings",
        "type": "boolean",
        "default": false
      },
      "flakeErrors": {
        "description": "Convert Flake \"F\" messages to linter errors",
        "type": "boolean",
        "default": false
      },
      "builtins": {
        "type": "array",
        "default": [],
        "items": {
          "type": "string"
        },
        "description": "Define additional built in variables, in a comma separated list."
      }
    },
    "dependencies": {
      "atom-linter": "^10.0.0",
      "atom-package-deps": "^5.0.0",
      "fs-plus": "^3.0.0",
      "semver": "^5.4.1"
    },
    "devDependencies": {
      "eslint": "^4.6.0",
      "eslint-config-airbnb-base": "^12.0.0",
      "eslint-plugin-import": "^2.7.0",
      "jasmine-fix": "^1.0.1"
    },
    "package-deps": [
      "linter:2.0.0"
    ],
    "scripts": {
      "test": "apm test",
      "lint": "eslint ."
    },
    "eslintConfig": {
      "extends": "airbnb-base",
      "rules": {
        "global-require": "off",
        "import/no-unresolved": [
          "error",
          {
            "ignore": [
              "atom"
            ]
          }
        ]
      },
      "globals": {
        "atom": true
      },
      "env": {
        "node": true,
        "browser": true
      }
    },
    "providedServices": {
      "linter": {
        "versions": {
          "2.0.0": "provideLinter"
        }
      }
    }
  }
}