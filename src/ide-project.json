{
  "name": "ide-project",
  "repository": {
    "type": "git",
    "url": "https://github.com/ctkjose/ide-project"
  },
  "downloads": 18,
  "stargazers_count": 1,
  "releases": {
    "latest": "0.3.0"
  },
  "versions": {
    "0.3.0": {
      "name": "ide-project",
      "description": "IDE helpers for web development with PHP-JS-HTML",
      "main": "./lib/ide-project",
      "version": "0.3.0",
      "keywords": [
        "symbols",
        "nst",
        "tree",
        "tagbar",
        "taglist",
        "treeview",
        "php",
        "css"
      ],
      "deserializers": {
        "prjPanelRestore": "prjPanelRestore"
      },
      "activationCommands": {},
      "repository": "https://github.com/ctkjose/ide-project",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "eslint": "^8.3.0"
      },
      "consumedServices": {
        "console": {
          "versions": {
            "*": "consumeConsole"
          }
        },
        "atom-ide-busy-signal": {
          "versions": {
            "*": "consumeBusySignal"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-project/versions/0.3.0/tarball"
      }
    },
    "0.2.0": {
      "name": "ide-project",
      "description": "IDE helpers for web development with PHP-JS-HTML",
      "main": "./lib/ide-project",
      "version": "0.2.0",
      "keywords": [
        "symbols",
        "nst",
        "tree",
        "tagbar",
        "taglist",
        "treeview",
        "php",
        "css"
      ],
      "deserializers": {
        "prjPanelRestore": "prjPanelRestore"
      },
      "activationCommands": {},
      "repository": "https://github.com/ctkjose/ide-project",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "eslint": "^8.3.0"
      },
      "consumedServices": {
        "console": {
          "versions": {
            "*": "consumeConsole"
          }
        },
        "atom-ide-busy-signal": {
          "versions": {
            "*": "consumeBusySignal"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-project/versions/0.2.0/tarball"
      }
    },
    "0.1.0": {
      "name": "ide-project",
      "description": "IDE helpers for web development with PHP-JS-HTML",
      "main": "./lib/ide-project",
      "version": "0.1.0",
      "keywords": [
        "symbols",
        "nst",
        "tree",
        "tagbar",
        "taglist",
        "treeview",
        "php",
        "css"
      ],
      "deserializers": {
        "prjPanelRestore": "prjPanelRestore"
      },
      "activationCommands": {},
      "repository": "https://github.com/ctkjose/ide-project",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "consumedServices": {
        "console": {
          "versions": {
            ">=0.1.0": "consumeConsole"
          }
        },
        "atom-ide-busy-signal": {
          "versions": {
            "*": "consumeSignal"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-project/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# ide-project package\n\nThis package adds features to improve PHP development in ATOM.\n\n![A screenshot of your package](https://f.cloud.github.com/assets/69169/2290250/c35d867a-a017-11e3-86be-cd7c5bf3ff9b.gif)\n\n## Dependancies ##\n\nThis package requires the following packages to be installed:\n\n[atom-ide-ui](https://atom.io/packages/atom-ide-ui)<br>\n\n\n## Panels ##\n\nThe project panel gets a section to list Open Files and access to user defined tools written in plain javascript.\n\nA new Explorer Panel is added to access the source tree (symbols), bookmarks and other features in context of a file.\n\n> The command `exw-ide:show-explorer` displays the Explorer Panel where symbols, bookmarks and others are displayed.\n\n## Bookmarks ##\n\nToggle bookmarks to parts of your code with `CTRL-ALT-8` and press `CTRL-8` to cycle thru your bookmarks.\n\nUse the commands `exw-ide:toggle-bookmark`, `exw-ide:jump-to-next-bookmark` when configuring your own Keybindings.\n\n> HINT: Disable Github keybindings to remove keymap conflicts.\n\nThe command `exw-ide:show-explorer` displays the Explorer Panel where bookmarks are listed.\n\n## Language Support ##\n\nPHP scripts get autocomplete and a linter.\n\nESLINT is implemented as a linter for javascript code. This linter does not impose any particular code style or standard.\n\n>\n\n## Symbol Tree ##\n\nA new Symbol Tree that displays code symbols (functions, objects, etc) found in your source code.\n\nThe Symbol Tree uses a grammar definition that can easily be modified to accommodate your needs. The first time this package is used a default grammar is placed in the file `~/.atom/exw_ide_sym_grammer.js`. Open this file to make your modifications and relaunch Atom.\n\n> The command `exw-ide:show-explorer` displays the Explorer Panel where symbols are displayed.\n\n> Press the keys `ctrl-r` or `cmd-r` to show a dialog to search for symbols. (Use command `exw-ide:show-symbols`).\n\nThe Symbol Tree allows special markers in your code as PRAGMA instructions for the IDE. A basic pragma allows you to add code bookmarks for special areas or as to-do reminders.\n\n```js\n//#MARK My comment here...\n//#TODO Review this function\n//#TODO\n```\nMarkers use the syntax of single line comments for the given source code language. For example in css we would use:\n\n```css\n/* #MARK My comment here... */\n```\n\n## Configuration ##\n\nThe file `exw_ide_config_store.json` stores more advance configurations not available in settings. This file is found in your `~/.atom` folder.\n\nAvailable keys:\n\n| Config Key | Description |\n| -- | -- |\n| php_executable_path | String. Path to the cli PHP binary. Default is to look for PHP in the exported paths. |\n\nThis configuration file can also be used to add configuration keys for your user tools.\n\n## User Tools ##\n\nYou can create your own tool scripts written in plain javascript to automate actions or add extra functionality.\n\nTool scripts are plain JS scripts that you place in the folder `~/atom/exw-ide-tools/`. The tool scripts are available in the Project Panel for easy access.\n\n> Run the command `exw-ide:reload-tools` in Atom's Command Palette to reload changes you make to your tool scripts or close and reload Atom.\n\n### Writing a tool script ###\n\nA tool is a plain object that defines a `title` for the script and the corresponding action on a function `onAction`:\n\n```js\ntool = {\n\ttitle: 'Selection to string',\n\tonAction: function(){\n\t\tlet editor = ide.getTextEditor();\n\t\tif(!editor) return;\n\t\tlet selection = ide.editor.getSelection();\n\t\tif(!selection) return;\n\n\t\tif (!selection.endsWith('\\n')) {\n\t\t\tselection += '\\n';\n\t\t}\n\t\tvar escaped = '\\'' + selection.replace(/'/g, '\\\\\\'').replace(/\\n/g, '\\\\n\\' + \\n\\'').replace(/\\' \\+ \\n\\'$/, '\\';');\n\n\t\tide.editor.insertText(escaped);\n    }\n}\n```\n\nThe tool script creates a `tool` object with the definition of your tool command. The `onAction` property is the function where you place the code to be executed when the action is invoked.\n\nYou can also define an `onSave` function that will be executed whenever an editor file is saved.\n\nInside an action function the modules `atom`, `fs`, `path`, `console` are already ready loaded and available for your use.\n\nAlso a helper object `ide` is available. The `ide` object provides makes it easier to write tools without having to learn all of the Atoms internals.\n\n```js\n\n//Run commands\n//Proxy for exec, see: https://nodejs.org/api/child_process.html\nlet cmdPromise = ide.exec(cmd, options);\n//this function is resolved with an object {code, stdout, stderr}, where code is the exit code.\n\n//Proxy for spawn, see https://nodejs.org/api/child_process.html\nlet cmdPromise = ide.spawn(cmd, args, options);\n\n//Returns the active document a helper that wraps together related functionality found in Atom.\nlet doc = ide.getDocument();\n\n//Returns the current TextEditor, see https://flight-manual.atom.io/api/v1.57.0/TextEditor/\nlet editor = ide.getTextEditor();\n\n//Key-Value Pair storage\nide.config.set(key, value);\nide.config.get(key);\nide.config.save(); //save the kv store\n\n//Simplified editor interface\nlet lng = ide.editor.getLanguage();\nlet textSize = ide.editor.getLength();\nlet text = ide.editor.getValue();\nlet text = ide.editor.getSelection();\nlet title = ide.editor.getTitle();\nlet filePath = ide.editor.getPath();\nlet filename = ide.editor.getFileName();\n\n\n//Replaces the entire contents of the buffer with the given String\nide.editor.setValue(text);\n\n//For each selection, replace the selected text with the given text.\nide.editor.insertText(aString, opIsSelected);\n\n\n//Get instance of Atom's TextEditor\n//https://flight-manual.atom.io/api/v1.57.0/TextEditor/\nlet textEditor = ide.editor.getTextEditor();\n\n```\n",
  "metadata": {
    "name": "ide-project",
    "description": "IDE helpers for web development with PHP-JS-HTML",
    "main": "./lib/ide-project",
    "version": "0.3.0",
    "keywords": [
      "symbols",
      "nst",
      "tree",
      "tagbar",
      "taglist",
      "treeview",
      "php",
      "css"
    ],
    "deserializers": {
      "prjPanelRestore": "prjPanelRestore"
    },
    "activationCommands": {},
    "repository": "https://github.com/ctkjose/ide-project",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {
      "eslint": "^8.3.0"
    },
    "consumedServices": {
      "console": {
        "versions": {
          "*": "consumeConsole"
        }
      },
      "atom-ide-busy-signal": {
        "versions": {
          "*": "consumeBusySignal"
        }
      }
    }
  }
}