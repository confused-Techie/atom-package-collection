{
  "name": "keymap-control",
  "repository": {
    "type": "git",
    "url": "https://github.com/hanslivingstone/keymap-control"
  },
  "downloads": 802,
  "stargazers_count": 2,
  "releases": {
    "latest": "1.2.0"
  },
  "versions": {
    "1.2.0": {
      "name": "keymap-control",
      "main": "./lib/keymap-control",
      "version": "1.2.0",
      "description": "Automatically remove keybindings that overlap with user defined ones in keymap.cson",
      "keywords": [],
      "repository": "https://github.com/hanslivingstone/keymap-control",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/keymap-control/versions/1.2.0/tarball"
      }
    },
    "1.1.0": {
      "name": "keymap-control",
      "main": "./lib/keymap-control",
      "version": "1.1.0",
      "description": "Automatically remove keybindings that overlap with user defined keybindings in keymap.cson",
      "keywords": [],
      "repository": "https://github.com/hanslivingstone/keymap-control",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/keymap-control/versions/1.1.0/tarball"
      }
    }
  },
  "readme": "# Keymap Control\nCustomizing Atom's keybindings can be exhausting. This plugin can help.\n\nIf you set a keybinding in your `keymap.cson` file, it should just work. You shouldn't\nhave to fight though waves of CSS specificity rules to manually unset conflicting\nkeybindings from other packages first.\n\nInstall this package to automatically do it for you.\n\n\n## What this package does\nAfter Atom starts, Keymap Control looks inside your `keymap.cson` file for any keybindings that\nconflict with keybindings from other packages and automatically unbinds them, removing\nthe conflicts which can prevent your new keybindings from working.\n\nThis can remove keybindings from Atom's core just as easily as from 3rd party packages.\nAny keybindings you set in your `keymap.cson` file will always take precedence, so you\ncan concentrate on setting the keybindings you want, instead of why they don't work.\n\n\n## How to use the plugin\n1. Search and install it in Atom, or use `apm install keymap-control` from the command line.\n2. Set any keybindings you want in your `keymap.cson` file, restart Atom and\nany conflicting keybindings will automatically be unset.\n\n\n## Drawbacks\nIf you define a keybinding in your `keymap.cson` file like \"cmd-k\" it will undefine\nall other \"cmd-k\" keybindings from other packages, even if you wanted to keep\nsome of them around.\n\nTo overcome this, just add the \"cmd-k\" keybindings from the other packages that\nyou wanted to keep in your `keymap.cson` file. This way your `keymap.cson` file\nbecomes the authoritative definition for all keybindings you override.\n\n\n## TODO\n1. Add an option to unset keybindings with the same command but different keystroke.\nFor example, if you define \"cmd-k\" as \"core:save\", this would automatically unset\nthe \"cmd-s\" keybinding since it's also bound to \"core:save\".\n\n\n## License\nCopyright 2018 Hans Livingstone. Distributed under the MIT License.\n",
  "metadata": {
    "name": "keymap-control",
    "main": "./lib/keymap-control",
    "version": "1.2.0",
    "description": "Automatically remove keybindings that overlap with user defined ones in keymap.cson",
    "keywords": [],
    "repository": "https://github.com/hanslivingstone/keymap-control",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {}
  }
}