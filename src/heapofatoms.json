{
  "name": "heapofatoms",
  "repository": {
    "type": "git",
    "url": "https://github.com/Raynes/heapofatoms"
  },
  "downloads": 71,
  "stargazers_count": 0,
  "releases": {
    "latest": "0.1.0"
  },
  "versions": {
    "0.1.0": {
      "name": "heapofatoms",
      "main": "./lib/heapofatoms",
      "version": "0.1.0",
      "description": "A short description of your package",
      "repository": "https://github.com/Raynes/heapofatoms",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "neap": "^0.1.1",
        "space-pen": "^4.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/heapofatoms/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# Heap of Atoms\n\nHeap of Atoms is a plugin for pasting your awesome stuff to refheap.\n\nTwo commands: create a paste, create a private paste\n\nYou can probably figure out what they do. If you have something selected, that\ngets pasted otherwise the entire buffer.\n\nOne thing you might not expect is that Heap of Atoms doesn't actually use the\ngrammar you have specified, it simply passes the file extension you're editing\non to refheap. The reason for this is because not all of the grammar names\nmatch what refheap expects and sans a mapping of all of them to the Refheap\nnames.\n",
  "metadata": {
    "name": "heapofatoms",
    "main": "./lib/heapofatoms",
    "version": "0.1.0",
    "description": "A short description of your package",
    "repository": "https://github.com/Raynes/heapofatoms",
    "license": "MIT",
    "engines": {
      "atom": ">0.50.0"
    },
    "dependencies": {
      "neap": "^0.1.1",
      "space-pen": "^4.2.2"
    }
  }
}