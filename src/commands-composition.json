{
  "name": "commands-composition",
  "repository": {
    "type": "git",
    "url": "https://github.com/AndrejTetak/commands-composition"
  },
  "downloads": 68,
  "stargazers_count": 0,
  "releases": {
    "latest": "1.2.0"
  },
  "versions": {
    "1.2.0": {
      "name": "commands-composition",
      "main": "./lib/commands-composition",
      "version": "1.2.0",
      "description": "Experimental usage of commands composition pattern.",
      "keywords": [],
      "repository": "https://github.com/AndrejTetak/commands-composition",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "getProvider"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/commands-composition/versions/1.2.0/tarball"
      }
    },
    "1.1.0": {
      "name": "commands-composition",
      "main": "./lib/commands-composition",
      "version": "1.1.0",
      "description": "Experimental usage of commands composition pattern.",
      "keywords": [],
      "repository": "https://github.com/AndrejTetak/commands-composition",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "getProvider"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/commands-composition/versions/1.1.0/tarball"
      }
    },
    "1.0.0": {
      "name": "commands-composition",
      "main": "./lib/commands-composition",
      "version": "1.0.0",
      "description": "Experimental usage of commands composition pattern.",
      "keywords": [],
      "repository": "https://github.com/AndrejTetak/commands-composition",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "getProvider"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/commands-composition/versions/1.0.0/tarball"
      }
    }
  },
  "readme": "<h1 align=\"center\">Commands composition</h1>\n<h3 align=\"center\">Prototype plugin</h3>\n\nCommands composition is an [Atom](https://github.com/atom/atom) :atom: package that provides a switchable mode in which selecting and text editing operations are executed using interaction [pattern](https://ieeexplore.ieee.org/document/7377819/)\n\n## Installation\n\n Search for `commands-composition` in Atom's *Install Packages* settings screen and click the *Install* button on the package card or run `apm install commands-composition` in command line.\n\n## Keymap\n\nPlugin is activate on plain text, XML and Markdown documents.\n\n| Key  | Description |\n| --- | --- |\n| <kbd>Alt-m</kbd> | Switch between function-object and object-function mode. |\n| <kbd>Ctr-space</kbd> | Show menu with functions/objects. |\n| <kbd>w</kbd> | Select word |\n| <kbd>s</kbd> | Select selectSentence |\n| <kbd>l</kbd> | Select selectLine; lowerCase |\n| <kbd>p</kbd> | Select selectParagraph |\n| <kbd>d</kbd> | Select selectDocument |\n| <kbd>e</kbd> | Execute commands |\n| <kbd>u</kbd> | upperCase |\n| <kbd>d</kbd> | delete |\n| <kbd>v</kbd> | cut |\n| <kbd>c</kbd> | copy |\n| <kbd>t</kbd> | transpose |\n| <kbd>p</kbd> | paste |\n\n## Visualisation\n\nPlugin also provides visualisation for some commands. **Visualisation is not automaticaly activated.** You can turn on/off visualisation using Atom's menu (Packages → commands-composition → Toggle visualisation).\n\n## Issues\n\n* It is recommended to not use soft wrap in editor\n* Please use EN keyboard\n\n## Todo\n\n* this README\n* fix wrong selections when selecting between sentences.\n* fix lines in top of editor while using visualisation\n* support for xml tags with same name, atributes etc...\n* more visualisation commands\n* currently optimalized only for mac os (commad, options keys...)\n",
  "metadata": {
    "name": "commands-composition",
    "main": "./lib/commands-composition",
    "version": "1.2.0",
    "description": "Experimental usage of commands composition pattern.",
    "keywords": [],
    "repository": "https://github.com/AndrejTetak/commands-composition",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {},
    "providedServices": {
      "autocomplete.provider": {
        "versions": {
          "2.0.0": "getProvider"
        }
      }
    },
    "consumedServices": {
      "status-bar": {
        "versions": {
          "^1.0.0": "consumeStatusBar"
        }
      }
    }
  }
}