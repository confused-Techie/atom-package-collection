{
  "name": "ide-python",
  "repository": {
    "type": "git",
    "url": "https://github.com/atom-community/ide-python"
  },
  "downloads": 1620904,
  "stargazers_count": 230,
  "releases": {
    "latest": "1.9.7"
  },
  "versions": {
    "1.9.7": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.9.7",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist"
      },
      "package-deps": [
        "atom-ide-base"
      ],
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.14.1",
        "atom-package-deps": "^7.2.3",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.14.0",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "which": "^2.0.2",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.14.8",
        "@babel/core": "7.15.0",
        "babel-preset-atomic": "^4.2.0",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "eslint-config-atomic": "^1.16.2",
        "mock-spawn": "0.2.6",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3"
      },
      "prettier": "prettier-config-atomic",
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python3",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pyls": {
          "title": "Python Language Server module",
          "order": 2,
          "type": "string",
          "default": "pylsp"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pyls_mypy": {
              "title": "MyPy",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable MyPy."
                },
                "live_mode": {
                  "title": "Live mode",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.9.7/tarball"
      }
    },
    "1.9.6": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.9.6",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist"
      },
      "package-deps": [
        "atom-ide-base"
      ],
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.14.1",
        "atom-package-deps": "^7.2.3",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.14.0",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "which": "^2.0.2",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.14.8",
        "@babel/core": "7.15.0",
        "babel-preset-atomic": "^4.2.0",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "eslint-config-atomic": "^1.16.2",
        "mock-spawn": "0.2.6",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3"
      },
      "prettier": "prettier-config-atomic",
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python3",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pyls": {
          "title": "Python Language Server module",
          "order": 2,
          "type": "string",
          "default": "pylsp"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pyls_mypy": {
              "title": "MyPy",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable MyPy."
                },
                "live_mode": {
                  "title": "Live mode",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.9.6/tarball"
      }
    },
    "1.9.5": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.9.5",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist"
      },
      "package-deps": [
        "atom-ide-base"
      ],
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.14.1",
        "atom-package-deps": "^7.2.3",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.14.0",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "which": "^2.0.2",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.14.8",
        "@babel/core": "7.15.0",
        "babel-preset-atomic": "^4.2.0",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "eslint-config-atomic": "^1.16.2",
        "mock-spawn": "0.2.6",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3"
      },
      "prettier": "prettier-config-atomic",
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python3",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pyls": {
          "title": "Python Language Server module",
          "order": 2,
          "type": "string",
          "default": "pylsp"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pyls_mypy": {
              "title": "MyPy",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable MyPy."
                },
                "live_mode": {
                  "title": "Live mode",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.9.5/tarball"
      }
    },
    "1.9.4": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.9.4",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist"
      },
      "package-deps": [
        "atom-ide-base"
      ],
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.14.1",
        "atom-package-deps": "^7.2.3",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.14.0",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "which": "^2.0.2",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.14.3",
        "@babel/core": "7.14.3",
        "babel-preset-atomic": "^4.2.0",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "eslint-config-atomic": "^1.16.2",
        "mock-spawn": "0.2.6",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3"
      },
      "prettier": "prettier-config-atomic",
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python3",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pyls": {
          "title": "Path to pyls executable",
          "order": 2,
          "type": "string",
          "default": "pylsp"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pyls_mypy": {
              "title": "MyPy",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable MyPy."
                },
                "live_mode": {
                  "title": "Live mode",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.9.4/tarball"
      }
    },
    "1.9.3": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.9.3",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "package-deps": [
        "atom-ide-base"
      ],
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.12.1",
        "atom-package-deps": "^7.2.3",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.14.0",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "which": "^2.0.2",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.14.3",
        "@babel/core": "7.14.3",
        "babel-preset-atomic": "^4.1.0",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "mock-spawn": "0.2.6",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3"
      },
      "prettier": "prettier-config-atomic",
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pyls": {
          "title": "Path to pyls executable",
          "order": 2,
          "type": "string",
          "default": "pylsp"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pyls_mypy": {
              "title": "MyPy",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable MyPy."
                },
                "live_mode": {
                  "title": "Live mode",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.9.3/tarball"
      }
    },
    "1.9.2": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.9.2",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "package-deps": [
        "atom-ide-base"
      ],
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.10.0",
        "atom-package-deps": "^7.2.3",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.14.0",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "which": "^2.0.2",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.14.3",
        "@babel/core": "7.14.3",
        "babel-preset-atomic": "^4.1.0",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "mock-spawn": "0.2.6",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3"
      },
      "prettier": "prettier-config-atomic",
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pyls": {
          "title": "Path to pyls executable",
          "order": 2,
          "type": "string",
          "default": "pylsp"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pyls_mypy": {
              "title": "MyPy",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable MyPy."
                },
                "live_mode": {
                  "title": "Live mode",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.9.2/tarball"
      }
    },
    "1.9.1": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.9.1",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "package-deps": [
        "atom-ide-base"
      ],
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.10.0",
        "atom-package-deps": "^7.2.3",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.14.0",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "which": "^2.0.2",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.14.3",
        "@babel/core": "7.14.3",
        "babel-preset-atomic": "^4.1.0",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "mock-spawn": "0.2.6",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3"
      },
      "prettier": "prettier-config-atomic",
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pyls": {
          "title": "Path to pyls executable",
          "order": 2,
          "type": "string",
          "default": "pylsp"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pyls_mypy": {
              "title": "MyPy",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable MyPy."
                },
                "live_mode": {
                  "title": "Live mode",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.9.1/tarball"
      }
    },
    "1.9.0": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.9.0",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "package-deps": [
        "atom-ide-base"
      ],
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.10.0",
        "atom-package-deps": "^7.2.3",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.14.0",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "which": "^2.0.2",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.14.3",
        "@babel/core": "7.14.3",
        "babel-preset-atomic": "^4.1.0",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "mock-spawn": "0.2.6",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3"
      },
      "prettier": "prettier-config-atomic",
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pyls-path": {
          "title": "Path to pyls executable",
          "order": 2,
          "type": "string",
          "default": "pylsp"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pyls_mypy": {
              "title": "MyPy",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable MyPy."
                },
                "live_mode": {
                  "title": "Live mode",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.9.0/tarball"
      }
    },
    "1.8.0": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.8.0",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.2.2",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.6.3",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.13.10",
        "@babel/core": "7.13.10",
        "babel-preset-atomic": "^3.0.3",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "mock-spawn": "0.2.6",
        "prettier": "^2.2.1",
        "shx": "^0.3.3"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pyls_mypy": {
              "title": "MyPy",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable MyPy."
                },
                "live_mode": {
                  "title": "Live mode",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.8.0/tarball"
      }
    },
    "1.7.4": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.7.4",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "dependencies": {
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "arch": "2.1.0",
        "atom-languageclient": "^1.2.2",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "iconv-lite": "^0.4.21",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "nullthrows": "1.0.0",
        "react": "16.6.3",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "xml2js": "0.4.17"
      },
      "devDependencies": {
        "@babel/cli": "7.13.10",
        "@babel/core": "7.13.10",
        "babel-preset-atomic": "^3.0.2",
        "build-commit": "0.1.4",
        "cross-env": "^7.0.3",
        "mock-spawn": "0.2.6",
        "prettier": "^2.2.1",
        "shx": "^0.3.3"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.7.4/tarball"
      }
    },
    "1.7.3": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.7.3",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "dependencies": {
        "atom-languageclient": "^1.0.6",
        "arch": "2.1.0",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "nullthrows": "1.0.0",
        "react": "16.6.3",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "xml2js": "0.4.17",
        "iconv-lite": "^0.4.21"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6",
        "shx": "^0.3.3",
        "cross-env": "^7.0.3",
        "@babel/cli": "7.12.10",
        "@babel/core": "7.12.10",
        "babel-preset-atomic": "^3.0.1",
        "build-commit": "0.1.1"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.7.3/tarball"
      }
    },
    "1.7.2": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.7.2",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9",
        "arch": "2.1.0",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "nullthrows": "1.0.0",
        "react": "16.6.3",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "xml2js": "0.4.17",
        "iconv-lite": "^0.4.21"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6",
        "shx": "^0.3.3",
        "cross-env": "^7.0.3",
        "@babel/cli": "7.12.10",
        "@babel/core": "7.12.10",
        "babel-preset-atomic": "^3.0.0",
        "build-commit": "0.1.1"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.7.2/tarball"
      }
    },
    "1.7.1": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.7.1",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "dependencies": {
        "atom-languageclient": "1.0.4",
        "arch": "2.1.0",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "nullthrows": "1.0.0",
        "react": "16.6.3",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "xml2js": "0.4.17",
        "iconv-lite": "^0.4.21"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6",
        "shx": "^0.3.3",
        "cross-env": "^7.0.3",
        "@babel/cli": "7.12.10",
        "@babel/core": "7.12.10",
        "babel-preset-atomic": "^3.0.0",
        "build-commit": "0.1.1"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.7.1/tarball"
      }
    },
    "1.7.0": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.7.0",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "dependencies": {
        "atom-languageclient": "1.0.3",
        "arch": "2.1.0",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "nullthrows": "1.0.0",
        "react": "16.6.3",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "xml2js": "0.4.17",
        "iconv-lite": "^0.4.21"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6",
        "shx": "^0.3.2",
        "cross-env": "^7.0.2",
        "@babel/cli": "7.11.6",
        "@babel/core": "7.11.6",
        "babel-preset-atomic": "^2.4.2",
        "build-commit": "0.1.1"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.7.0/tarball"
      }
    },
    "1.6.2": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.6.2",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9",
        "arch": "2.1.0",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "nullthrows": "1.0.0",
        "react": "16.6.3",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "rxjs-compat": "6.3.3",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "xml2js": "0.4.17",
        "iconv-lite": "^0.4.21"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6",
        "shx": "^0.3.2",
        "cross-env": "^7.0.2",
        "@babel/cli": "7.11.6",
        "@babel/core": "7.11.6",
        "babel-preset-atomic": "^2.4.2",
        "build-commit": "0.1.1"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.6.2/tarball"
      }
    },
    "1.6.1": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.6.1",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build": "npm run babel",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run build"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9",
        "arch": "2.1.0",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "nullthrows": "1.0.0",
        "react": "16.6.3",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "xml2js": "0.4.17",
        "iconv-lite": "^0.4.21"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6",
        "shx": "^0.3.2",
        "cross-env": "^7.0.2",
        "@babel/cli": "7.11.6",
        "@babel/core": "7.11.6",
        "babel-preset-atomic": "^2.4.2",
        "build-commit": "0.1.1"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.6.1/tarball"
      }
    },
    "1.6.0": {
      "name": "ide-python",
      "main": "./dist/main",
      "version": "1.6.0",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "scripts": {
        "test": "apm test",
        "clean": "shx rm -rf dist",
        "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
        "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
        "build-commit": "build-commit -o dist",
        "prepare": "npm run babel"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9",
        "arch": "2.1.0",
        "dotenv": "5.0.1",
        "fs-extra": "4.0.3",
        "getos": "3.1.0",
        "inversify": "4.11.1",
        "line-by-line": "0.1.5",
        "lodash": "4.17.10",
        "log4js": "1.1.1",
        "minimatch": "3.0.4",
        "@atom-ide-community/nuclide-commons": "^0.8.2",
        "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
        "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
        "nullthrows": "1.0.0",
        "react": "16.6.3",
        "reflect-metadata": "0.1.12",
        "rxjs": "5.5.9",
        "semver": "5.5.0",
        "tmp": "0.0.29",
        "tree-kill": "1.1.0",
        "uint64be": "1.0.1",
        "untildify": "3.0.2",
        "vscode-debugadapter": "1.24.0",
        "vscode-debugprotocol": "1.24.0",
        "xml2js": "0.4.17",
        "iconv-lite": "^0.4.21"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6",
        "shx": "^0.3.2",
        "cross-env": "^7.0.2",
        "@babel/cli": "7.11.6",
        "@babel/core": "7.11.6",
        "babel-preset-atomic": "^2.4.2",
        "build-commit": "0.1.1"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        },
        "debugger.provider": {
          "description": "Python debugger engine.",
          "versions": {
            "0.0.0": "createDebuggerProvider"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.6.0/tarball"
      }
    },
    "1.5.2": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.5.2",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.5.2/tarball"
      }
    },
    "1.5.1": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.5.1",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "1.0.0"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.5.1/tarball"
      }
    },
    "1.5.0": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.5.0",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "flake8",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "flake8": {
              "title": "Flake8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "order": 1,
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Flake8."
                },
                "exclude": {
                  "title": "Exclude",
                  "type": "array",
                  "default": [
                    ".svn",
                    "CVS",
                    ".bzr",
                    ".hg",
                    ".git",
                    "__pycache__",
                    ".tox",
                    ".eggs",
                    "*.egg"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of files or directories to exclude."
                },
                "filename": {
                  "title": "Filename",
                  "type": "array",
                  "default": [
                    "*.py"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Only check for filenames matching the patterns in this comma-separated list."
                },
                "hangClosing": {
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "ignore": {
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503",
                    "W504"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to ignore (or skip)."
                },
                "maxLineLength": {
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Maximum allowed line length for the entirety of this run."
                },
                "select": {
                  "title": "Select",
                  "type": "array",
                  "default": [
                    "E",
                    "F",
                    "W",
                    "C90"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma-separated list of errors and warnings to enable."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "order": 1,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                },
                "args": {
                  "title": "Arguments",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of arguments to pass to pylint."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.5.0/tarball"
      }
    },
    "1.4.2": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.4.2",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pylint",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.4.2/tarball"
      }
    },
    "1.4.1": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.4.1",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use $PIPENV_PATH if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.4.1/tarball"
      }
    },
    "1.4.0": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.4.0",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use $PIPENV_PATH if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "pylint": {
              "title": "Pylint",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.4.0/tarball"
      }
    },
    "1.3.0": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.3.0",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use $PIPENV_PATH if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                },
                "include_params": {
                  "title": "Include parameters",
                  "type": "boolean",
                  "default": true,
                  "description": "Auto-completes methods and classes with tabstops for each parameter."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.3.0/tarball"
      }
    },
    "1.2.3": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.2.3",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use $PIPENV_PATH if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.2.3/tarball"
      }
    },
    "1.2.2": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.2.2",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use $PIPENV_PATH if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.2.2/tarball"
      }
    },
    "1.2.1": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.2.1",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use $PIPENV_PATH if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.2.1/tarball"
      }
    },
    "1.2.0": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.2.0",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "devDependencies": {
        "mock-spawn": "^0.2.6"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use $PIPENV_PATH if you want to use the pipenv path of your project"
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.2.0/tarball"
      }
    },
    "1.1.0": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.1.0",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server."
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "order": 3,
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                },
                "follow_imports": {
                  "title": "Follow imports",
                  "type": "boolean",
                  "default": false,
                  "description": "The goto call will follow imports."
                },
                "follow_builtin_imports": {
                  "title": "Follow builtin imports",
                  "type": "boolean",
                  "default": false,
                  "description": "If 'follow imports' is True will decide if it follow builtin imports."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "preload": {
              "title": "Preload",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable preload."
                },
                "modules": {
                  "title": "Modules",
                  "type": "array",
                  "default": [
                    "OpenGL",
                    "PIL",
                    "array",
                    "audioop",
                    "binascii",
                    "cPickle",
                    "cStringIO",
                    "cmath",
                    "collections",
                    "datetime",
                    "errno",
                    "exceptions",
                    "gc",
                    "imageop",
                    "imp",
                    "itertools",
                    "marshal",
                    "math",
                    "matplotlib",
                    "mmap",
                    "mpmath",
                    "msvcrt",
                    "networkx",
                    "nose",
                    "nt",
                    "numpy",
                    "operator",
                    "os",
                    "os.path",
                    "pandas",
                    "parser",
                    "rgbimg",
                    "scipy",
                    "signal",
                    "skimage",
                    "sklearn",
                    "statsmodels",
                    "strop",
                    "sympy",
                    "sys",
                    "thread",
                    "time",
                    "wx",
                    "xxsubtype",
                    "zipimport",
                    "zlib"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "List of modules to import on startup"
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        },
        "rope": {
          "type": "object",
          "properties": {
            "ropeFolder": {
              "title": "Rope Folder",
              "type": "string",
              "default": ".ropeproject",
              "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
            },
            "extensionModules": {
              "title": "Extension Modules",
              "type": "array",
              "default": [
                "OpenGL",
                "PIL",
                "array",
                "audioop",
                "binascii",
                "cPickle",
                "cStringIO",
                "cmath",
                "collections",
                "datetime",
                "errno",
                "exceptions",
                "gc",
                "imageop",
                "imp",
                "itertools",
                "marshal",
                "math",
                "matplotlib",
                "mmap",
                "mpmath",
                "msvcrt",
                "networkx",
                "nose",
                "nt",
                "numpy",
                "operator",
                "os",
                "os.path",
                "pandas",
                "parser",
                "rgbimg",
                "scipy",
                "signal",
                "skimage",
                "sklearn",
                "statsmodels",
                "strop",
                "sympy",
                "sys",
                "thread",
                "time",
                "wx",
                "xxsubtype",
                "zipimport",
                "zlib"
              ],
              "items": {
                "type": "string"
              },
              "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.1.0/tarball"
      }
    },
    "1.0.1": {
      "name": "ide-python",
      "main": "./lib/main",
      "version": "1.0.1",
      "description": "Python language support for Atom-IDE",
      "keywords": [
        "ide",
        "python",
        "atom-ide",
        "autocomplete",
        "jedi",
        "rope",
        "pyflakes",
        "pycodestyle",
        "pydocstyle",
        "autopep8",
        "yapf",
        "mccabe",
        "languageserver",
        "language-server-protocol",
        "language-client"
      ],
      "repository": "https://github.com/lgeiger/ide-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.21.0 <2.0.0"
      },
      "dependencies": {
        "atom-languageclient": "0.9.9"
      },
      "enhancedScopes": [
        "source.python"
      ],
      "configSchema": {
        "python": {
          "title": "Python Executable",
          "order": 1,
          "type": "string",
          "default": "python",
          "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server."
        },
        "pylsConfigurationSources": {
          "order": 2,
          "type": "array",
          "default": [
            "pycodestyle",
            "flake8"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "flake8"
            ]
          }
        },
        "ropeFolder": {
          "order": 3,
          "type": "string",
          "default": ".ropeproject",
          "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
        },
        "pylsPlugins": {
          "title": "Python Language Server Plugins",
          "type": "object",
          "properties": {
            "jedi_completion": {
              "title": "Jedi Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Completion."
                }
              }
            },
            "jedi_definition": {
              "title": "Jedi Definition",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Definition."
                }
              }
            },
            "jedi_hover": {
              "title": "Jedi Hover",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Hover."
                }
              }
            },
            "jedi_references": {
              "title": "Jedi References",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi References."
                }
              }
            },
            "jedi_signature_help": {
              "title": "Jedi Signature Help",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable Jedi Signature Help."
                }
              }
            },
            "jedi_symbols": {
              "title": "Jedi Symbols",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "order": 1,
                  "default": true,
                  "description": "Enable or disable Jedi Symbols."
                },
                "all_scopes": {
                  "title": "All Scopes",
                  "type": "boolean",
                  "default": true,
                  "description": "If enabled lists the names of all scopes instead of only the module namespace."
                }
              }
            },
            "mccabe": {
              "title": "McCabe",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable McCabe."
                },
                "threshold": {
                  "title": "Threshold",
                  "type": "number",
                  "default": 15,
                  "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                }
              }
            },
            "pycodestyle": {
              "title": "PyCodeStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyCodeStyle."
                },
                "select": {
                  "order": 2,
                  "title": "Select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "description": "Select errors and warnings."
                },
                "ignore": {
                  "order": 3,
                  "title": "Ignore",
                  "type": "array",
                  "default": [
                    "E121",
                    "E123",
                    "E126",
                    "E226",
                    "E24",
                    "E704",
                    "W503"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings."
                },
                "hangClosing": {
                  "order": 4,
                  "title": "Hang Closing",
                  "type": "boolean",
                  "default": false,
                  "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "maxLineLength": {
                  "order": 5,
                  "title": "Max Line Length",
                  "type": "number",
                  "default": 79,
                  "description": "Set maximum allowed line length."
                }
              }
            },
            "pydocstyle": {
              "title": "PyDocStyle",
              "type": "object",
              "properties": {
                "enabled": {
                  "order": 1,
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable PyDocStyle."
                },
                "match": {
                  "order": 2,
                  "title": "Match",
                  "type": "string",
                  "default": "(?!test_).*\\.py",
                  "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "matchDir": {
                  "order": 3,
                  "title": "Match Dir",
                  "type": "string",
                  "default": "[^\\.].*",
                  "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "select": {
                  "order": 4,
                  "title": "Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings"
                },
                "ignore": {
                  "order": 5,
                  "title": "Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings"
                },
                "convention": {
                  "order": 6,
                  "title": "Convention",
                  "type": "string",
                  "enum": [
                    "pep257",
                    "numpy",
                    ""
                  ],
                  "default": "",
                  "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "addSelect": {
                  "order": 7,
                  "title": "Add Select",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Select errors and warnings in addition to the specified convention."
                },
                "addIgnore": {
                  "order": 8,
                  "title": "Add Ignore",
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "description": "Ignore errors and warnings in addition to the specified convention."
                }
              }
            },
            "pyflakes": {
              "title": "PyFlakes",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable PyFlakes."
                }
              }
            },
            "rope_completion": {
              "title": "Rope Completion",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable the plugin."
                }
              }
            },
            "yapf": {
              "title": "Yapf",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": false,
                  "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
                }
              }
            },
            "autopep8": {
              "title": "autopep8",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "Enabled",
                  "type": "boolean",
                  "default": true,
                  "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
                }
              }
            }
          }
        }
      },
      "consumedServices": {
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinterV2"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatip"
          }
        },
        "signature-help": {
          "versions": {
            "0.1.0": "consumeSignatureHelp"
          }
        }
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.range": {
          "versions": {
            "0.1.0": "provideCodeFormat"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideFindReferences"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/ide-python/versions/1.0.1/tarball"
      }
    }
  },
  "readme": "# IDE-python package\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/lgeiger/ide-python.svg)](https://greenkeeper.io/)\n\nPython language support for [Atom-IDE](https://atom-ide-community.github.io), powered by the [Python language server](https://github.com/palantir/python-language-server).\n\n![ide-python](https://user-images.githubusercontent.com/13285808/30352538-b9687a76-9820-11e7-8876-c22751645d36.png)\n\n## Requirements\n\n[`ide-python`](https://atom.io/packages/ide-python) requires [Atom `1.21+`](https://atom.io/), [Python language server `0.29+`](https://github.com/palantir/python-language-server) and the [`atom-ide-base`](https://atom.io/packages/atom-ide-base) package to expose the functionality within Atom.\n\n### Important\n\nPlease note that `atom-ide-ui` is now deprecated, therefore, you must use the packages supplied from `atom-ide-community` as mentioned above. Links are also provided for more information.\n\n## Feature Providers\n\n- [Jedi](https://github.com/davidhalter/jedi) for Completions, Definitions, Hover, References, Signature Help, and Symbols\n- [Rope](https://github.com/python-rope/rope) for Completions and renaming\n- [Pyflakes](https://github.com/PyCQA/pyflakes) linter to detect various errors\n- [McCabe](https://github.com/PyCQA/mccabe) linter for complexity checking\n- [pycodestyle](https://github.com/PyCQA/pycodestyle) linter for style checking\n- [Pylint](https://www.pylint.org/) linter to detect various errors\n- [Flake8](http://flake8.pycqa.org/en/latest/) linter to detect various errors\n- [pydocstyle](https://github.com/PyCQA/pydocstyle) linter for docstring style checking\n- [autopep8](https://github.com/hhatto/autopep8) for code formatting (preferred over YAPF)\n- [YAPF](https://github.com/google/yapf) for code formatting\n\n## Installation\n\n### Language Server\n\nInstall the language server (0.29.0 or newer) with:\n\n```bash\npython -m pip install 'python-language-server[all]'\n```\n\nThis command will install the language server and all supported feature providers, which can be enabled or disabled in the settings. Checkout the [official installation instructions](https://github.com/palantir/python-language-server#installation) on how to install only the providers you need.\n\nYou can verify that everything is correctly installed by running `python -m pyls --help` from the command line.\nIt should return\n\n```bash\nusage: pyls [-h] [--tcp] [--host HOST] [--port PORT]\n            [--log-config LOG_CONFIG | --log-file LOG_FILE] [-v]\n\nPython Language Server\n...\n```\n\nIf you have installed `pyls` using a non default installation of Python, you can add modify the _Python Executable_ config in the `ide-python` settings.\n\n### Atom Package\n\nInstall `ide-python` and [`atom-ide-base`](https://atom.io/packages/atom-ide-base) from _Install_ in Atom's settings or run:\n\n```bash\napm install atom-ide-base\napm install ide-python\n```\n\nTo use the debugger you need to install `atom-ide-debugger` and `atom-ide-console` as well:\n\n```\napm install atom-ide-debugger\napm install atom-ide-console\n```\n\n### Debugger (experimental)\n\nAfter installation of the above packages:\n\n- Open the file you need to debug\n- Use CTRL+SHIFT+P and run \"Show Debugger\" to show the debugger pane\n- Click add target button and fill the information\n- Debug your application like the gif\n\n![python-debugger](https://user-images.githubusercontent.com/16418197/98758920-7a118580-2395-11eb-9b46-6dc62a1d80e6.gif)\n\n## Configuration\n\nConfiguration is loaded from zero or more configuration sources.\n\n- `pycodestyle`: discovered in `~/.config/pycodestyle`, `setup.cfg`, `tox.ini` and `pycodestyle.cfg`\n- `flake8`: discovered in `~/.config/flake8`, `setup.cfg`, `tox.ini` and `flake8.cfg`\n\nOverall configuration is computed first from user configuration (in home directory), overridden by configuration in the `ide-python` settings, and then overridden by configuration discovered in the current project.\n\n## Contributing\n\nAlways feel free to help out! Whether it's [filing bugs and feature requests](https://github.com/lgeiger/ide-python/issues/new) or working on some of the [open issues](https://github.com/lgeiger/ide-python/issues), Atom's [guide for contributing to packages](https://github.com/atom/atom/blob/master/docs/contributing-to-packages.md) will help get you started.\n\n## License\n\nMIT License. See [the license](LICENSE.md) for more details.\n",
  "metadata": {
    "name": "ide-python",
    "main": "./dist/main",
    "version": "1.9.7",
    "description": "Python language support for Atom-IDE",
    "keywords": [
      "ide",
      "python",
      "atom-ide",
      "autocomplete",
      "jedi",
      "rope",
      "pyflakes",
      "pylint",
      "flake8",
      "pycodestyle",
      "pydocstyle",
      "autopep8",
      "yapf",
      "mccabe",
      "languageserver",
      "language-server-protocol",
      "language-client"
    ],
    "repository": "https://github.com/lgeiger/ide-python",
    "license": "MIT",
    "engines": {
      "atom": ">=1.21.0 <2.0.0"
    },
    "scripts": {
      "format": "prettier --write .",
      "test.format": "prettier . --check",
      "lint": "eslint . --fix",
      "test.lint": "eslint .",
      "test": "apm test",
      "clean": "shx rm -rf dist",
      "babel": "npm run clean && shx cp -r lib dist && cross-env NODE_ENV=production cross-env BABEL_KEEP_MODULES=false babel dist --out-dir dist",
      "copy": "shx cp -r lib/debugger/VendorLib dist/debugger",
      "build": "npm run babel",
      "build-commit": "build-commit -o dist"
    },
    "package-deps": [
      "atom-ide-base"
    ],
    "dependencies": {
      "@atom-ide-community/nuclide-commons": "^0.8.2",
      "@atom-ide-community/nuclide-commons-atom": "^0.8.2",
      "@atom-ide-community/nuclide-debugger-common": "^0.8.2",
      "arch": "2.1.0",
      "atom-languageclient": "^1.14.1",
      "atom-package-deps": "^7.2.3",
      "dotenv": "5.0.1",
      "fs-extra": "4.0.3",
      "getos": "3.1.0",
      "iconv-lite": "^0.4.21",
      "inversify": "4.11.1",
      "line-by-line": "0.1.5",
      "lodash": "4.17.10",
      "log4js": "1.1.1",
      "minimatch": "3.0.4",
      "nullthrows": "1.0.0",
      "react": "16.14.0",
      "reflect-metadata": "0.1.12",
      "rxjs": "5.5.9",
      "rxjs-compat": "6.3.3",
      "semver": "5.5.0",
      "tmp": "0.0.29",
      "tree-kill": "1.1.0",
      "uint64be": "1.0.1",
      "untildify": "3.0.2",
      "vscode-debugadapter": "1.24.0",
      "vscode-debugprotocol": "1.24.0",
      "which": "^2.0.2",
      "xml2js": "0.4.17"
    },
    "devDependencies": {
      "@babel/cli": "7.14.8",
      "@babel/core": "7.15.0",
      "babel-preset-atomic": "^4.2.0",
      "build-commit": "0.1.4",
      "cross-env": "^7.0.3",
      "eslint-config-atomic": "^1.16.2",
      "mock-spawn": "0.2.6",
      "prettier-config-atomic": "^2.0.5",
      "shx": "^0.3.3"
    },
    "prettier": "prettier-config-atomic",
    "enhancedScopes": [
      "source.python"
    ],
    "activationHooks": [
      "core:loaded-shell-environment"
    ],
    "configSchema": {
      "python": {
        "title": "Python Executable",
        "order": 1,
        "type": "string",
        "default": "python3",
        "description": "Absolute path of your Python binary. This is used to launch the Python language server. Make sure to install `pyls` for this version of Python. Changes will take effect after a restart of the language server. Use `$PIPENV_PATH/bin/python` if you want to use the pipenv path of your project"
      },
      "pyls": {
        "title": "Python Language Server module",
        "order": 2,
        "type": "string",
        "default": "pylsp"
      },
      "pylsConfigurationSources": {
        "order": 2,
        "type": "array",
        "default": [
          "pycodestyle",
          "flake8"
        ],
        "description": "List of configuration sources to use.",
        "items": {
          "type": "string",
          "enum": [
            "pycodestyle",
            "flake8"
          ]
        }
      },
      "pylsPlugins": {
        "title": "Python Language Server Plugins",
        "type": "object",
        "order": 3,
        "properties": {
          "jedi_completion": {
            "title": "Jedi Completion",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable Jedi Completion."
              },
              "include_params": {
                "title": "Include parameters",
                "type": "boolean",
                "default": true,
                "description": "Auto-completes methods and classes with tabstops for each parameter."
              }
            }
          },
          "jedi_definition": {
            "title": "Jedi Definition",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable Jedi Definition."
              },
              "follow_imports": {
                "title": "Follow imports",
                "type": "boolean",
                "default": false,
                "description": "The goto call will follow imports."
              },
              "follow_builtin_imports": {
                "title": "Follow builtin imports",
                "type": "boolean",
                "default": false,
                "description": "If 'follow imports' is True will decide if it follow builtin imports."
              }
            }
          },
          "jedi_hover": {
            "title": "Jedi Hover",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable Jedi Hover."
              }
            }
          },
          "jedi_references": {
            "title": "Jedi References",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable Jedi References."
              }
            }
          },
          "jedi_signature_help": {
            "title": "Jedi Signature Help",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable Jedi Signature Help."
              }
            }
          },
          "jedi_symbols": {
            "title": "Jedi Symbols",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "order": 1,
                "default": true,
                "description": "Enable or disable Jedi Symbols."
              },
              "all_scopes": {
                "title": "All Scopes",
                "type": "boolean",
                "default": true,
                "description": "If enabled lists the names of all scopes instead of only the module namespace."
              }
            }
          },
          "mccabe": {
            "title": "McCabe",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable McCabe."
              },
              "threshold": {
                "title": "Threshold",
                "type": "number",
                "default": 15,
                "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
              }
            }
          },
          "preload": {
            "title": "Preload",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable preload."
              },
              "modules": {
                "title": "Modules",
                "type": "array",
                "default": [
                  "OpenGL",
                  "PIL",
                  "array",
                  "audioop",
                  "binascii",
                  "cPickle",
                  "cStringIO",
                  "cmath",
                  "collections",
                  "datetime",
                  "errno",
                  "exceptions",
                  "gc",
                  "imageop",
                  "imp",
                  "itertools",
                  "marshal",
                  "math",
                  "matplotlib",
                  "mmap",
                  "mpmath",
                  "msvcrt",
                  "networkx",
                  "nose",
                  "nt",
                  "numpy",
                  "operator",
                  "os",
                  "os.path",
                  "pandas",
                  "parser",
                  "rgbimg",
                  "scipy",
                  "signal",
                  "skimage",
                  "sklearn",
                  "statsmodels",
                  "strop",
                  "sympy",
                  "sys",
                  "thread",
                  "time",
                  "wx",
                  "xxsubtype",
                  "zipimport",
                  "zlib"
                ],
                "items": {
                  "type": "string"
                },
                "description": "List of modules to import on startup"
              }
            }
          },
          "pycodestyle": {
            "title": "PyCodeStyle",
            "type": "object",
            "properties": {
              "enabled": {
                "order": 1,
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable PyCodeStyle."
              },
              "select": {
                "order": 2,
                "title": "Select",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": [],
                "description": "Select errors and warnings."
              },
              "ignore": {
                "order": 3,
                "title": "Ignore",
                "type": "array",
                "default": [
                  "E121",
                  "E123",
                  "E126",
                  "E226",
                  "E24",
                  "E704",
                  "W503"
                ],
                "items": {
                  "type": "string"
                },
                "description": "Ignore errors and warnings."
              },
              "hangClosing": {
                "order": 4,
                "title": "Hang Closing",
                "type": "boolean",
                "default": false,
                "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
              },
              "maxLineLength": {
                "order": 5,
                "title": "Max Line Length",
                "type": "number",
                "default": 79,
                "description": "Set maximum allowed line length."
              }
            }
          },
          "pydocstyle": {
            "title": "PyDocStyle",
            "type": "object",
            "properties": {
              "enabled": {
                "order": 1,
                "title": "Enabled",
                "type": "boolean",
                "default": false,
                "description": "Enable or disable PyDocStyle."
              },
              "match": {
                "order": 2,
                "title": "Match",
                "type": "string",
                "default": "(?!test_).*\\.py",
                "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
              },
              "matchDir": {
                "order": 3,
                "title": "Match Dir",
                "type": "string",
                "default": "[^\\.].*",
                "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
              },
              "select": {
                "order": 4,
                "title": "Select",
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                },
                "description": "Select errors and warnings"
              },
              "ignore": {
                "order": 5,
                "title": "Ignore",
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                },
                "description": "Ignore errors and warnings"
              },
              "convention": {
                "order": 6,
                "title": "Convention",
                "type": "string",
                "enum": [
                  "pep257",
                  "numpy",
                  ""
                ],
                "default": "",
                "description": "Choose the basic list of checked errors by specifying an existing convention."
              },
              "addSelect": {
                "order": 7,
                "title": "Add Select",
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                },
                "description": "Select errors and warnings in addition to the specified convention."
              },
              "addIgnore": {
                "order": 8,
                "title": "Add Ignore",
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                },
                "description": "Ignore errors and warnings in addition to the specified convention."
              }
            }
          },
          "pyflakes": {
            "title": "PyFlakes",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable PyFlakes."
              }
            }
          },
          "pyls_mypy": {
            "title": "MyPy",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "order": 1,
                "default": true,
                "description": "Enable or disable MyPy."
              },
              "live_mode": {
                "title": "Live mode",
                "type": "boolean",
                "order": 1,
                "default": true,
                "description": "Turn on live mode. If disabled, mypy linters on file save. Note: Linting on file save may not work on all machines."
              }
            }
          },
          "flake8": {
            "title": "Flake8",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "order": 1,
                "type": "boolean",
                "default": false,
                "description": "Enable or disable Flake8."
              },
              "exclude": {
                "title": "Exclude",
                "type": "array",
                "default": [
                  ".svn",
                  "CVS",
                  ".bzr",
                  ".hg",
                  ".git",
                  "__pycache__",
                  ".tox",
                  ".eggs",
                  "*.egg"
                ],
                "items": {
                  "type": "string"
                },
                "description": "Comma-separated list of files or directories to exclude."
              },
              "filename": {
                "title": "Filename",
                "type": "array",
                "default": [
                  "*.py"
                ],
                "items": {
                  "type": "string"
                },
                "description": "Only check for filenames matching the patterns in this comma-separated list."
              },
              "hangClosing": {
                "title": "Hang Closing",
                "type": "boolean",
                "default": false,
                "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
              },
              "ignore": {
                "title": "Ignore",
                "type": "array",
                "default": [
                  "E121",
                  "E123",
                  "E126",
                  "E226",
                  "E24",
                  "E704",
                  "W503",
                  "W504"
                ],
                "items": {
                  "type": "string"
                },
                "description": "Comma-separated list of errors and warnings to ignore (or skip)."
              },
              "maxLineLength": {
                "title": "Max Line Length",
                "type": "number",
                "default": 79,
                "description": "Maximum allowed line length for the entirety of this run."
              },
              "select": {
                "title": "Select",
                "type": "array",
                "default": [
                  "E",
                  "F",
                  "W",
                  "C90"
                ],
                "items": {
                  "type": "string"
                },
                "description": "Comma-separated list of errors and warnings to enable."
              }
            }
          },
          "pylint": {
            "title": "Pylint",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": false,
                "order": 1,
                "description": "Enable or disable Pylint. Note that Pylint can only be run on files that have been saved to disk."
              },
              "args": {
                "title": "Arguments",
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                },
                "description": "List of arguments to pass to pylint."
              }
            }
          },
          "rope_completion": {
            "title": "Rope Completion",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": false,
                "description": "Enable or disable the plugin."
              }
            }
          },
          "yapf": {
            "title": "Yapf",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": false,
                "description": "Enable or disable Yapf. If both Yapf and autopep8 are enabled the latter is prefered."
              }
            }
          },
          "autopep8": {
            "title": "autopep8",
            "type": "object",
            "properties": {
              "enabled": {
                "title": "Enabled",
                "type": "boolean",
                "default": true,
                "description": "Enable or disable autopep8. Formats code according to PyCodeStyle config."
              }
            }
          }
        }
      },
      "rope": {
        "type": "object",
        "properties": {
          "ropeFolder": {
            "title": "Rope Folder",
            "type": "string",
            "default": ".ropeproject",
            "description": "The name of the folder in which rope stores project configurations and data. Pass `null` for not using such a folder at all."
          },
          "extensionModules": {
            "title": "Extension Modules",
            "type": "array",
            "default": [
              "OpenGL",
              "PIL",
              "array",
              "audioop",
              "binascii",
              "cPickle",
              "cStringIO",
              "cmath",
              "collections",
              "datetime",
              "errno",
              "exceptions",
              "gc",
              "imageop",
              "imp",
              "itertools",
              "marshal",
              "math",
              "matplotlib",
              "mmap",
              "mpmath",
              "msvcrt",
              "networkx",
              "nose",
              "nt",
              "numpy",
              "operator",
              "os",
              "os.path",
              "pandas",
              "parser",
              "rgbimg",
              "scipy",
              "signal",
              "skimage",
              "sklearn",
              "statsmodels",
              "strop",
              "sympy",
              "sys",
              "thread",
              "time",
              "wx",
              "xxsubtype",
              "zipimport",
              "zlib"
            ],
            "items": {
              "type": "string"
            },
            "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
          }
        }
      }
    },
    "consumedServices": {
      "atom-ide-busy-signal": {
        "versions": {
          "0.1.0": "consumeBusySignal"
        }
      },
      "linter-indie": {
        "versions": {
          "2.0.0": "consumeLinterV2"
        }
      },
      "datatip": {
        "versions": {
          "0.1.0": "consumeDatatip"
        }
      },
      "signature-help": {
        "versions": {
          "0.1.0": "consumeSignatureHelp"
        }
      }
    },
    "providedServices": {
      "autocomplete.provider": {
        "versions": {
          "2.0.0": "provideAutocomplete"
        }
      },
      "code-highlight": {
        "versions": {
          "0.1.0": "provideCodeHighlight"
        }
      },
      "code-format.range": {
        "versions": {
          "0.1.0": "provideCodeFormat"
        }
      },
      "definitions": {
        "versions": {
          "0.1.0": "provideDefinitions"
        }
      },
      "find-references": {
        "versions": {
          "0.1.0": "provideFindReferences"
        }
      },
      "outline-view": {
        "versions": {
          "0.1.0": "provideOutlines"
        }
      },
      "debugger.provider": {
        "description": "Python debugger engine.",
        "versions": {
          "0.0.0": "createDebuggerProvider"
        }
      }
    }
  }
}