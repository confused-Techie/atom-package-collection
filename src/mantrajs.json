{
  "name": "mantrajs",
  "repository": {
    "type": "git",
    "url": "https://github.com/mantrajs/mantrajs-atom-package"
  },
  "downloads": 1302,
  "stargazers_count": 2,
  "releases": {
    "latest": "0.5.0"
  },
  "versions": {
    "0.5.0": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.5.0",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-space-pen-views": "^1.0.0",
        "atom-utils": ">=0.6.3",
        "cson": "^3.0.0",
        "event-kit": "^0.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "yamljs": "^0.2.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.5.0/tarball"
      }
    },
    "0.4.4": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.4.4",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-space-pen-views": "^1.0.0",
        "atom-utils": ">=0.6.3",
        "cson": "^3.0.0",
        "event-kit": "^0.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "yamljs": "^0.2.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.4.4/tarball"
      }
    },
    "0.4.3": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.4.3",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-space-pen-views": "^1.0.0",
        "atom-utils": ">=0.6.3",
        "cson": "^3.0.0",
        "event-kit": "^0.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "yamljs": "^0.2.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.4.3/tarball"
      }
    },
    "0.4.2": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.4.2",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-space-pen-views": "^1.0.0",
        "atom-utils": ">=0.6.3",
        "cson": "^3.0.0",
        "event-kit": "^0.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "yamljs": "^0.2.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.4.2/tarball"
      }
    },
    "0.4.1": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.4.1",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-space-pen-views": "^1.0.0",
        "atom-utils": ">=0.6.3",
        "cson": "^3.0.0",
        "event-kit": "^0.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "yamljs": "^0.2.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.4.1/tarball"
      }
    },
    "0.4.0": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.4.0",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-space-pen-views": "^1.0.0",
        "atom-utils": ">=0.6.3",
        "cson": "^3.0.0",
        "event-kit": "^0.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "yamljs": "^0.2.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.4.0/tarball"
      }
    },
    "0.3.0": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.3.0",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-utils": ">=0.6.3",
        "event-kit": "^0.8.0",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "atom-space-pen-views": "^1.0.0",
        "cson": "^3.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.3.0/tarball"
      }
    },
    "0.2.0": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.2.0",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-utils": ">=0.6.3",
        "event-kit": "^0.8.0",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "atom-space-pen-views": "^1.0.0",
        "cson": "^3.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.2.0/tarball"
      }
    },
    "0.1.6": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.1.6",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-utils": ">=0.6.3",
        "event-kit": "^0.8.0",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "atom-space-pen-views": "^1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.1.6/tarball"
      }
    },
    "0.1.5": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.1.5",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-utils": ">=0.6.3",
        "event-kit": "^0.8.0",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "atom-space-pen-views": "^1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.1.5/tarball"
      }
    },
    "0.1.4": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.1.4",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-utils": ">=0.6.3",
        "event-kit": "^0.8.0",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "atom-space-pen-views": "^1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.1.4/tarball"
      }
    },
    "0.1.3": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.1.3",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-utils": ">=0.6.3",
        "event-kit": "^0.8.0",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "atom-space-pen-views": "^1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.1.3/tarball"
      }
    },
    "0.1.2": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.1.2",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-utils": ">=0.6.3",
        "event-kit": "^0.8.0",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "atom-space-pen-views": "^1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.1.2/tarball"
      }
    },
    "0.1.1": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.1.1",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-utils": ">=0.6.3",
        "event-kit": "^0.8.0",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "atom-space-pen-views": "^1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.1.1/tarball"
      }
    },
    "0.1.0": {
      "name": "mantrajs",
      "main": "./lib/mantrajs",
      "version": "0.1.0",
      "description": "Mantra JS extensions for Meteor app development",
      "keywords": [
        "meteor",
        "mantra",
        "meteorjs",
        "mantrajs"
      ],
      "activationCommands": {
        "atom-workspace": "mantrajs:toggle"
      },
      "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-utils": ">=0.6.3",
        "event-kit": "^0.8.0",
        "lodash": "^2.4.1",
        "space-pen": "^3.8.0",
        "fs-extra": "^0.26.0",
        "fs-plus": "^2.8.1",
        "atom-space-pen-views": "^1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/mantrajs/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# Mantra extensions for Meteor developers\n\n## Quickstart\n\n1. Install plugin in Atom\n2. Set your project type in the plugin preferences page (Javascript/Typescript/Redux/Apollo)\n3. Start the plugin with \"ctrl+alt+o\"\n4. If you are starting with a fresh project let plugin create all files for you\n5. KNOWN ISSUE: When you let plugin create all files for you you need to toggle it once more, otherwise this step is not necessary\n\n**IMPORTANT:** Currently works only with the default theme (e.g. Material design theme not supported)\n**IMPORTANT:** Previous CSON configuration needs to be rewritten in YAML\n\n## Functionality:\n\n- custom pane to display Mantra modules and components\n- automatically generate a module\n- automatically generate module components from the menu\n- **NEW: automatically generate tests and stories**\n- **NEW: support for various project types**\n- generate server components\n- several snippets for mantra components ()\n- init a new mantra app automatically\n- **NEW: easy definition of any mantra component via YAML**\n\n\n1. Code generation - It is possible now to modify the generated code based on placeholders (*here I would like feedback on possible template structure and placeholders*). Also, please not, how components are automatically registered inside index.js\n\n  ![components](https://cloud.githubusercontent.com/assets/2682705/12999539/9f73196c-d1a4-11e5-9a49-8d898d40904e.gif)\n\n2. Similar functionality for modifying placeholders works for module components\n\n  ![modulecomponents](https://cloud.githubusercontent.com/assets/2682705/12999551/b5078e8e-d1a4-11e5-8187-520b4337a94b.gif)\n\n3. When new module is created it automatically creates all necessary directories and register module in `main.js` of the mantra app\n\n  ![modulenew](https://cloud.githubusercontent.com/assets/2682705/12999570/e1bd8050-d1a4-11e5-9bad-0c497e632d76.gif)\n\n4. It is possible to initialise all directories and mantra files in the empty Meteor project just by toggling the mantra plugin\n\n  ![lazyinit](https://cloud.githubusercontent.com/assets/2682705/12999580/f4a0b930-d1a4-11e5-922a-9411fc374425.gif)\n\n5. Mantra plugin settings are kept in the mantra.json file\n\n6. Context menu was disabled in mantra pane, as this led to problems with file deletion, which often led to unexpected deletes.\n\n## Configuration:\n\nPlugin can be easily customised by creating a *mantra.yaml* file in the project root. In the configuration, you first define the structure of the panes that will be displayed, then you define following parameters:\n\n1. For each directory you can define a template file with placeholders that will be created when pressing the \"NEW\" button on the directory\n2. For each file you define the default content in the template\n3. Files can be nested in the directories\n\nFor each template you define following parameters:\n\n1. *name* - name of the template\n2. *text* - text of the templete. You can use $1, $2 for the placeholders\n3. *placeholders* - array of placeholders that replce $1, $2 from above\n4. *create* - file is created by default when it does not exist\n5. *show* - shows in the pane view. If this file is part of the already visible directory this has no effect\n6. *actions* - define triggers when the file is created. This can either be *create* or *replace*. Create action creates extra files. Replace action replaces content in existing files.\n\nCheckout extra configuration in the project repository. Following is an exemplary configuration for the \"Classic Mantra Javascript\" project.\n\n```yaml\nroot: ''\npanes:\n  - name: Module\n    structure:\n      - directory: actions\n        structure:\n          - file: index.ts\n            template: actionIndex\n      - directory: components\n        structure:\n          - file: stories/index.ts\n            template: storiesIndex\n      - directory: containers\n      - file: routes.tsx\n        template: route\n      - file: index.ts\n        template: module\n  - name: Server\n    structure:\n      - directory: server/publications\n        structure:\n          - file: index.ts\n            template: publicationIndex\n      - directory: server/methods\n        structure:\n          - file: index.ts\n            template: methodIndex\n      - file: server/index.ts\n        template: server\n  - name: Configs\n    structure:\n      - directory: client/configs\n      - directory: lib\n      - file: client/configs/context.ts\n        template: context\n      - file: client/index.ts\n        template: client\n\ntemplates:\n  # Module action template\n  - name: actions\n    text: |\n      class Actions {\n        create({Meteor, LocalState}, myParam) {\n        },\n      };\n      let actions = new Actions();\n      export default actions;\n    placeholders:\n    actions:\n      - type: replace\n        path: index.ts\n        what: const actions = {\n        replace: import $name from \"./$name\";\\nconst actions = {\n      - type: replace\n        path: index.ts\n        what: const actions = {\n        replace: const actions = {\\n $name,\n      - type: create\n        path: tests/$name_test.ts\n        text: |\n          const {describe, it} = global;\n          import {expect} from 'chai';\n          import {spy, stub} from 'sinon';\n          import actions from '../posts';\n\n          describe('module.actions.actionSet', () => {\n            describe('create', () => {\n              it('should reject if title is not there', () => {\n                const LocalState = {set: spy()};\n                actions.create({LocalState}, null, 'content');\n                const args = LocalState.set.args[0];\n\n                expect(args[0]).to.be.equal('SAVING_ERROR');\n                expect(args[1]).to.match(/required/);\n              });\n            });\n          });\n  - name: actionIndex\n    create: true\n    text: |\n      const actions = {\n        // ACTION\n      };\n      export default actions;\n  # Module component template\n  - name: storiesIndex\n    create: true\n    text: |\n      // imports\n  - name: components\n    text: |\n      import React from \"react\";\n\n      interface IProps {\n      }\n\n      export default class $1 extends React.Component {\n        render() {\n          return (\n            <div></div>\n          );\n        }\n      }\n    placeholders:\n      - Component Name\n    actions:\n      - type: create\n        path: tests/$name_test.ts\n        text: |\n          const {describe, it} = global;\n          import {expect} from 'chai';\n          import {shallow} from 'enzyme';\n          import Component from '../$name';\n\n          describe('test', () => {\n            it('should display the post title', () => {\n              const el = shallow(<Component />);\n              expect(el).not.to.be.null;\n            });\n          });\n      - type: create\n        path: stories/$name_stories.ts\n        text: |\n          import React from 'react';\n          import { storiesOf, action } from '@kadira/storybook';\n          import Component from '../$name';\n\n          storiesOf('module.$name', module)\n            .add('default view', () => {\n              return (\n                <Component />\n              );\n            })\n      - type: replace\n        path: stories/index.ts\n        what: // imports\n        replace: |\n          // imports\n          import $name from \"./$name_stories\";\n  # Module container template\n  - name: containers\n    text: |\n      import { useDeps, composeWithTracker, composeAll } from \"../../../configs/context\";\n      import Component from \"../components/$1\";\n\n      interface IProps {\n        context?: () => IContext;\n        clearErrors: Function;\n      }\n\n      export const composer = ({context, clearErrors}, onData) => {\n        const { Meteor, Collections } = context();\n        if (Meteor.subscribe(\"$3\", postId).ready()) {\n          const options = {\n            sort: {createdAt: -1}\n          };\n          const data = {Collections.$2.find({$2}, options).fetch()};\n          onData(null, {data});\n        } else {\n          onData();\n        }\n\n        return clearErrors;\n      };\n\n      export const depsMapper = (context, actions) => ({\n        create: actions.schedule.create,\n        handleSearch: actions.schedule.handleSearch,\n        context: () => context\n      });\n\n      export default composeAll(\n        composeWithTracker(composer),\n        useDeps(depsMapper)\n      )(Component);\n    placeholders:\n      - Component Name\n      - Collection Name\n      - Subscription\n    actions:\n      - type: create\n        path: tests/$name_test.ts\n        text: |\n          const { describe, it } = global;\n          import {expect} from 'chai';\n          import {spy, stub} from 'sinon';\n          import {composer, depsMapper} from '../newpost';\n\n          describe('component', () => {\n            describe('composer', () => {\n              it('should get SAVING_ERROR from local state', () => {\n                const LocalState = {get: spy()};\n                const context = () => ({LocalState});\n\n                composer({context}, spy());\n\n                const args = LocalState.get.args[0];\n                expect(args).to.have.length(1);\n                expect(args[0]).to.be.equal('SAVING_ERROR');\n              });\n            });\n          });\n  # Module route template\n  - name: route\n    show: true\n    create: true\n    text: |\n      import React from \"react\";\n      import { mount } from \"mantra-core\";\n\n      export default function (injectDeps) {\n        //const MainLayoutCtx = injectDeps(MainLayout);\n\n        // Move these as a module and call this from a main file\n        // FlowRouter.route(\"/\", {\n        //   name: \"ei.list\",\n        //   action() {\n        //     mount(MainLayoutCtx, {\n        //       content: () => (<EiList />)\n        //     });\n        //   }\n        // });\n      }\n\n  # Module index template\n  - name: module\n    show: true\n    create: true\n    text: |\n      import actions from \"./actions\";\n      import routes from \"./routes\";\n\n      export default {\n        actions,\n        routes\n      };\n\n  # Server publication template\n  - name: server/publications\n    text: |\n      import {Meteor} from 'meteor/meteor';\n      import {check} from 'meteor/check';\n\n      export default function () {\n        Meteor.publish(\"$1\", function () {\n          const selector = {};\n          const options = {\n            // fields: {_id: 1, title: 1},\n            // sort: {createdAt: -1},\n            // limit: 10\n          };\n\n          return $2.find(selector, options);\n        });\n      }\n    placeholders:\n      - Publication Name\n      - Collection\n    actions:\n      - type: replace\n        path: index.ts\n        what: export default function () {\n        replace: |\n          import $name from \"./$name\";\n          export default function () {\n      - type: replace\n        path: index.ts\n        what: export default function () {\n        replace: |\n          export default function () {\n            $name();\n  # Method template\n  - name: server/methods\n    text: |\n      import {Meteor} from 'meteor/meteor';\n      import {check} from 'meteor/check';\n\n      export default function () {\n        Meteor.methods({\n          '$1'($2) {\n            check($2, String);\n          }\n        });\n      }\n    placeholders:\n      - Method Name\n      - Parameters\n    actions:\n      - type: replace\n        path: index.ts\n        what: export default function () {\n        replace: >\n          import $name from \"./$name\";\n          export default function () {\n      - type: replace\n        path: index.ts\n        what: export default function () {\n        replace: >\n          export default function () {\n          $name();\n  - name: server\n    create: true\n    show: true\n    text: |\n      import publications from \"./publications/index\";\n      import methods from \"./methods/index\";\n      // import addInitialData from \"./configs/initial_adds\";\n\n      publications();\n      methods();\n      // addInitialData();\n  - name: publicationIndex\n    create: true\n    text: |\n      export default function () {\n      }\n  - name: methodIndex\n    create: true\n    text: |\n      export default function () {\n      }\n\n  # context template\n  - name: context\n    create: true\n    text: |\n      import * as Collections from \"../../lib/collections\";\n\n      import {Meteor} from 'meteor/meteor';\n      import {FlowRouter} from 'meteor/kadira:flow-router';\n      import {ReactiveDict} from 'meteor/reactive-dict';\n      import {Tracker} from 'meteor/tracker';\n\n      export default function () {\n        return {\n          Meteor,\n          FlowRouter,\n          Collections,\n          LocalState: new ReactiveDict(),\n        };\n      }\n\n  # client index template\n  - name: client\n    create: true\n    show: true\n    text: |\n      import \"./configs/config\";\n\n      import {createApp} from 'mantra-core';\n\n      import coreModule from \"./modules/core/index\";\n      import initContext from \"./configs/context\";\n\n      // init context\n\n      const context = initContext();\n\n      // create app\n\n      const app = createApp(context);\n      app.loadModule(coreModule);\n      app.init();\n    actions:\n      - type: replace\n        path: ../index.ts\n        what: import {createApp} from 'mantra-core';\n        replace: |\n          import {createApp} from 'mantra-core';\n          import $nameModule from \"./modules/$name\";\n      - type: replace\n        path: ../index.ts\n        what: app.init();\n        replace: |\n          app.loadModule($nameModule);\n          app.init()\n```\n",
  "metadata": {
    "name": "mantrajs",
    "main": "./lib/mantrajs",
    "version": "0.5.0",
    "description": "Mantra JS extensions for Meteor app development",
    "keywords": [
      "meteor",
      "mantra",
      "meteorjs",
      "mantrajs"
    ],
    "activationCommands": {
      "atom-workspace": "mantrajs:toggle"
    },
    "repository": "https://github.com/tomitrescak/mantrajs-atom-package",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {
      "atom-space-pen-views": "^1.0.0",
      "atom-utils": ">=0.6.3",
      "cson": "^3.0.0",
      "event-kit": "^0.8.0",
      "fs-extra": "^0.26.0",
      "fs-plus": "^2.8.1",
      "lodash": "^2.4.1",
      "space-pen": "^3.8.0",
      "yamljs": "^0.2.7"
    }
  }
}