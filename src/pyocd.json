{
  "name": "pyocd",
  "repository": {
    "type": "git",
    "url": "https://github.com/wendlers/atom-pyocd"
  },
  "downloads": 878,
  "stargazers_count": 0,
  "releases": {
    "latest": "0.1.6"
  },
  "versions": {
    "0.1.6": {
      "name": "pyocd",
      "main": "./lib/pyocd",
      "version": "0.1.6",
      "description": "Flash your mbed / DAP-link device from Atom with pyOCD",
      "keywords": [
        "pyocd",
        "DAP-link",
        "mbed",
        "flash",
        "embedded"
      ],
      "activationCommands": {
        "atom-workspace": [
          "pyocd:toggle",
          "pyocd:flash",
          "pyocd:erase"
        ]
      },
      "repository": "https://github.com/wendlers/atom-pyocd",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "findit": "^2.0.0"
      },
      "package-deps": [
        "busy"
      ],
      "consumedServices": {
        "busy": {
          "versions": {
            "^1.0.0": "consumeBusy"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pyocd/versions/0.1.6/tarball"
      }
    },
    "0.1.5": {
      "name": "pyocd",
      "main": "./lib/pyocd",
      "version": "0.1.5",
      "description": "Flash your mbed / DAP-link device from Atom with pyOCD",
      "keywords": [
        "pyocd",
        "DAP-link",
        "mbed",
        "flash",
        "embedded"
      ],
      "activationCommands": {
        "atom-workspace": [
          "pyocd:toggle",
          "pyocd:flash",
          "pyocd:erase"
        ]
      },
      "repository": "https://github.com/wendlers/atom-pyocd",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "findit": "^2.0.0"
      },
      "package-deps": [
        "busy"
      ],
      "consumedServices": {
        "busy": {
          "versions": {
            "^1.0.0": "consumeBusy"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pyocd/versions/0.1.5/tarball"
      }
    },
    "0.1.4": {
      "name": "pyocd",
      "main": "./lib/pyocd",
      "version": "0.1.4",
      "description": "Flash your mbed / DAP-link device from Atom with pyOCD",
      "keywords": [
        "pyocd",
        "DAP-link",
        "mbed",
        "flash",
        "embedded"
      ],
      "activationCommands": {
        "atom-workspace": [
          "pyocd:toggle",
          "pyocd:flash",
          "pyocd:erase"
        ]
      },
      "repository": "https://github.com/wendlers/atom-pyocd",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "findit": "^2.0.0"
      },
      "package-deps": [
        "busy"
      ],
      "consumedServices": {
        "busy": {
          "versions": {
            "^1.0.0": "consumeBusy"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pyocd/versions/0.1.4/tarball"
      }
    },
    "0.1.3": {
      "name": "pyocd",
      "main": "./lib/pyocd",
      "version": "0.1.3",
      "description": "Flash your mbed / DAP-link device from Atom with pyOCD",
      "keywords": [
        "pyocd",
        "DAP-link",
        "mbed",
        "flash",
        "embedded"
      ],
      "activationCommands": {
        "atom-workspace": [
          "pyocd:toggle",
          "pyocd:flash",
          "pyocd:erase"
        ]
      },
      "repository": "https://github.com/wendlers/atom-pyocd",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "busy"
      ],
      "consumedServices": {
        "busy": {
          "versions": {
            "^1.0.0": "consumeBusy"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pyocd/versions/0.1.3/tarball"
      }
    },
    "0.1.2": {
      "name": "pyocd",
      "main": "./lib/pyocd",
      "version": "0.1.2",
      "description": "Flash your mbed / DAP-link device from Atom with pyOCD",
      "keywords": [
        "pyocd",
        "DAP-link",
        "mbed",
        "flash",
        "embedded"
      ],
      "activationCommands": {
        "atom-workspace": [
          "pyocd:toggle",
          "pyocd:flash",
          "pyocd:erase"
        ]
      },
      "repository": "https://github.com/wendlers/atom-pyocd",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "busy"
      ],
      "consumedServices": {
        "busy": {
          "versions": {
            "^1.0.0": "consumeBusy"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pyocd/versions/0.1.2/tarball"
      }
    },
    "0.1.1": {
      "name": "pyocd",
      "main": "./lib/pyocd",
      "version": "0.1.1",
      "description": "Flash your mbed / DAP-link device from Atom with pyOCD",
      "keywords": [
        "pyocd",
        "DAP-link",
        "mbed",
        "flash",
        "embedded"
      ],
      "activationCommands": {
        "atom-workspace": [
          "pyocd:toggle",
          "pyocd:flash",
          "pyocd:erase"
        ]
      },
      "repository": "https://github.com/wendlers/atom-pyocd",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "busy"
      ],
      "consumedServices": {
        "busy": {
          "versions": {
            "^1.0.0": "consumeBusy"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pyocd/versions/0.1.1/tarball"
      }
    },
    "0.1.0": {
      "name": "pyocd",
      "main": "./lib/pyocd",
      "version": "0.1.0",
      "description": "Flash your mbed / DAP-link device from Atom with pyOCD",
      "keywords": [
        "pyocd",
        "DAP-link",
        "mbed",
        "flash",
        "embedded"
      ],
      "activationCommands": {
        "atom-workspace": [
          "pyocd:toggle",
          "pyocd:flash",
          "pyocd:erase"
        ]
      },
      "repository": "https://github.com/wendlers/atom-pyocd",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "busy"
      ],
      "consumedServices": {
        "busy": {
          "versions": {
            "^1.0.0": "consumeBusy"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pyocd/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# atom-pyocd - pyOCD integration for Atom\n\nThis package allows you to flash your [mbed](https://www.mbed.com/) / [DAP-link](https://developer.mbed.org/handbook/DAPLink) device from within Atom using [pyOCD](https://github.com/mbedmicro/pyOCD). It is meant as an extension to the [build-med](https://atom.io/packages/build-mbed) to allow flashing the results from the `mbed-cli` build process.\n\n## Features\n\n* Configuration dialog to configure target file, board ID etc. on per project basis (configuration is written to `pyocd_settings.json`).\n* Flash `.hex` or `.bin` file\n* Erase flash\n\n![screenshot](https://raw.githubusercontent.com/wendlers/atom-pyocd/master/doc/pyocd.png)\n\n## Prerequisites\n\nIn order to use this package, pyOCD needs to be installed on your machine. For details on how to install pyOCD see the  [instructions](https://github.com/mbedmicro/pyOCD). On a typical Linux system the following command should to the trick:\n\n    sudo pip install --pre -U pyocd\n\nPlease note, that __pyOCD needs Python 2.7__. Thus if your default Python interpreter is 3.0 you might need to substitute `pip` with `pip2`.\n\nTo access the DAP-link interface as a normal user, it is very likely that you need to add a `udev` rule. This rule is board specific, but typically it looks something like this:\n\n    # mbed CMSIS-DAP\n    ATTRS{idVendor}==\"0d28\", ATTRS{idProduct}==\"0204\", MODE=\"664\", GROUP=\"plugdev\"\n    KERNEL==\"hidraw*\", ATTRS{idVendor}==\"0d28\", ATTRS{idProduct}==\"0204\", MODE=\"664\", GROUP=\"plugdev\"    \n\nPut the rule into `/etc/udev/rules.d/99-daplik.rules` and restart `udev` with:\n\n    sudo udevadm control --reload-rules\n\n## Installation\n\nTo install this package from the package repository:\n\n    apm install pyocd\n\nOr install from git:\n\n    cd $HOME/$MY_GIT_REPOS\n    git clone https://github.com/wendlers/atom-pyocd\n\nChange into the newly cloned directory and link the package into your atom install:\n\n    cd atom-pyocd\n    apm link\n\nNext, install required node packages:\n\n    apm install\n\nNow, when you start your atom next time, you might be asked to install the some dependencies.\n\n## Usage\n\n### Quick Start\n\n* Connect your board\n* Open a project for your board in Atom. Compile it to a `.hex` or `.bin` file (if you use mbed-cli and like to compile directly from Atom, you might want to try the [build-med](https://atom.io/packages/build-mbed) package).\n* Configure pyOCD for your project by opening the pyOCD panel with `shift+alt+p` (or from right click menu and selecting `pyocd: toggle`).\n* In the configuration panel at least specify a `target` and a `file`.\n* Now hit `flash` or press `shift-alt-s` to flash your board.\n* Flashing progress is indicated by the spinning busy indicator in the right bottom corner.\n* Depending on your board, you might need to manually reset it after flashing to make your program run.\n\n## Configuration Parameters\n\nThe following could be set in the pyOCD panel:\n\n* The `target` MCU\n* The `board ID` which is only needed if you have more than one board connected.\n* The `file` to flash. Could be a .bin or .hex file.\n* If the `chip erase` switch is turned on, a full chip-erase will be performed when flashing, else only a sector erase will be done (switches `-ce` and `-se` of `pyocd-flashtool`).\n* If the `fast program` switch is enabled, only the CRC of each page to is used to determine if it already has the same data (`-fp` switch of `pyocd-flashtool`).\n\nIn the package settings the following could be configured:\n\n* `pyocd-flashtool binary` : name and optional path for the flashtool which comes with pyOCD.\n\n## Available Functions\n\nThe following functions could be performed (from the pyOCD panel,the menu, the context-menu or by keyboard shortcut):\n\n* _toggel_ pyOCD panel (``shift+alt+p``): open the pyOCD panel\n* _flash_ (`shift-alt-s`): flash specified file\n* _erase_ (`shift-alt-e`): erase chip\n",
  "metadata": {
    "name": "pyocd",
    "main": "./lib/pyocd",
    "version": "0.1.6",
    "description": "Flash your mbed / DAP-link device from Atom with pyOCD",
    "keywords": [
      "pyocd",
      "DAP-link",
      "mbed",
      "flash",
      "embedded"
    ],
    "activationCommands": {
      "atom-workspace": [
        "pyocd:toggle",
        "pyocd:flash",
        "pyocd:erase"
      ]
    },
    "repository": "https://github.com/wendlers/atom-pyocd",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {
      "atom-package-deps": "^4.0.1",
      "findit": "^2.0.0"
    },
    "package-deps": [
      "busy"
    ],
    "consumedServices": {
      "busy": {
        "versions": {
          "^1.0.0": "consumeBusy"
        }
      }
    }
  }
}