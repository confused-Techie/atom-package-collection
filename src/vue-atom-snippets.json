{
  "name": "vue-atom-snippets",
  "repository": {
    "type": "git",
    "url": "https://github.com/kkostov/vue-atom-snippets"
  },
  "downloads": 5763,
  "stargazers_count": 2,
  "releases": {
    "latest": "1.4.0"
  },
  "versions": {
    "1.4.0": {
      "name": "vue-atom-snippets",
      "version": "1.4.0",
      "description": "Vue snippets to ğŸš€ my daily Vue workflow",
      "keywords": [
        "atom",
        "atom-extension",
        "atom-vue",
        "vue2",
        "vuejs",
        "vuejs2",
        "vue-snippets",
        "snippets",
        "atom-snippets",
        "nuxt",
        "nuxt-snippets",
        "vuex",
        "vuex-snippets"
      ],
      "author": {
        "name": "Konstantin Kostov",
        "email": "konstantin@headbright.be",
        "url": "https://github.com/kkostov"
      },
      "activationHooks": [
        "language-javascript:grammar-used",
        "language-vue:grammar-used"
      ],
      "repository": "https://github.com/kkostov/vue-atom-snippets",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/vue-atom-snippets/versions/1.4.0/tarball"
      }
    },
    "1.2.0": {
      "name": "vue-atom-snippets",
      "version": "1.2.0",
      "description": "Vue snippets to ğŸš€ my daily Vue workflow",
      "keywords": [
        "atom",
        "atom-extension",
        "atom-vue",
        "vue2",
        "vuejs",
        "vuejs2",
        "vue-snippets",
        "snippets",
        "atom-snippets",
        "nuxt",
        "nuxt-snippets",
        "vuex",
        "vuex-snippets"
      ],
      "author": {
        "name": "Konstantin Kostov",
        "email": "konstantin@headbright.be",
        "url": "https://github.com/kkostov"
      },
      "activationHooks": [
        "language-javascript:grammar-used",
        "language-vue:grammar-used"
      ],
      "repository": "https://github.com/kkostov/vue-atom-snippets",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/vue-atom-snippets/versions/1.2.0/tarball"
      }
    },
    "1.0.0": {
      "name": "vue-atom-snippets",
      "version": "1.0.0",
      "description": "Vue snippets to ğŸš€ my daily Vue workflow",
      "keywords": [
        "atom",
        "atom-extension",
        "atom-vue",
        "vue2",
        "vuejs",
        "vuejs2",
        "vue-snippets",
        "snippets",
        "atom-snippets",
        "nuxt",
        "nuxt-snippets",
        "vuex",
        "vuex-snippets"
      ],
      "author": {
        "name": "Konstantin Kostov",
        "email": "konstantin@headbright.be",
        "url": "https://github.com/kkostov"
      },
      "activationHooks": [
        "language-javascript:grammar-used",
        "language-vue:grammar-used"
      ],
      "repository": "https://github.com/kkostov/vue-atom-snippets",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/vue-atom-snippets/versions/1.0.0/tarball"
      }
    }
  },
  "readme": "# Vue Atom Snippets\n\n## Description\n\nThis package is an Atom port of the excellent [`Vue VSCode Snippets`](https://github.com/sdras/vue-vscode-snippets) by @sdras.\n\nMy main motivation for creating this package is that I often need to switch between Atom and VSCode and I really, really love the snippets Sarah Drasner crafted for VSCode.\n\nThe goals of this package are\n\n* To remain compatible with the `vue-vscode-snippets` - all prefixes from the original repository should be available and should produce the same output.\n\n* Implement Atom-specific tweaks and improvements which can help productivity.\n\n* The package does not aim to become an \"ubermegablob\" of snippets but rather focus on parts which are useful in every day code work.\n\n* The scope of the snippets is the core ecosystem around Vue, including `vue`, `vuex`, `vue-router` and `nuxt`. This is just a baseline, others may added as needed.\n\n## Plugin installation\n\n`apm install vue-atom-snippets`\n\n## Availability\n\nThe snippets provided by the plugin will be available in all **.vue** files as well as **.js** (e.g. `nuxt.config.js`).\n\n## Snippets\n\n### Vue\n\n| Snippet | Purpose                    |\n| ------- | -------------------------- |\n| `vbase` | Single file component base |\n\n### Template\n\n| Snippet           | Purpose                             |\n| ----------------- | ----------------------------------- |\n| `vfor`            | v-for directive                     |\n| `vmodel`          | Semantic v-model directive          |\n| `vmodel-num`      | Semantic v-model number directive   |\n| `von`             | v-on click handler with arguments   |\n| `vel-props`       | Component element with props        |\n| `vsrc`            | Image src binding                   |\n| `vstyle`          | Inline style binding                |\n| `vstyle-obj`      | Inline style binding with objects   |\n| `vclass`          | Class binding                       |\n| `vclass-obj`      | Class binding with objects          |\n| `vclass-obj-mult` | Multiple conditional class bindings |\n| `vanim`           | Transition component with JS hooks  |\n| `vnuxtl`          | Nuxt Routing Link                   |\n\n### Script\n\n| Snippet          | Purpose                                                                  |\n| ---------------- | ------------------------------------------------------------------------ |\n| `vdata`          | Component data as a function                                             |\n| `vmethod`        | Vue method                                                               |\n| `vcomputed`      | Vue computed property                                                    |\n| `vwatcher`       | Vue watcher with new and old value args                                  |\n| `vprops`         | Props with type and default                                              |\n| `vimport`        | Import one component into another                                        |\n| `vimport-c`      | Import one component into another within the export statement            |\n| `vimport-export` | Import one component into another and use it within the export statement |\n| `vfilter`        | Vue filter                                                               |\n| `vmixin`         | Create a Vue Mixin                                                       |\n| `vmixin-use`     | Bring a mixin into a component to use                                    |\n| `vc-direct`      | Vue create a custom directive                                            |\n| `vimport-lib`    | Import a library                                                         |\n| `vimport-gsap`   | Import GreenSock with Timeline and Eases                                 |\n| `vanimhook-js`   | Using the Transition component JS hooks in methods                       |\n| `vcommit`        | Commit to Vuex store in methods for mutation                             |\n| `vdispatch`      | Dispatch to Vuex store in methods for action                             |\n| `vtest`          | A simple unit testing component                                          |\n| `vinc`           | incrementer                                                              |\n| `vdec`           | decrementer                                                              |\n\n### Vuex\n\n| Snippet         | Purpose                        |\n| --------------- | ------------------------------ |\n| `vstore`        | Base for Vuex store.js         |\n| `vgetter`       | Vuex Getter                    |\n| `vmutation`     | Vuex Mutation                  |\n| `vaction`       | Vuex Action                    |\n| `vstore-import` | Import vuex store into main.js |\n\n### Nuxt Config\n\n| Snippet  | Purpose                                                 |\n| -------- | ------------------------------------------------------- |\n| `nfont`  | link to include fonts in a nuxt project, in nuxt-config |\n| `ncss`   | link to css assets such as normalize                    |\n| `nmod`   | add module entry                                        |\n| `nplugs` | add plugins for global level functionality              |\n| `nplug`  | add a plugin to the plugins section                     |\n\n\n### Nuxt Page\n\n| Snippet | Purpose                                                 |\n| ------- | ------------------------------------------------------- |\n| `nasyncdata`    | Nuxt asyncData                                  |\n| `nfetch`        | Nuxt Fetch                                      |\n| `nhead`         | Nuxt Head                                       |\n\n\n### Extra (plaintext)\n\n| Snippet     | Purpose                 |\n| ----------- | ----------------------- |\n| `gitignore` | .gitignore file presets |\n",
  "metadata": {
    "name": "vue-atom-snippets",
    "version": "1.4.0",
    "description": "Vue snippets to ğŸš€ my daily Vue workflow",
    "keywords": [
      "atom",
      "atom-extension",
      "atom-vue",
      "vue2",
      "vuejs",
      "vuejs2",
      "vue-snippets",
      "snippets",
      "atom-snippets",
      "nuxt",
      "nuxt-snippets",
      "vuex",
      "vuex-snippets"
    ],
    "author": {
      "name": "Konstantin Kostov",
      "email": "konstantin@headbright.be",
      "url": "https://github.com/kkostov"
    },
    "activationHooks": [
      "language-javascript:grammar-used",
      "language-vue:grammar-used"
    ],
    "repository": "https://github.com/kkostov/vue-atom-snippets",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0"
    },
    "dependencies": {}
  }
}