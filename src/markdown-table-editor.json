{
  "name": "markdown-table-editor",
  "repository": {
    "type": "git",
    "url": "https://github.com/susisu/atom-markdown-table-editor"
  },
  "downloads": 80109,
  "stargazers_count": 89,
  "releases": {
    "latest": "1.1.3"
  },
  "versions": {
    "1.1.3": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "1.1.3",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/atom-markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.22.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^5.16.0"
      },
      "dependencies": {
        "@susisu/mte-kernel": "^2.1.1",
        "atom-babel6-transpiler": "^1.2.0",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2"
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "babel": {
              "plugins": [
                "transform-es2015-modules-commonjs"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            }
          }
        }
      ],
      "configSchema": {
        "formatOnSave": {
          "order": 1,
          "title": "Format on Save",
          "type": "boolean",
          "default": false,
          "description": "Formats all tables on save."
        },
        "scopes": {
          "order": 2,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor is enabled."
        },
        "leftMarginChars": {
          "order": 3,
          "title": "Left Margin Characters",
          "type": "string",
          "default": "",
          "description": "String of additional left margin characters."
        },
        "formatType": {
          "order": 4,
          "type": "string",
          "default": "normal",
          "enum": [
            {
              "value": "normal",
              "description": "Normal - Cells in a column have the equal width"
            },
            {
              "value": "weak",
              "description": "Weak - Cells can have different widths"
            }
          ]
        },
        "defaultAlignment": {
          "order": 5,
          "type": "string",
          "default": "left",
          "enum": [
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "headerAlignment": {
          "order": 6,
          "type": "string",
          "default": "follow",
          "enum": [
            {
              "value": "follow",
              "description": "Follow column alignment"
            },
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "minDelimiterWidth": {
          "order": 7,
          "title": "Minimum Width of Delimiters",
          "type": "integer",
          "default": 3,
          "minimum": 1
        },
        "ambiguousAsWide": {
          "order": 8,
          "title": "Treat East Asian Ambiguous Characters as Wide",
          "type": "boolean",
          "default": false
        },
        "wideChars": {
          "order": 9,
          "title": "Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "narrowChars": {
          "order": 10,
          "title": "Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "normalize": {
          "order": 11,
          "title": "Unicode Normalization",
          "type": "boolean",
          "default": true,
          "description": "Computes cell widths based on normalized contents (NFC)."
        },
        "smartCursor": {
          "order": 12,
          "type": "boolean",
          "default": true,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/1.1.3/tarball"
      }
    },
    "1.1.2": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "1.1.2",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/atom-markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.22.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^5.16.0"
      },
      "dependencies": {
        "@susisu/mte-kernel": "^2.1.0",
        "atom-babel6-transpiler": "^1.2.0",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2"
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "babel": {
              "plugins": [
                "transform-es2015-modules-commonjs"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            }
          }
        }
      ],
      "configSchema": {
        "formatOnSave": {
          "order": 1,
          "title": "Format on Save",
          "type": "boolean",
          "default": false,
          "description": "Formats all tables on save."
        },
        "scopes": {
          "order": 2,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor is enabled."
        },
        "leftMarginChars": {
          "order": 3,
          "title": "Left Margin Characters",
          "type": "string",
          "default": "",
          "description": "String of additional left margin characters."
        },
        "formatType": {
          "order": 4,
          "type": "string",
          "default": "normal",
          "enum": [
            {
              "value": "normal",
              "description": "Normal - Cells in a column have the equal width"
            },
            {
              "value": "weak",
              "description": "Weak - Cells can have different widths"
            }
          ]
        },
        "defaultAlignment": {
          "order": 5,
          "type": "string",
          "default": "left",
          "enum": [
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "headerAlignment": {
          "order": 6,
          "type": "string",
          "default": "follow",
          "enum": [
            {
              "value": "follow",
              "description": "Follow column alignment"
            },
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "minDelimiterWidth": {
          "order": 7,
          "title": "Minimum Width of Delimiters",
          "type": "integer",
          "default": 3,
          "minimum": 1
        },
        "ambiguousAsWide": {
          "order": 8,
          "title": "Treat East Asian Ambiguous Characters as Wide",
          "type": "boolean",
          "default": false
        },
        "wideChars": {
          "order": 9,
          "title": "Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "narrowChars": {
          "order": 10,
          "title": "Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "normalize": {
          "order": 11,
          "title": "Unicode Normalization",
          "type": "boolean",
          "default": true,
          "description": "Computes cell widths based on normalized contents (NFC)."
        },
        "smartCursor": {
          "order": 12,
          "type": "boolean",
          "default": true,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/1.1.2/tarball"
      }
    },
    "1.1.1": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "1.1.1",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/atom-markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.22.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^4.19.1"
      },
      "dependencies": {
        "@susisu/mte-kernel": "^2.0.0",
        "atom-babel6-transpiler": "^1.1.3",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2"
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "babel": {
              "plugins": [
                "transform-es2015-modules-commonjs"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            }
          }
        }
      ],
      "configSchema": {
        "formatOnSave": {
          "order": 1,
          "title": "Format on Save",
          "type": "boolean",
          "default": false,
          "description": "Formats all tables on save."
        },
        "scopes": {
          "order": 2,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor is enabled."
        },
        "leftMarginChars": {
          "order": 3,
          "title": "Left Margin Characters",
          "type": "string",
          "default": "",
          "description": "String of additional left margin characters."
        },
        "formatType": {
          "order": 4,
          "type": "string",
          "default": "normal",
          "enum": [
            {
              "value": "normal",
              "description": "Normal - Cells in a column have the equal width"
            },
            {
              "value": "weak",
              "description": "Weak - Cells can have different widths"
            }
          ]
        },
        "defaultAlignment": {
          "order": 5,
          "type": "string",
          "default": "left",
          "enum": [
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "headerAlignment": {
          "order": 6,
          "type": "string",
          "default": "follow",
          "enum": [
            {
              "value": "follow",
              "description": "Follow column alignment"
            },
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "minDelimiterWidth": {
          "order": 7,
          "title": "Minimum Width of Delimiters",
          "type": "integer",
          "default": 3,
          "minimum": 1
        },
        "ambiguousAsWide": {
          "order": 8,
          "title": "Treat East Asian Ambiguous Characters as Wide",
          "type": "boolean",
          "default": false
        },
        "wideChars": {
          "order": 9,
          "title": "Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "narrowChars": {
          "order": 10,
          "title": "Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "normalize": {
          "order": 11,
          "title": "Unicode Normalization",
          "type": "boolean",
          "default": true,
          "description": "Computes cell widths based on normalized contents (NFC)."
        },
        "smartCursor": {
          "order": 12,
          "type": "boolean",
          "default": true,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/1.1.1/tarball"
      }
    },
    "1.1.0": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "1.1.0",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/atom-markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.22.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^4.18.1"
      },
      "dependencies": {
        "@susisu/mte-kernel": "^2.0.0",
        "atom-babel6-transpiler": "^1.1.3",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0"
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "babel": {
              "plugins": [
                "transform-es2015-modules-commonjs"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            }
          }
        }
      ],
      "configSchema": {
        "formatOnSave": {
          "order": 1,
          "title": "Format on Save",
          "type": "boolean",
          "default": false,
          "description": "Formats all tables on save."
        },
        "scopes": {
          "order": 2,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor is enabled."
        },
        "leftMarginChars": {
          "order": 3,
          "title": "Left Margin Characters",
          "type": "string",
          "default": "",
          "description": "String of additional left margin characters."
        },
        "formatType": {
          "order": 4,
          "type": "string",
          "default": "normal",
          "enum": [
            {
              "value": "normal",
              "description": "Normal - Cells in a column have the equal width"
            },
            {
              "value": "weak",
              "description": "Weak - Cells can have different widths"
            }
          ]
        },
        "defaultAlignment": {
          "order": 5,
          "type": "string",
          "default": "left",
          "enum": [
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "headerAlignment": {
          "order": 6,
          "type": "string",
          "default": "follow",
          "enum": [
            {
              "value": "follow",
              "description": "Follow column alignment"
            },
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "minDelimiterWidth": {
          "order": 7,
          "title": "Minimum Width of Delimiters",
          "type": "integer",
          "default": 3,
          "minimum": 1
        },
        "ambiguousAsWide": {
          "order": 8,
          "title": "Treat East Asian Ambiguous Characters as Wide",
          "type": "boolean",
          "default": false
        },
        "wideChars": {
          "order": 9,
          "title": "Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "narrowChars": {
          "order": 10,
          "title": "Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "normalize": {
          "order": 11,
          "title": "Unicode Normalization",
          "type": "boolean",
          "default": true,
          "description": "Computes cell widths based on normalized contents (NFC)."
        },
        "smartCursor": {
          "order": 12,
          "type": "boolean",
          "default": true,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/1.1.0/tarball"
      }
    },
    "1.0.2": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "1.0.2",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/atom-markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.22.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^4.11.0"
      },
      "dependencies": {
        "@susisu/mte-kernel": "1.0.0",
        "atom-babel6-transpiler": "^1.1.2",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0"
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "babel": {
              "plugins": [
                "transform-es2015-modules-commonjs"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            }
          }
        }
      ],
      "configSchema": {
        "formatOnSave": {
          "order": 1,
          "title": "Format on Save",
          "type": "boolean",
          "default": false,
          "description": "Formats all the tables on save."
        },
        "scopes": {
          "order": 2,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor is enabled."
        },
        "formatType": {
          "order": 3,
          "type": "string",
          "default": "normal",
          "enum": [
            {
              "value": "normal",
              "description": "Normal - Cells in a column have the equal width"
            },
            {
              "value": "weak",
              "description": "Weak - Cells can have different widths"
            }
          ]
        },
        "defaultAlignment": {
          "order": 4,
          "type": "string",
          "default": "left",
          "enum": [
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "headerAlignment": {
          "order": 5,
          "type": "string",
          "default": "follow",
          "enum": [
            {
              "value": "follow",
              "description": "Follow column alignment"
            },
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "minDelimiterWidth": {
          "order": 6,
          "title": "Minimum Width of Delimiters",
          "type": "integer",
          "default": 3,
          "minimum": 1
        },
        "ambiguousAsWide": {
          "order": 7,
          "title": "Treat East Asian Ambiguous Characters as Wide",
          "type": "boolean",
          "default": false
        },
        "wideChars": {
          "order": 8,
          "title": "Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "narrowChars": {
          "order": 9,
          "title": "Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "normalize": {
          "order": 10,
          "title": "Unicode Normalization",
          "type": "boolean",
          "default": true,
          "description": "Computes cell widths based on normalized contents (NFC)."
        },
        "smartCursor": {
          "order": 11,
          "type": "boolean",
          "default": true,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/1.0.2/tarball"
      }
    },
    "1.0.1": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "1.0.1",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/atom-markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^4.11.0"
      },
      "dependencies": {
        "@susisu/mte-kernel": "1.0.0",
        "atom-babel6-transpiler": "^1.1.2",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "meaw": "^1.0.0"
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "babel": {
              "plugins": [
                "transform-es2015-modules-commonjs"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            }
          }
        }
      ],
      "configSchema": {
        "formatOnSave": {
          "order": 1,
          "title": "Format on Save",
          "type": "boolean",
          "default": false,
          "description": "Formats all the tables on save."
        },
        "scopes": {
          "order": 2,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor is enabled."
        },
        "formatType": {
          "order": 3,
          "type": "string",
          "default": "normal",
          "enum": [
            {
              "value": "normal",
              "description": "Normal - Cells in a column have the equal width"
            },
            {
              "value": "weak",
              "description": "Weak - Cells can have different widths"
            }
          ]
        },
        "defaultAlignment": {
          "order": 4,
          "type": "string",
          "default": "left",
          "enum": [
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "headerAlignment": {
          "order": 5,
          "type": "string",
          "default": "follow",
          "enum": [
            {
              "value": "follow",
              "description": "Follow column alignment"
            },
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "minDelimiterWidth": {
          "order": 6,
          "title": "Minimum Width of Delimiters",
          "type": "integer",
          "default": 3,
          "minimum": 1
        },
        "ambiguousAsWide": {
          "order": 7,
          "title": "Treat East Asian Ambiguous Characters as Wide",
          "type": "boolean",
          "default": false
        },
        "wideChars": {
          "order": 8,
          "title": "Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "narrowChars": {
          "order": 9,
          "title": "Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "normalize": {
          "order": 10,
          "title": "Unicode Normalization",
          "type": "boolean",
          "default": true,
          "description": "Computes cell widths based on normalized contents (NFC)."
        },
        "smartCursor": {
          "order": 11,
          "type": "boolean",
          "default": true,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/1.0.1/tarball"
      }
    },
    "1.0.0": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "1.0.0",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/atom-markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^4.11.0"
      },
      "dependencies": {
        "@susisu/mte-kernel": "1.0.0",
        "atom-babel6-transpiler": "^1.1.2",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "meaw": "^1.0.0"
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "babel": {
              "plugins": [
                "transform-es2015-modules-commonjs"
              ],
              "sourceMaps": "inline",
              "babelrc": false
            }
          }
        }
      ],
      "configSchema": {
        "formatOnSave": {
          "order": 1,
          "title": "Format on Save",
          "type": "boolean",
          "default": false,
          "description": "Formats all the tables on save."
        },
        "scopes": {
          "order": 2,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor is enabled."
        },
        "formatType": {
          "order": 3,
          "type": "string",
          "default": "normal",
          "enum": [
            {
              "value": "normal",
              "description": "Normal - Cells in a column have the equal width"
            },
            {
              "value": "weak",
              "description": "Weak - Cells can have different widths"
            }
          ]
        },
        "defaultAlignment": {
          "order": 4,
          "type": "string",
          "default": "left",
          "enum": [
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "headerAlignment": {
          "order": 5,
          "type": "string",
          "default": "follow",
          "enum": [
            {
              "value": "follow",
              "description": "Follow column alignment"
            },
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ]
        },
        "minDelimiterWidth": {
          "order": 6,
          "title": "Minimum Width of Delimiters",
          "type": "integer",
          "default": 3,
          "minimum": 1
        },
        "ambiguousAsWide": {
          "order": 7,
          "title": "Treat East Asian Ambiguous Characters as Wide",
          "type": "boolean",
          "default": false
        },
        "wideChars": {
          "order": 8,
          "title": "Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "narrowChars": {
          "order": 9,
          "title": "Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "normalize": {
          "order": 10,
          "title": "Unicode Normalization",
          "type": "boolean",
          "default": true,
          "description": "Computes cell widths based on normalized contents (NFC)."
        },
        "smartCursor": {
          "order": 11,
          "type": "boolean",
          "default": true,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/1.0.0/tarball"
      }
    },
    "0.6.4": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.6.4",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^4.3.0"
      },
      "dependencies": {
        "meaw": "^1.0.0"
      },
      "configSchema": {
        "scopes": {
          "order": 1,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor will be enabled."
        },
        "formatType": {
          "order": 2,
          "type": "string",
          "default": "whole",
          "enum": [
            {
              "value": "whole",
              "description": "Whole Table"
            },
            {
              "value": "row",
              "description": "Each Row"
            }
          ],
          "description": "Specifies how a table is formatted on each operation."
        },
        "defaultAlignment": {
          "order": 3,
          "type": "string",
          "default": "left",
          "enum": [
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ],
          "description": "Default alignment of table cells."
        },
        "headerAlignment": {
          "order": 4,
          "type": "string",
          "default": "follow",
          "enum": [
            {
              "value": "follow",
              "description": "Follow column's alignment"
            },
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ],
          "description": "Alignment of table header cells."
        },
        "minimumContentWidth": {
          "order": 5,
          "type": "integer",
          "default": 3,
          "minimum": 1,
          "description": "Minimum content width of table cells."
        },
        "eawAmbiguousAsWide": {
          "order": 6,
          "title": "Treat East Asian Ambiguous Characters As Wide",
          "type": "boolean",
          "default": false,
          "description": "Unicode East Asian Ambiguous characters are treated as wide."
        },
        "alwaysWideChars": {
          "order": 7,
          "title": "Always Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "alwaysNarrowChars": {
          "order": 8,
          "title": "Always Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "smartCursor": {
          "order": 9,
          "type": "boolean",
          "default": false,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.6.4/tarball"
      }
    },
    "0.6.3": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.6.3",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^4.3.0"
      },
      "dependencies": {
        "meaw": "^1.0.0"
      },
      "configSchema": {
        "scopes": {
          "order": 1,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor will be enabled."
        },
        "formatType": {
          "order": 2,
          "type": "string",
          "default": "whole",
          "enum": [
            {
              "value": "whole",
              "description": "Whole Table"
            },
            {
              "value": "row",
              "description": "Each Row"
            }
          ],
          "description": "Specifies how a table is formatted on each operation."
        },
        "defaultAlignment": {
          "order": 3,
          "type": "string",
          "default": "left",
          "enum": [
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ],
          "description": "Default alignment of table cells."
        },
        "headerAlignment": {
          "order": 4,
          "type": "string",
          "default": "follow",
          "enum": [
            {
              "value": "follow",
              "description": "Follow column's alignment"
            },
            {
              "value": "left",
              "description": "Left"
            },
            {
              "value": "right",
              "description": "Right"
            },
            {
              "value": "center",
              "description": "Center"
            }
          ],
          "description": "Alignment of table header cells."
        },
        "minimumContentWidth": {
          "order": 5,
          "type": "integer",
          "default": 3,
          "minimum": 1,
          "description": "Minimum content width of table cells."
        },
        "eawAmbiguousAsWide": {
          "order": 6,
          "title": "Treat East Asian Ambiguous Characters As Wide",
          "type": "boolean",
          "default": false,
          "description": "Unicode East Asian Ambiguous characters are treated as wide."
        },
        "alwaysWideChars": {
          "order": 7,
          "title": "Always Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "alwaysNarrowChars": {
          "order": 8,
          "title": "Always Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "smartCursor": {
          "order": 9,
          "type": "boolean",
          "default": false,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.6.3/tarball"
      }
    },
    "0.6.2": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.6.2",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec",
        "fix": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^4.3.0"
      },
      "dependencies": {
        "meaw": "^1.0.0"
      },
      "configSchema": {
        "scopes": {
          "order": 1,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor will be enabled."
        },
        "formatType": {
          "order": 2,
          "type": "string",
          "default": "whole",
          "enum": [
            {
              "value": "whole",
              "description": "Whole Table"
            },
            {
              "value": "row",
              "description": "Each Row"
            }
          ],
          "description": "Specifies how a table is formatted on each operation."
        },
        "minimumContentWidth": {
          "order": 3,
          "type": "integer",
          "default": 3,
          "minimum": 1,
          "description": "Minimum content width of table cells."
        },
        "eawAmbiguousAsWide": {
          "order": 4,
          "title": "Treat East Asian Ambiguous Characters As Wide",
          "type": "boolean",
          "default": false,
          "description": "Unicode East Asian Ambiguous characters are treated as wide."
        },
        "alwaysWideChars": {
          "order": 5,
          "title": "Always Wide Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as wide."
        },
        "alwaysNarrowChars": {
          "order": 6,
          "title": "Always Narrow Characters",
          "type": "string",
          "default": "",
          "description": "String of characters that should be treated as narrow."
        },
        "smartCursor": {
          "order": 7,
          "type": "boolean",
          "default": false,
          "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.6.2/tarball"
      }
    },
    "0.6.1": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.6.1",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "meaw": "^1.0.0"
      },
      "configSchema": {
        "scopes": {
          "order": 1,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor will be enabled."
        },
        "minimumContentWidth": {
          "order": 2,
          "type": "integer",
          "default": 3,
          "minimum": 1,
          "description": "The minimum content width of table cells."
        },
        "eawAmbiguousAsWide": {
          "order": 3,
          "title": "Treat East Asian Ambiguous Characters As Wide",
          "type": "boolean",
          "default": false,
          "description": "Unicode East Asian Ambiguous characters are treated as wide."
        },
        "alwaysWideChars": {
          "order": 4,
          "title": "Always Wide Characters",
          "type": "string",
          "default": "",
          "description": "A string of characters. The characters listed are always treated as wide."
        },
        "alwaysNarrowChars": {
          "order": 5,
          "title": "Always Narrow Characters",
          "type": "string",
          "default": "",
          "description": "A string of characters. The characters listed are always treated as narrow."
        },
        "smartCursor": {
          "order": 6,
          "type": "boolean",
          "default": false,
          "description": "Remember column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.6.1/tarball"
      }
    },
    "0.6.0": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.6.0",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "meaw": "^1.0.0"
      },
      "configSchema": {
        "scopes": {
          "order": 1,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "table.gfm",
            "table.storage.md"
          ],
          "description": "List of scopes in which the table editor will be enabled."
        },
        "minimumContentWidth": {
          "order": 2,
          "type": "integer",
          "default": 3,
          "minimum": 1,
          "description": "The minimum content width of table cells."
        },
        "eawAmbiguousAsWide": {
          "order": 3,
          "title": "Treat East Asian Ambiguous Characters As Wide",
          "type": "boolean",
          "default": false,
          "description": "Unicode East Asian Ambiguous characters are treated as wide."
        },
        "alwaysWideChars": {
          "order": 4,
          "title": "Always Wide Characters",
          "type": "string",
          "default": "",
          "description": "A string of characters. The characters listed are always treated as wide."
        },
        "alwaysNarrowChars": {
          "order": 5,
          "title": "Always Narrow Characters",
          "type": "string",
          "default": "",
          "description": "A string of characters. The characters listed are always treated as narrow."
        },
        "smartCursor": {
          "order": 6,
          "type": "boolean",
          "default": false,
          "description": "Remember column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.6.0/tarball"
      }
    },
    "0.5.2": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.5.2",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib spec --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "meaw": "^1.0.0"
      },
      "configSchema": {
        "grammars": {
          "order": 1,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "source.gfm",
            "text.md"
          ],
          "description": "List of scopes in which the table editor will be enabled."
        },
        "minimumContentWidth": {
          "order": 2,
          "type": "integer",
          "default": 3,
          "minimum": 1,
          "description": "The minimum content width of table cells."
        },
        "eawAmbiguousAsWide": {
          "order": 3,
          "title": "Treat East Asian Ambiguous Characters As Wide",
          "type": "boolean",
          "default": false,
          "description": "Unicode East Asian Ambiguous characters are treated as wide."
        },
        "alwaysWideChars": {
          "order": 4,
          "title": "Always Wide Characters",
          "type": "string",
          "default": "",
          "description": "A string of characters. The characters listed are always treated as wide."
        },
        "alwaysNarrowChars": {
          "order": 5,
          "title": "Always Narrow Characters",
          "type": "string",
          "default": "",
          "description": "A string of characters. The characters listed are always treated as narrow."
        },
        "smartCursor": {
          "order": 6,
          "type": "boolean",
          "default": false,
          "description": "Remember column where the cursor will return back on \"Next Row\" command."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.5.2/tarball"
      }
    },
    "0.5.1": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.5.1",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "meaw": "^1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.5.1/tarball"
      }
    },
    "0.5.0": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.5.0",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.5.0/tarball"
      }
    },
    "0.4.4": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.4.4",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.4.4/tarball"
      }
    },
    "0.4.3": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.4.3",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.4.3/tarball"
      }
    },
    "0.4.2": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.4.2",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.4.2/tarball"
      }
    },
    "0.4.1": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.4.1",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.4.1/tarball"
      }
    },
    "0.4.0": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.4.0",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.4.0/tarball"
      }
    },
    "0.3.0": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.3.0",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.3.0/tarball"
      }
    },
    "0.2.0": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.2.0",
      "description": "Markdown table editor/formatter",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.2.0/tarball"
      }
    },
    "0.1.1": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.1.1",
      "description": "Edit Markdown tables with ease",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.1.1/tarball"
      }
    },
    "0.1.0": {
      "name": "markdown-table-editor",
      "main": "./lib/markdown-table-editor.js",
      "version": "0.1.0",
      "description": "",
      "scripts": {
        "lint": "eslint lib --fix"
      },
      "keywords": [
        "markdown",
        "table"
      ],
      "activationCommands": {},
      "repository": "https://github.com/susisu/markdown-table-editor",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "devDependencies": {
        "eslint": "^3.16.1"
      },
      "dependencies": {
        "eastasianwidth": "^0.1.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/markdown-table-editor/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# markdown-table-editor\nMarkdown table editor/formatter\n\n![demo](https://github.com/susisu/markdown-table-editor/wiki/images/demo.gif)\n\n## Quick guide\n0. Set editor's grammar to `GitHub Markdown` or `Markdown`.\n1. Input a pipe `|` and some content (the cursor position is indicated by `_`).\n    ``` markdown\n    | foo_\n    ```\n    (If you are using [language-markdown](https://atom.io/packages/language-markdown), don't forget a space after a pipe.)\n2. Hit <kbd>tab</kbd> to move to the next cell.\n    ``` markdown\n    | foo | _\n    | --- |\n    ```\n3. Continue typing.\n    ``` markdown\n    | foo | bar | _\n    | --- | --- |\n    ```\n4. Hit <kbd>enter</kbd> to move to the next row.\n    ``` markdown\n    | foo | bar |\n    | --- | --- |\n    | _   |     |\n    ```\n5. Continue typing...\n    ``` markdown\n    | foo | bar |\n    | --- | --- |\n    | baz | _   |\n    ```\n6. Hit <kbd>esc</kbd> to finish editing the table.\n    ``` markdown\n    | foo | bar |\n    | --- | --- |\n    | baz |     |\n    _\n    ```\n\n## Features\n* Format tables\n* Move the cursor from cell to cell\n* Alter column's alignment\n* Insert and delete rows and columns\n\n### Commands\n| Name                   | Description                              | Keybinding                        |\n| ---------------------- | ---------------------------------------- | --------------------------------- |\n| Next Cell              | Move to the next cell                    | <kbd>tab</kbd>                    |\n| Previous Cell          | Move to the previous cell                | <kbd>shift</kbd> + <kbd>tab</kbd> |\n| Next Row               | Move to the next row                     | <kbd>enter</kbd>                  |\n| Escape                 | Escape from the table                    | <kbd>escape</kbd>                 |\n| Format                 | Just format the table                    |                                   |\n| Format All             | Format all the tables in the text editor |                                   |\n| Align Left             | Left-align the column                    |                                   |\n| Align Right            | Right-align the column                   |                                   |\n| Align Center           | Center-align the column                  |                                   |\n| Align None             | Unset alignment of the column            |                                   |\n| Select Cell            | Select the cell content                  |                                   |\n| Move Left              | Move to the left cell                    |                                   |\n| Move Right             | Move to the right cell                   |                                   |\n| Move Up                | Move to the upper cell                   |                                   |\n| Move Down              | Move to the lower cell                   |                                   |\n| Insert Row             | Insert an empty row                      |                                   |\n| Delete Row             | Delete the row                           |                                   |\n| Move Row Up            | Move the row up                          |                                   |\n| Move Row Down          | Move the row down                        |                                   |\n| Insert Column          | Insert an empty column                   |                                   |\n| Delete Column          | Delete the column                        |                                   |\n| Move Column Left       | Move the column left                     |                                   |\n| Move Column Right      | Move the column right                    |                                   |\n| Toggle Format On Save  | Toggle \"Format On Save\" config           |                                   |\n| Switch Format Type     | Switch  \"Format Type\" config             |                                   |\n| Set Format Type Normal | Set \"Format Type\" config to \"Normal\"     |                                   |\n| Set Format Type Weak   | Set \"Format Type\" config to \"Weak\"       |                                   |\n\n(To input a newline in a table, press <kbd>shift</kbd> + <kbd>enter</kbd> (or some equivalent) instead.)\n\nYou can execute commands from the command palette (Windows, Linux: <kbd>ctrl</kbd> + <kbd>shift</kbd> + <kbd>p</kbd> / macOS: <kbd>cmd</kbd> + <kbd>shift</kbd> + <kbd>p</kbd>) or from the Packages menu.\n\nIt will be more convenient if you add some keybindings to your `keymap.cson`.\nHere are the ones which I use:\n\n``` coffee\n'atom-text-editor:not(.mini):not(.autocomplete-active).markdown-table-editor-active':\n  'cmd-left'           : 'markdown-table-editor:move-left'\n  'cmd-right'          : 'markdown-table-editor:move-right'\n  'cmd-up'             : 'markdown-table-editor:move-up'\n  'cmd-down'           : 'markdown-table-editor:move-down'\n  'shift-cmd-left'     : 'markdown-table-editor:align-left'\n  'shift-cmd-right'    : 'markdown-table-editor:align-right'\n  'shift-cmd-up'       : 'markdown-table-editor:align-center'\n  'shift-cmd-down'     : 'markdown-table-editor:align-none'\n  'alt-shift-cmd-left' : 'markdown-table-editor:move-column-left'\n  'alt-shift-cmd-right': 'markdown-table-editor:move-column-right'\n  'alt-shift-cmd-up'   : 'markdown-table-editor:move-row-up'\n  'alt-shift-cmd-down' : 'markdown-table-editor:move-row-down'\n  'cmd-k cmd-i'        : 'markdown-table-editor:insert-row'\n  'cmd-k alt-cmd-i'    : 'markdown-table-editor:delete-row'\n  'cmd-k cmd-j'        : 'markdown-table-editor:insert-column'\n  'cmd-k alt-cmd-j'    : 'markdown-table-editor:delete-column'\n```\n\n## FAQ\n### Q. My table does not align well when dealing with Chinese characters\nA. Use a monospaced font that includes glyphs for Chinese characters, such as [Noto Sans Mono CJK](https://github.com/googlei18n/noto-cjk).\nmarkdown-table-editor supports East Asian characters including Chinese characters :)\n\n## For developers\nThis package is based on [markdown-table-editor kernel](https://github.com/susisu/mte-kernel), which provides a text editor independent implementation of the functionality of the package.\nYou can create a markdown-table-editor plugin for your favorite text editor with ease!\n",
  "metadata": {
    "name": "markdown-table-editor",
    "main": "./lib/markdown-table-editor.js",
    "version": "1.1.3",
    "description": "Markdown table editor/formatter",
    "scripts": {
      "lint": "eslint lib spec",
      "fix": "eslint lib spec --fix"
    },
    "keywords": [
      "markdown",
      "table"
    ],
    "activationCommands": {},
    "repository": "https://github.com/susisu/atom-markdown-table-editor",
    "license": "MIT",
    "engines": {
      "atom": ">=1.22.0 <2.0.0"
    },
    "devDependencies": {
      "eslint": "^5.16.0"
    },
    "dependencies": {
      "@susisu/mte-kernel": "^2.1.1",
      "atom-babel6-transpiler": "^1.2.0",
      "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2"
    },
    "atomTranspilers": [
      {
        "glob": "{lib,spec}/*.js",
        "transpiler": "atom-babel6-transpiler",
        "options": {
          "babel": {
            "plugins": [
              "transform-es2015-modules-commonjs"
            ],
            "sourceMaps": "inline",
            "babelrc": false
          }
        }
      }
    ],
    "configSchema": {
      "formatOnSave": {
        "order": 1,
        "title": "Format on Save",
        "type": "boolean",
        "default": false,
        "description": "Formats all tables on save."
      },
      "scopes": {
        "order": 2,
        "type": "array",
        "items": {
          "type": "string"
        },
        "default": [
          "table.gfm",
          "table.storage.md"
        ],
        "description": "List of scopes in which the table editor is enabled."
      },
      "leftMarginChars": {
        "order": 3,
        "title": "Left Margin Characters",
        "type": "string",
        "default": "",
        "description": "String of additional left margin characters."
      },
      "formatType": {
        "order": 4,
        "type": "string",
        "default": "normal",
        "enum": [
          {
            "value": "normal",
            "description": "Normal - Cells in a column have the equal width"
          },
          {
            "value": "weak",
            "description": "Weak - Cells can have different widths"
          }
        ]
      },
      "defaultAlignment": {
        "order": 5,
        "type": "string",
        "default": "left",
        "enum": [
          {
            "value": "left",
            "description": "Left"
          },
          {
            "value": "right",
            "description": "Right"
          },
          {
            "value": "center",
            "description": "Center"
          }
        ]
      },
      "headerAlignment": {
        "order": 6,
        "type": "string",
        "default": "follow",
        "enum": [
          {
            "value": "follow",
            "description": "Follow column alignment"
          },
          {
            "value": "left",
            "description": "Left"
          },
          {
            "value": "right",
            "description": "Right"
          },
          {
            "value": "center",
            "description": "Center"
          }
        ]
      },
      "minDelimiterWidth": {
        "order": 7,
        "title": "Minimum Width of Delimiters",
        "type": "integer",
        "default": 3,
        "minimum": 1
      },
      "ambiguousAsWide": {
        "order": 8,
        "title": "Treat East Asian Ambiguous Characters as Wide",
        "type": "boolean",
        "default": false
      },
      "wideChars": {
        "order": 9,
        "title": "Wide Characters",
        "type": "string",
        "default": "",
        "description": "String of characters that should be treated as wide."
      },
      "narrowChars": {
        "order": 10,
        "title": "Narrow Characters",
        "type": "string",
        "default": "",
        "description": "String of characters that should be treated as narrow."
      },
      "normalize": {
        "order": 11,
        "title": "Unicode Normalization",
        "type": "boolean",
        "default": true,
        "description": "Computes cell widths based on normalized contents (NFC)."
      },
      "smartCursor": {
        "order": 12,
        "type": "boolean",
        "default": true,
        "description": "Remembers the column where the cursor will return back on \"Next Row\" command."
      }
    }
  }
}