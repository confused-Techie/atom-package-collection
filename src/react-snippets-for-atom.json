{
  "name": "react-snippets-for-atom",
  "repository": {
    "type": "git",
    "url": "https://github.com/nickcoleman/atom-react-snippets"
  },
  "downloads": 2440,
  "stargazers_count": 0,
  "releases": {
    "latest": "0.2.0"
  },
  "versions": {
    "0.2.0": {
      "name": "react-snippets-for-atom",
      "main": "./lib/react-redux-snippets",
      "author": "Nick Coleman <nick@itprojmgt.com>",
      "version": "0.2.0",
      "description": "React, React-Native, Redux, and test snippets to help with building your React apps in Atom.",
      "keywords": [
        "react",
        "redux",
        "react-native",
        "snippets",
        "es6",
        "test",
        "scripts"
      ],
      "activationCommands": {
        "atom-workspace": "react-snippets-for-atom:toggle"
      },
      "repository": "git+https://github.com/nickcoleman/atom-react-snippets.git",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/react-snippets-for-atom/versions/0.2.0/tarball"
      }
    }
  },
  "readme": "# atom-react-redux-react-native-snippets package\n\nReact, React-Native, Redux, and Test snippets to help with building your React apps in Atom.\n\n# React\n\n### `imr` Import React\n```\nimport React from \"react\";\n```\n\n### `imrc` Import React with Component\n```\nimport React, { Component } from \"react\";'\n```\n\n### `ed` Export Default\n```\nexport default ${1}\n```  \n\n### `rsl` React Stateless Component\n```\n    import React from 'react';\n\n    const ${1} = () => (\n\n    );\n\n    export default ${1};\n```\n\n### `rcon` React Constructor':\n```\n      constructor(props) {\n        super(props);\n\n        this.state = {$1};\n      }\n```\n\n### `rcom` React Component\n```\n      import React, { Component } from 'react';\n\n      class $1 extends Component {\n        render() {\n          return (\n            <div>\n              <h1>$1 Component</h1>\n            </div>\n          );\n        }\n      }\n\n      export default ${1};\n```\n\n### `rcwu` React Component Will Mount\n```\n      componentWillMount() {\n        ${1}\n      }\n```\n\n### `rcdm` React Component Did Mount\n```\n      componentDidMount() {\n        ${1}\n      }\n```\n\n### `rcwrp` React Component Will Receive Props\n```\n  componentWillReceiveProps() {\n    ${1}\n  }\n```\n\n### `rcum` React Component Did Unmount\n```\n      componentDidUnmount() {\n        ${1}\n      }\n```\n\n### `rcwu` React Component Will Update\n```\n      componentDidWillUpdate() {\n        ${1}\n      }\n```\n\n### `rcdu` React Component Did Update\n```\n      componentDidDidUpdate() {\n        ${1}\n      }\n```\n\n### `rrat` React-Redux App Template\n```\n    import React from 'react';\n    import ReactDom from 'react-dom';\n    import { Provider } from 'react-redux';\n    import { createStore, applyMiddleware } from 'redux';\n    // install of react-router@3.0.1 or change line below and routing to reflect latest version\n    import { Router, Route, IndexRoute, browserHistory} from 'react-router';\n    import thunk from 'redux-thunk';\n    import App from './components/App';\n\n    import reducers from './reducers';\n    const createStoreWithMiddleWare = applyMiddleware(thunk)(createStore);\n\n    ReactDOM.render(\n      <Provider store={createStoreWithMiddleware(reducers)}>\n        <Router history={browserHistory}>\n          <Route path=\"/\" component={App} >\n            <IndexRoute component={$1} />\n            <Route path=\"${2}\" component={${3}} />\n          </Route >\n        </Router>\n      </Provider>,\n      document.getElementById('app')\n    );\n```\n\n### `rrr` React-Router Route\n```\n    <Route path=\"${1}\" component={${2}} />\n```\n\n# React-Native\n\n### `rncom` React-Native Component\n```\n      import React, { Component } from 'react';\n      import { Text, View } from 'react-native';\n\n      class ${1} extends Component {\n        render() {\n          return (\n            <View>\n              <Text>${1} Component</Text>\n            </View>\n          );\n        }\n      }\n\n      export default ${1};\n```\n\n### `rnsl` React-Native Stateless Component\n```\n      import React from 'react';\n      import { Text, View } from 'react-native';\n\n      const $1 = () => (\n        <View>\n          <Text>${1} Component</Text>\n        </View>\n      )\n\n      export default ${1};\n```\n\n### `ess` React Native EStyleSheet\n```\n    import EStyleSheet from 'react-native-extended-stylesheet';\n\n    const styles = EStyleSheet.create({\n      ${1}\n    });\n\n    export default styles;\n\n```\n# Redux\n\n### `rrd` Redux Reducer\n```\n      export default (state = INITIAL_STATE, action) => {\n        switch(action.type) {\n          case ${1}:\n          default:\n            return state;\n        }\n      }\n```\n### `rrs` Redux Reducer Initial State\n```\n    const INITIAL_STATE: {\n      ${1}\n    };\n```\n### `rat` Redux Action Type\n```\nexport const ${1} = \"${1}\"'\n```\n\n# Testing\n\n### `tdesc` Test Describe\n```\n    describe('${1}', () => {\n      ${2}\n    })\n```\n### `tit` Test It\n```\n    it('should ${1}', () => {\n      ${2}\n    });\n```\n",
  "metadata": {
    "name": "react-snippets-for-atom",
    "main": "./lib/react-redux-snippets",
    "author": "Nick Coleman <nick@itprojmgt.com>",
    "version": "0.2.0",
    "description": "React, React-Native, Redux, and test snippets to help with building your React apps in Atom.",
    "keywords": [
      "react",
      "redux",
      "react-native",
      "snippets",
      "es6",
      "test",
      "scripts"
    ],
    "activationCommands": {
      "atom-workspace": "react-snippets-for-atom:toggle"
    },
    "repository": "git+https://github.com/nickcoleman/atom-react-snippets.git",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {}
  }
}