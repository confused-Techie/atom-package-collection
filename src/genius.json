{
  "name": "genius",
  "repository": {
    "type": "git",
    "url": "https://github.com/partials-dev/genius"
  },
  "downloads": 136,
  "stargazers_count": 0,
  "releases": {
    "latest": "1.0.2"
  },
  "versions": {
    "1.0.2": {
      "name": "genius",
      "main": "./lib/index",
      "version": "1.0.2",
      "description": "An Atom package that retrieves lyrics from Genius (http://genius.com)",
      "keywords": [],
      "repository": "https://github.com/partials-dev/atom-genius",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": [
          "genius:lyric-search",
          "genius:clear-cache"
        ]
      },
      "dependencies": {
        "atom-space-pen-views": "^2.2.0",
        "body-parser": "^1.15.1",
        "express": "^4.13.4",
        "moment": "^2.13.0",
        "node-genius": "^1.0.5",
        "passport": "^0.3.2",
        "passport-oauth2": "^1.3.0",
        "scrape-url": "^3.0.0"
      },
      "devDependencies": {
        "standard": "^7.0.1"
      },
      "standard": {
        "globals": [
          "atom",
          "describe",
          "it",
          "expect",
          "beforeEach",
          "jasmine",
          "runs",
          "spyOn",
          "waitsFor",
          "waitsForPromise",
          "fit"
        ]
      },
      "configSchema": {
        "geniusAccessToken": {
          "title": "Genius Access Token",
          "description": "Lets us pull lyrics from the Genius API",
          "type": "string",
          "default": ""
        },
        "geniusClientId": {
          "title": "Genius Client ID",
          "description": "Tells the Genius API who we are",
          "type": "string",
          "default": ""
        },
        "geniusClientSecret": {
          "title": "Genius Client Secret",
          "description": "Proves our identity to the Genius API",
          "type": "string",
          "default": ""
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/genius/versions/1.0.2/tarball"
      }
    },
    "1.0.1": {
      "name": "genius",
      "main": "./lib/index",
      "version": "1.0.1",
      "description": "An Atom package that retrieves lyrics from Genius (http://genius.com)",
      "keywords": [],
      "repository": "https://github.com/partials-dev/atom-genius",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": [
          "genius:lyric-search",
          "genius:clear-cache"
        ]
      },
      "dependencies": {
        "atom-space-pen-views": "^2.2.0",
        "body-parser": "^1.15.1",
        "express": "^4.13.4",
        "moment": "^2.13.0",
        "node-genius": "^1.0.5",
        "passport": "^0.3.2",
        "passport-oauth2": "^1.3.0",
        "scrape-url": "^3.0.0"
      },
      "devDependencies": {
        "standard": "^7.0.1"
      },
      "standard": {
        "globals": [
          "atom",
          "describe",
          "it",
          "expect",
          "beforeEach",
          "jasmine",
          "runs",
          "spyOn",
          "waitsFor",
          "waitsForPromise",
          "fit"
        ]
      },
      "configSchema": {
        "geniusAccessToken": {
          "title": "Genius Access Token",
          "description": "Lets us pull lyrics from the Genius API",
          "type": "string",
          "default": ""
        },
        "geniusClientId": {
          "title": "Genius Client ID",
          "description": "Tells the Genius API who we are",
          "type": "string",
          "default": ""
        },
        "geniusClientSecret": {
          "title": "Genius Client Secret",
          "description": "Proves our identity to the Genius API",
          "type": "string",
          "default": ""
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/genius/versions/1.0.1/tarball"
      }
    },
    "1.0.0": {
      "name": "genius",
      "main": "./lib/index",
      "version": "1.0.0",
      "description": "An Atom package that retrieves lyrics from Genius (http://genius.com)",
      "keywords": [],
      "repository": "https://github.com/partials-music/atom-genius",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": [
          "genius:lyric-search",
          "genius:clear-cache"
        ]
      },
      "dependencies": {
        "atom-space-pen-views": "^2.2.0",
        "body-parser": "^1.15.1",
        "express": "^4.13.4",
        "moment": "^2.13.0",
        "node-genius": "^1.0.5",
        "passport": "^0.3.2",
        "passport-oauth2": "^1.3.0",
        "scrape-url": "^3.0.0"
      },
      "devDependencies": {
        "standard": "^7.0.1"
      },
      "standard": {
        "globals": [
          "atom",
          "describe",
          "it",
          "expect",
          "beforeEach",
          "jasmine",
          "runs",
          "spyOn",
          "waitsFor",
          "waitsForPromise",
          "fit"
        ]
      },
      "configSchema": {
        "geniusAccessToken": {
          "title": "Genius Access Token",
          "description": "Lets us pull lyrics from the Genius API",
          "type": "string",
          "default": ""
        },
        "geniusClientId": {
          "title": "Genius Client ID",
          "description": "Tells the Genius API who we are",
          "type": "string",
          "default": ""
        },
        "geniusClientSecret": {
          "title": "Genius Client Secret",
          "description": "Proves our identity to the Genius API",
          "type": "string",
          "default": ""
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/genius/versions/1.0.0/tarball"
      }
    }
  },
  "readme": "# Atom Genius\n\nEasily search lyrics from [Genius](http://genius.com/) in [Atom](http://atom.io).\n\n![Lyric search demo](https://cloud.githubusercontent.com/assets/5033974/17353671/c859c8ba-590f-11e6-96a2-760427ce8dab.gif)\n\n# Keyboard shortcut\n\nThe keyboard shortcut is `ctrl-l` (as in \"lyrics\"). The command is named\n`genius:lyric-search`. To change the shortcut to `ctrl-y`, you\nwould write something like this in your `keymap.cson`:\n\n```\n'atom-text-editor':\n  'ctrl-y': 'genius:lyric-search'\n```\n\nMore information on keymaps is [here](http://flight-manual.atom.io/using-atom/sections/basic-customization/).\n",
  "metadata": {
    "name": "genius",
    "main": "./lib/index",
    "version": "1.0.2",
    "description": "An Atom package that retrieves lyrics from Genius (http://genius.com)",
    "keywords": [],
    "repository": "https://github.com/partials-dev/atom-genius",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "activationCommands": {
      "atom-workspace": [
        "genius:lyric-search",
        "genius:clear-cache"
      ]
    },
    "dependencies": {
      "atom-space-pen-views": "^2.2.0",
      "body-parser": "^1.15.1",
      "express": "^4.13.4",
      "moment": "^2.13.0",
      "node-genius": "^1.0.5",
      "passport": "^0.3.2",
      "passport-oauth2": "^1.3.0",
      "scrape-url": "^3.0.0"
    },
    "devDependencies": {
      "standard": "^7.0.1"
    },
    "standard": {
      "globals": [
        "atom",
        "describe",
        "it",
        "expect",
        "beforeEach",
        "jasmine",
        "runs",
        "spyOn",
        "waitsFor",
        "waitsForPromise",
        "fit"
      ]
    },
    "configSchema": {
      "geniusAccessToken": {
        "title": "Genius Access Token",
        "description": "Lets us pull lyrics from the Genius API",
        "type": "string",
        "default": ""
      },
      "geniusClientId": {
        "title": "Genius Client ID",
        "description": "Tells the Genius API who we are",
        "type": "string",
        "default": ""
      },
      "geniusClientSecret": {
        "title": "Genius Client Secret",
        "description": "Proves our identity to the Genius API",
        "type": "string",
        "default": ""
      }
    }
  }
}