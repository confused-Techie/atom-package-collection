{
  "name": "stlink",
  "repository": {
    "type": "git",
    "url": "https://github.com/wendlers/atom-stlink"
  },
  "downloads": 1978,
  "stargazers_count": 0,
  "releases": {
    "latest": "0.1.1"
  },
  "versions": {
    "0.1.1": {
      "name": "stlink",
      "main": "./lib/stlink",
      "version": "0.1.1",
      "description": "Flash your STM32 / stlink V2 device from Atom with stlink",
      "keywords": [
        "stlink",
        "STM32",
        "mbed",
        "flash",
        "embedded"
      ],
      "activationCommands": {
        "atom-workspace": [
          "stlink:toggle",
          "stlink:flash",
          "stlink:erase"
        ]
      },
      "repository": "https://github.com/wendlers/atom-stlink",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "findit": "^2.0.0"
      },
      "package-deps": [
        "busy"
      ],
      "consumedServices": {
        "busy": {
          "versions": {
            "^1.0.0": "consumeBusy"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/stlink/versions/0.1.1/tarball"
      }
    },
    "0.1.0": {
      "name": "stlink",
      "main": "./lib/stlink",
      "version": "0.1.0",
      "description": "Flash your STM32 / stlink V2 device from Atom with stlink",
      "keywords": [
        "stlink",
        "STM32",
        "mbed",
        "flash",
        "embedded"
      ],
      "activationCommands": {
        "atom-workspace": [
          "stlink:toggle",
          "stlink:flash",
          "stlink:erase"
        ]
      },
      "repository": "https://github.com/wendlers/atom-stlink",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "findit": "^2.0.0"
      },
      "package-deps": [
        "busy"
      ],
      "consumedServices": {
        "busy": {
          "versions": {
            "^1.0.0": "consumeBusy"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/stlink/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# atom-stlink - stlink V2 integration for Atom\n\nThis package allows you to flash your STM32/stlink V2 device from within Atom using [stlink](https://github.com/texane/stlink). It is meant as an extension to the [build-med](https://atom.io/packages/build-mbed) to allow flashing the results from the `mbed-cli` build process.\n\n## Features\n\n* Configuration dialog to configure target file, board serial etc. on per project basis (configuration is written to `stlink_settings.json`).\n* Flash `.hex` or `.bin` file\n* Erase flash\n\n![screenshot](https://raw.githubusercontent.com/wendlers/atom-stlink/master/doc/stlink.png)\n\n## Prerequisites\n\nTo use stlink, make sure you installed the `st-flash` and `st-info` binaries on your system. See instructions [here](https://github.com/texane/stlink) on how to get the binaries.\n\n## Installation\n\nTo install this package from the package repository:\n\n    apm install stlink\n\nOr install from git:\n\n    cd $HOME/$MY_GIT_REPOS\n    git clone https://github.com/wendlers/atom-stlink\n\nChange into the newly cloned directory and link the package into your atom install:\n\n    cd atom-stlink\n    apm link\n\nNext, install required node packages:\n\n    apm install\n\nNow, when you start your atom next time, you might be asked to install the some dependencies.\n\n## Usage\n\n### Quick Start\n\n* Connect your board\n* Open a project for your board in Atom. Compile it to a `.hex` or `.bin` file (if you use mbed-cli and like to compile directly from Atom, you might want to try the [build-med](https://atom.io/packages/build-mbed) package).\n* Configure stlink for your project by opening the stlink panel with `shift+alt+p` (or from right click menu and selecting `stlink: toggle`).\n* In the configuration panel at least specify a `file` to flash (and a `address` if a .bin file is used).\n* Now hit `flash` or press `shift-alt-s` to flash your board.\n* Flashing progress is indicated by the spinning busy indicator in the right bottom corner.\n\n## Configuration Parameters\n\nThe following could be set in the stlink panel:\n\n* The `board serial` which is only needed if you have more than one board connected.\n* The `file` to flash. Could be a .bin or .hex file.\n* If the `reset` switch is turned on, the board will be reset after flashing is done.\n\nIn the package settings the following could be configured:\n\n* `st-flash binary` : name and optional path for the st-flash tool which comes with stlink.\n* `st-info binary` : name and optional path for the st-info tool which comes with stlink.\n\n## Available Functions\n\nThe following functions could be performed (from the stlink panel,the menu, the context-menu or by keyboard shortcut):\n\n* _toggel_ stlink panel (``shift+alt+p``): open the stlink panel\n* _flash_ (`shift-alt-s`): flash specified file\n* _erase_ (`shift-alt-e`): erase chip\n",
  "metadata": {
    "name": "stlink",
    "main": "./lib/stlink",
    "version": "0.1.1",
    "description": "Flash your STM32 / stlink V2 device from Atom with stlink",
    "keywords": [
      "stlink",
      "STM32",
      "mbed",
      "flash",
      "embedded"
    ],
    "activationCommands": {
      "atom-workspace": [
        "stlink:toggle",
        "stlink:flash",
        "stlink:erase"
      ]
    },
    "repository": "https://github.com/wendlers/atom-stlink",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {
      "atom-package-deps": "^4.0.1",
      "findit": "^2.0.0"
    },
    "package-deps": [
      "busy"
    ],
    "consumedServices": {
      "busy": {
        "versions": {
          "^1.0.0": "consumeBusy"
        }
      }
    }
  }
}