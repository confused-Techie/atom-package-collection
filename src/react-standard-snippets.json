{
  "name": "react-standard-snippets",
  "repository": {
    "type": "git",
    "url": "https://github.com/clarktang/react-standard-snippets"
  },
  "downloads": 112,
  "stargazers_count": 0,
  "releases": {
    "latest": "0.2.0"
  },
  "versions": {
    "0.2.0": {
      "name": "react-standard-snippets",
      "main": "./lib/react-standard-snippets",
      "version": "0.2.0",
      "description": "A collection of React snippets and more ES6+ snippets with standard style",
      "keywords": [],
      "activationCommands": {},
      "repository": "https://github.com/clarktang/react-standard-snippets",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/react-standard-snippets/versions/0.2.0/tarball"
      }
    },
    "0.1.1": {
      "name": "react-standard-snippets",
      "main": "./lib/react-standard-snippets",
      "version": "0.1.1",
      "description": "A collection of React snippets and more ES6+ snippets with standard style",
      "keywords": [],
      "activationCommands": {},
      "repository": "https://github.com/clarktang/react-standard-snippets",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/react-standard-snippets/versions/0.1.1/tarball"
      }
    },
    "0.1.0": {
      "name": "react-standard-snippets",
      "main": "./lib/react-standard-snippets",
      "version": "0.1.0",
      "description": "A collection of React snippets and more ES6+ snippets with standard style",
      "keywords": [],
      "activationCommands": {},
      "repository": "https://github.com/clarktang/react-standard-snippets",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/react-standard-snippets/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# react-standard-snippets\nA collection of React snippets and more ES6+ snippets for faster javascript development in [Atom](https://atom.io)\n\nOf course, these snippets use [standard javascript](https://standardjs.com/) style.\n\n*Yes, no semicolons!*\n- [No semicolons - It's fine.Really](https://standardjs.com/rules.html#semicolons)\n\n## Snippets\n- [assert](#assert)\n- [async](#async)\n- [classes](#classes)\n- [console](#console)\n- [declarations](#declarations)\n- [dom](#dom)\n- [flow-control](#flow-control)\n- [functions](#functions)\n- [iterables](#iterables)\n- [math](#math)\n- [misc](#misc)\n- [modules](#modules)\n- [node-modules](#node-modules)\n- [objects](#objects)\n- [return](#return)\n- [timers](#timers)\n- [types](#types)\n- [react](#react)\n- [react-redux](#react-redux)\n- [react-router](#react-router)\n\n<div id=\"assert\"></div>\n\n### assert\n\n`ase` -> assert.equal\n\n`assert.equal(${1:actual}, ${2:expected})`\n\n`asn` -> assert.notEqual\n\n`assert.notEqual(${1:actual}, ${2:expected})`\n\n`asd` -> assert deepEqual\n\n`assert.deepEqual(${1:actual}, ${2:expected})`\n\n<div id=\"async\"></div>\n\n### async\n\n`cb` -> Node callback\n\n`(err, ${1:value}) => {${0}}`\n\n`p` -> Promise\n```\nnew Promise((resolve, reject) => {\n  ${0}\n})\n```\n`then` -> Promise.then\n```\n${1:promise}.then(${2:value}) => {\n  ${0}\n}\n```\n`.then` -> chain then\n```\n.then(${1:value}) => {\n  ${0}\n}\n```\n`catch` -> Promise.catch\n```\n${1:promise}.catch(${2:err} => {\n  ${0}\n})\n```\n`.catch` -> chain catch\n```\n.catch(${1:err} => {\n  ${0}\n})\n```\n\n<div id=\"classes\"></div>\n\n### classes\n\n`cs` -> class\n```\nclass ${1:name} {\n  constructor(${2:arguments}) {\n    ${0}\n  }\n}\n```\n`csx` -> class extends\n```\nclass ${1:name} extends ${2:base} {\n  constructor(${3:arguments}) {\n    super(${3:arguments})\n    ${0}\n  }\n}\n```\n\n<div id=\"console\"></div>\n\n### console\n\n`cl` -> console.log\n\n`console.log('${1:title}', ${2:$1}$0)`\n\n`cll` -> console.log(text only)\n\n`console.log(${0})`\n\n`ce` -> console.error\n\n`console.error(${0})`\n\n`cw` -> console.warn\n\n`console.warn(${0})`\n\n<div id=\"declarations\"></div>\n\n### declarations\n\n`v` -> var statement\n\n`var ${1:name}`\n\n`ve` -> var assignment\n\n`var ${1:name} = ${2ï¼›value}`\n\n`l` -> set statement\n\n`let ${1:name}`\n\n`le` -> let assignment\n\n`let ${1:name} = ${2:value}`\n\n`la` -> let assignment await\n\n`let ${1:name} = await ${2:value}`\n\n`ly` -> let yielded assignment\n\n`let ${1:name} = yield ${2:value}`\n\n`co` -> const statement\n\n`const ${1:name}`\n\n`coe` -> const assignment\n\n`const ${1:name} = ${2:value}`\n\n`con` -> const named assignment\n\n`const { ${1:name} } = ${2:value}`\n\n`cosy` -> const Symbol\n\n`const ${1:name} = Symbol('${2:name}')`\n\n`coa` -> const assignment await\n\n`const ${1:name} = await ${2:value}`\n\n`coy` -> const yielded assignment\n\n`const ${1:name} = yield ${2:value}`\n\n<div id=\"dom\"></div>\n\n### dom\n\n`ae` -> addEventListener\n```\n${1:document}.addEventListener('${2:event}', function (e) {\n  ${0}\n})\n```\n`rel` -> removeEventListener\n\n`${1:document}.removeEventListener('${2:event}', ${3:listener})`\n\n`stp` -> stopPropagation\n\n`${1:event}.stopPropagation()`\n\n`prd` -> preventDefault\n\n`${1:event}.preventDefault()`\n\n`gi` -> getElementById\n\n`${1:document}.getElementById('${2:id}')`\n\n`gc` -> getElementsByClassName\n\n`Array.from(${1:document}.getElementsByClassName('${2:class}'))`\n\n`gt` -> getElementsByTagName\n\n`Array.from(${1:document}.getElementsByTagName('${2:tag}'))`\n\n`qs` -> querySelector\n\n`${1:document}.querySelector('${2:selector}')`\n\n`qsa` -> querySelectorAll\n\n`${1:document}.querySelectorAll('${2:selector}')`\n\n`cdf` -> createDocumentFragment\n\n`${1:document}.createDocumentFragment(${2:elem})`\n\n`cel` -> createElement\n\n`${1:document}.createElement(${2:elem})`\n\n`ac` -> appendChild\n\n`${1:document}.appendChild(${2:elem})`\n\n`rmc` -> removeChild\n\n`${1:document}.removeChild(${2:elem})`\n\n`cla` -> classList.add\n\n`${1:document}.classList.add('${2:class}')`\n\n`clt` -> classList.toggle\n\n`${1:document}.classList.toggle('${2:class}')`\n\n`clr` -> classList.remove\n\n`${1:document}.classList.remove('${2:class}')`\n\n`ga` -> getAttribute\n\n`${1:document}.getAttribute('${2:attr}')`\n\n`sa` -> setAttribute\n\n`${1:document}.setAttribute('${2:attr}', ${3:value})`\n\n`ra` -> removeAttribute\n\n`${1:document}.removeAttribute('${2:attr}')`\n\n<div id=\"flow-control\"></div>\n\n### flow-control\n\n`if` -> if statement\n```\nif (${1:condition}) {\n  ${2}\n}\n```\n`el` -> else statement\n```\nelse {\n  ${0}\n}\n```\n`ife` -> if/else statement\n```\nif (${1:condition}) {\n  ${2}\n} else {\n  ${3}\n}\n```\n`ei` -> else if statement\n```\nelse if (${1:condition}) {\n  ${2}\n}\n```\n`fl` -> for loop\n```\nfor (let ${1:i} = 0; ${1:i} < ${2:iterable}${3:.length}; ${1:i}++) {\n  ${4}\n}\n```\n`fi` -> for in loop\n```\nfor (let ${1:key} in ${2:source}) {\n  if (${2:source}.hasOwnProperty(${1:key})) {\n    ${3}\n  }\n}\n```\n`fo` -> for of loop\n```\nfor (let ${1:key} of ${2:source}) {\n  ${3}\n}\n```\n`wl` -> while loop\n```\nwhile (${1:condition}) {\n  ${2}\n}\n```\n`tc` -> try/catch\n```\ntry {\n  ${1}\n} catch (${2:err}) {\n  ${3}\n}\n```\n`tf` -> try/finally\n```\ntry {\n  ${1}\n} finally {\n  ${2}\n}\n```\n`tcf` -> try/catch/finally\n```\ntry {\n  ${1}\n} catch (${2:err}) {\n  ${3}\n} finally {\n  ${4}\n}\n```\n\n<div id=\"functions\"></div>\n\n### functions\n\n`f` -> anonymous function\n\n`function (${1:arguments}) {${0}}`\n\n`fn` -> named function\n```\nfunction ${1:name} (${2:argments}) {\n  ${0}\n}\n```\n\n`immediately-invoked function expression`\n```\n;((${1:argments}) => {\n  ${0}\n})(${2})\n```\n\n`fa` -> function apply\n\n`${1:fn}.apply(${2:this}, ${3:argments})`\n\n`fc` -> function call\n\n`${1:fn}.call(${2:this}, ${3:arguments})`\n\n`fb` -> function bind\n\n`${1:fn}.bind(${2:this}, ${3:argments})`\n\n`af` -> arrow function\n\n`(${1:argments}) => ${2:statement}`\n\n`afb` -> arrow function with body\n```\n(${1:argments}) => {\n  ${0}\n}\n```\n\n`gf` -> generator\n```\nfunction * (${1:argments}) {\n  ${0}\n}\n```\n\n`gfn` -> named generator\n```\nfunction * ${1:name} (${2:arguments}) {\n  ${0}\n}\n```\n\n<div id=\"iterables\"></div>\n\n### iterables\n\n`fe` -> forEach loop\n```\n${1:iterable}.forEach(${2:item} => {\n  ${0}\n})\n```\n\n`.forEach` -> chain forEach loop\n```\n.forEach(${1:item} => {\n  ${0}\n})\n```\n\n`map` -> map\n```\n${1:iterable}.map(${2:item} => {${0}})\n```\n\n`.map` -> chain map\n```\n.map(${1:item} => {${0}})\n```\n\n`reduce` -> reduce\n```\n${1:iterable}.reduce((${2:p}, ${3:c}) => {${0}}, ${4:initial})\n```\n\n`.reduce` -> chain reduce\n```\n.reduce((${1:p}, ${2:c}) =>{${0}}, ${4:initial})\n```\n\n`filter` -> filter\n```\n${1:iterable}.filter(${2:item} => {${0}})\n```\n\n`.filter` -> chain filter\n```\n.filter(${1:item} => {${0}})\n```\n\n`find` -> find\n```\n${1:iterable}.find(${2:item} => {${0}})\n```\n\n`.find` -> chain find\n```\n.find(${1:item} => {${0}})\n```\n\n`every` -> every\n```\n${1:iterable}.every(${2:item} => {${0}})\n```\n\n`.every` -> chain every\n```\n.every(${1:item} => {${0}})\n```\n\n`some` -> some\n```\n${1:iterable}.some(${2:item} => {${0}})\n```\n\n`.some` -> chain some\n```\n.some(${1:item} => {${0}})\n```\n\n<div id=\"math\"></div>\n\n### math\n\n`sin` -> Math.sin\n\n`Math.sin(${0})`\n\n`abs` -> Math.abs\n\n`Math.abs(${0})`\n\n`acos` -> Math.acos\n\n`Math.acos(${0})`\n\n`asin` -> Math.asin\n\n`Math.asin(${0})`\n\n`atan` -> Math.atan\n\n`Math.atan(${0})`\n\n`ceil` -> Math.cel\n\n`Math.ceil(${0})`\n\n`cos` -> Math.cos\n\n`Math.cos(${0})`\n\n`floor` -> Math.floor\n\n`Math.floor(${0})`\n\n`loge` -> Math.log\n\n`Math.log(${0})`\n\n`log2` -> Math.log2\n\n`Math.log2(${0})`\n\n`pow` -> Math.pow\n\n`Math.pow(${1:base}, ${2:2})`\n\n`random` -> Math.random\n\n`Math.random()`\n\n`sqrt` -> Math.sqrt\n\n`Math.sqrt(${0})`\n\n`tan` -> Math.tan\n\n`Math.tan(${0})`\n\n`PI` -> Math.PI\n\n`Math.PI`\n\n<div id=\"misc\"></div>\n\n### misc\n\n`us` -> use strict\n\n`use strict`\n\n`js` -> JSON stringify\n\n`JSON.stringify(${0})`\n\n`jp` -> JSON parse\n\n`JSON.parse(${0})`\n\n<div id=\"modules\"></div>\n\n### modules\n\n`ex` -> module export\n\n`export ${1:member}`\n\n`ec` -> module export const\n\n`export const ${1:member} = ${2:value}`\n\n`ed` -> module export default\n\n`export default ${1:member}`\n\n`edf` -> module export default function\n```\nexport default function ${1:name} (${2:argments}) {\n  ${0}\n}\n```\n\n`edaf` -> module export default arrow function\n```\nexport default (${1:argments}) => {\n  ${0}\n}\n```\n\n`im` -> import module\n\n`import ${2:*} from '${1:module}'`\n\n`ima` -> import module as\n\n`import ${2:*} as ${3:name} from '${1:module}'`\n\n`imn` -> import module named\n\n`import { ${2:name} } from '${1:module}'`\n\n`imp` -> import single\n\n`import '${1:module}'`\n\n<div id=\"node-modules\"></div>\n\n### node-modules\n\n`req` -> require\n\n`require('${1:module}')`\n\n`exm` -> exports.member\n\n`exports.${1:member} = ${2:value}`\n\n`mex` -> module exports\n\n`module.exports = ${0}`\n\n<div id=\"objects\"></div>\n\n### objects\n\n`kv` -> key/value pair\n\n`${1:key}: ${2:'value'}`\n\n`m` -> method\n```\n${1:method} (${2:argments}) {\n  ${0}\n}\n```\n\n`get` -> getter\n```\nget ${1:property} (${2:value}) {\n  ${0}\n}\n```\n\n`gs` -> getter + setter\n```\nget ${1:property} () {\n  ${0}\n}\nset ${1:property} (${2:value}) {\n  ${3}\n}\n```\n\n`proto` -> prototype method\n```\n${1:Class}.prototype.${2:method} = function (${3:argments}) {\n  ${0}\n}\n```\n\n`.proto` -> chain prototype method\n```\n.prototype.${1:method} = function (${2:argments}) {\n  ${0}\n}\n```\n\n`oa` -> Object assign\n\n`Object.assign(${1:dest}, ${2:source})`\n\n`oc` -> Object create\n\n`Object.create(${1:obj})`\n\n`ok` -> Object keys\n\n`Object.keys(${1:obj})`\n\n`og` -> Object getOwnPropertyDescriptor\n\n`Object.getOwnPropertyDescriptor(${1:dest}, '${2:prop}')`\n\n`od` -> Object defineProperty\n\n`Object.defineProperty(${1:dest}, '${2:prop}', ${3:descriptor})`\n\n`ods` -> Object defineProperties\n\n`Object.defineProperties(${1:dest}, ${2:props})`\n\n<div id=\"return\"></div>\n\n### return\n\n`r` -> return\n\n`return ${0}`\n\n`rt` -> return this\n\n`return this`\n\n`rn` -> return null\n\n`return null`\n\n`rf` -> return false\n\n`return false`\n\n`ry` -> return true\n\n`return true`\n\n`ro` -> return object\n```\nreturn {\n  ${0}\n}\n```\n\n`rp` -> return promise\n```\nreturn new Promise((resolve, reject) => {\n  ${0}\n})\n```\n\n<div id=\"timers\"></div>\n\n### timers\n\n`st` -> setTimeout\n```\nsetTimeout(() => {\n  ${0}\n}, ${1:delay})\n```\n\n`si` -> setInterval\n```\nsetInterval(() => {\n  ${0}\n})\n```\n\n`sim` -> setImmediate\n```\nsetImmediate(() => {\n  ${0}\n})\n```\n\n`ct` -> clearTimout\n\n`clearTimout(${1:timer})`\n\n`cl` -> clearInterval\n\n`clearInterval(${1:timer})`\n\n<div id=\"types\"></div>\n\n### types\n\n`S` -> String\n\n`String`\n\n`N` -> Number\n\n`Number`\n\n`O` -> Object\n\n`Object`\n\n`D` -> Date\n\n`Date`\n\n`Rx` -> RegExp\n\n`RegExp`\n\n`tof` -> typeof\n\n`typeof ${1:source} === '${2:undefined}'`\n\n`iof` -> instanceof\n\n`${1:source} instanceof ${2:Object}`\n\n<div id=\"react\"></div>\n\n### react\n\n`rcn` -> React className\n\n`className='${1}'`\n\n`imr` -> import React\n\n`import React from 'react'`\n\n`imrd` -> import ReactDom\n\n`import ReactDom from 'react-dom'`\n\n`imrc` -> import React and Component\n\n`import React, { Component } from 'react'`\n\n`imrp` -> import PropTypes\n\n`import PropTypes from 'prop-types'`\n\n`rc` -> React Componet\n```\nclass ${1:MyComponent} extends Component {\n  static propTypes = {\n    ${2}\n  }\n\n  state = {\n    ${3}\n  }\n\n  render () {\n    return (\n      ${3:<div>MyComponent</div>}\n    )\n  }\n}\n\nexport default ${1:MyComponent}\n```\n\n`rcf` -> React Component Function\n```\nfunction ${1} (props) {\n  return (\n    ${3:<div>MyComponent</div>}\n  )\n}\n\n${1}.propTypes = {\n  ${2}\n}\n\nexport default ${1}\n```\n\n`rcaf` -> React Component Arrow Function\n```\nconst ${1} = (props) => {\n  return (\n    ${3:<div>MyComponent</div>}\n  )\n}\n\nexport default ${1}\n```\n\n`rm` -> React method\n```\n${1:method} = (${2}) => {\n  ${3}\n}\n```\n\n`cwm` -> React componentWillMount\n```\ncomponentWillMount () {\n  ${1}\n}\n```\n\n`cdm` -> React componentDidMount\n```\ncomponentDidMount () {\n  ${1}\n}\n```\n\n`cwrp` -> React componentWillReceiveProps\n```\ncomponentWillReceiveProps () {\n  ${1}\n}\n```\n\n`scup` -> React shouldComponentUpdate\n```\nshouldComponentUpdate (nextProps, nextState) {\n  ${1}\n}\n```\n\n`cdup` -> React componentDidUpdate\n```\ncomponentDidUpdate (prevProps, prevState) {\n  ${1}\n}\n```\n\n`cwup` -> React componentWillUpdate\n```\ncomponentWillUpdate (nextProps, nextState) {\n  ${1}\n}\n```\n\n`cwu` -> React componentWillUnmount\n```\ncomponentWillUnmount () {\n  ${1}\n}\n```\n\n`sdp` -> React static defaultProps\n```\nstatic defaultProps = {\n  ${1}\n}\n```\n\n`spt` -> React static propTypes\n```\nstatic propTypes = {\n  ${1}: PropTypes.${2:string}\n}\n```\n\n`ctx` -> React createContext\n\n`const ${1:myContext} = React.createContext(${2:defaultValue})`\n\n`ctxc` -> React Context Consumer\n```\n<${1:myContext.}Consumer>\n  {value => ${2}}\n</${1:myContext.}Consumer>\n```\n\n`ctxp` -> React Context Provider\n```\n<${1:myContext.}Provider value={${2}}>\n  ${3}\n</${1:myContext.}Provider>\n\n`ss` -> React setState\n```\nthis.setState({\n  ${1}: ${2}\n})\n```\n\n`tp` -> React this.props\n\n`this.props.${1}`\n\n`ts` -> React this.state\n\n`this.state.${1}`\n\n`pts` -> React PropTypes string\n\n`PropTypes.string`\n\n`ptsr` -> React PropTypes.string.isRequired\n\n`PropTypes.string.isRequired`\n\n`pta` -> React PropTypes array\n\n`PropTypes.array`\n\n`ptar` -> React PropTypes.array.isRequired\n\n`PropTypes.array.isRequired`\n\n`ptb` -> React PropTypes bool\n\n`PropTypes.bool`\n\n`ptbr` -> React PropTypes.bool.isRequired\n\n`ptf` -> React PropTypes function\n\n`PropTypes.func`\n\n`ptfr` -> React PropTypes.func.isRequired\n\n`PropTypes.func.isRequired`\n\n`ptn` -> React PropTypes number\n\n`PropTypes.number`\n\n`ptnr` -> React PropTypes.number.isRequired\n\n`PropTypes.number.isRequired`\n\n`pto` -> React PropTypes object\n\n`PropTypes.object`\n\n`ptor` -> React PropTypes.object.isRequired\n\n`PropTypes.object.isRequired`\n\n`ptnode` -> React PropTypes node\n\n`PropTypes.node`\n\n`ptnoder` -> React PropTypes.node.isRequired\n\n`PropTypes.node.isRequired`\n\n`pte` -> React PropTypes element\n\n`PropTypes.element`\n\n`pter` -> React PropTypes.element.isRequired\n\n`PropTypes.element.isRequired`\n\n`pti` -> React PropTypes isinstanceOf\n\n`PropTypes.instanceOf(${1})`\n\n`ptir` -> React PropTypes.isinstanceOf.isRequired\n\n`propTypes.isinstanceOf(${1}).isRequired`\n\n`ptone` -> React PropTypes oneOf\n\n`PropTypes.oneOf([${1}])`\n\n`ptoner` -> React PropTypes.oneOf.isRequired\n\n`PropTypes.oneOf([${1}]).isRequired`\n\n`ptonet` -> React PropTypes.oneOfType\n```\nPropTypes.oneOfType([\n  ${1}\n])\n```\n\n`ptoner` -> React PropTypes.oneOfType.isRequired\n```\nPropTypes.oneOfType([\n  ${1}\n]).isRequired\n```\n\n`ptao` -> React PropTypes arrayOf\n\n`PropTypes.arrayOf(${1})`\n\n`ptaor` -> React PropTypes.arrayOf.isRequired\n\n`PropTypes.arrayOf(${1}).isRequired`\n\n`ptoo` -> React PropTypes objectOf\n\n`PropTypes.objectOf(${1})`\n\n`ptoor` -> React PropTypes.objectOf.isRequired\n\n`PropTypes.objectOf(${1}).isRequired`\n\n`ptsh` -> React PropTypes shape\n```\nPropTypes.shape({\n  ${1}\n})\n```\n\n`ptshr` -> React PropTypes.shape.isRequired\n```\nPropTypes.shape({\n  ${1}\n}).isRequired\n```\n\n`ptany` -> React PropTypes any\n\n`PropTypes.any`\n\n`ptany` -> React PropTypes.any.isRequired\n\n`PropTypes.any.isRequired`\n\n<div id=\"react-redux\"></div>\n\n### react-redux\n\n`imrr` -> import Redux\n\n`import { createStore${1:, applyMiddleware} } from 'redux'`\n\n`imrrr` -> import Redux combineReducers\n\n`import { combineReducers } from 'redux'`\n\n`imrrp` -> import Redux Provider\n\n`import { Provider } from 'react-redux'`\n\n`imrrc` -> import Redux connect\n\n`import { connect } from 'react-redux'`\n\n`imrrb` -> import Redux bindActionCreators\n\n`import { bindActionCreators } from 'redux'`\n\n`imrrt` -> import Redux thunk\n\n`import thunk from 'redux-thunk'`\n\n`rrc` -> React Redux Container\n```\nclass ${1:MyComponent} extends Component {\n  static propTypes = {\n    ${4}\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      ${5}\n    }\n  }\n\n  render () {\n    return (\n      ${6:<div>MyComponent</div>}\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ${2}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  ${3}\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:MyComponent})\n```\n\n`rrcc` -> React Redux @connect\n```\n@connect(\n  ${3:state} => {\n    ${6}\n  },\n  ${4:dispatch} => bindActionCreators(${5:actions}, dispatch)\n)\n\nclass ${1:MyComponent} extends Component {\n  static propTypes = {\n    ${2}\n  }\n\n  render () {\n    return (\n      ${7:<div>MyComponent</div>}\n    )\n  }\n}\n```\n\n`rrac` -> React Redux Action Creator\n```\nprefix: 'rrac'\nbody: \"\"\"\nexport const ${1:asyncAction} = (${2:arguments}) => (dispatch, getState) => {\n  dispatch(${0})\n  return fetch(${3:url})\n    .then(response => response.json())\n    .then(json => dispatch(${1}))\n}\n```\n\n<div id=\"react-router\"></div>\n\n### react-router\n\n`imro` -> import react-router-dom\n\n`import { ${1:Route}, ${2:BrowserRouter} as Router, ${3:Switch}, ${4:Link}} from 'react-router-dom'`\n\n`imrol` -> import react-router Link\n\n`import { Link } from 'react-router-dom'`\n\n`imros` -> import react-router Switch\n\n`import { Switch, ${1:Link} } from 'react-router-dom'`\n\n`rolink` -> react-router-link\n\n`<Link to='${1:path}'>${2:description}</Link>`\n\n`roswitch` -> react-router Switch\n```\n<Switch>\n  <Route path='${1:/}' component={${2}} ${3:exact} />\n  ${4}\n</Switch>\n```\n\n`roroute` -> react-router Route\n\n`<Route path='${1:/}' component={${2}} ${3:exact} />`\n",
  "metadata": {
    "name": "react-standard-snippets",
    "main": "./lib/react-standard-snippets",
    "version": "0.2.0",
    "description": "A collection of React snippets and more ES6+ snippets with standard style",
    "keywords": [],
    "activationCommands": {},
    "repository": "https://github.com/clarktang/react-standard-snippets",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {}
  }
}