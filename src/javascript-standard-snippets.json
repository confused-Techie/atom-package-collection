{
  "name": "javascript-standard-snippets",
  "repository": {
    "type": "git",
    "url": "https://github.com/jprichardson/atom-javascript-standard-snippets"
  },
  "downloads": 6159,
  "stargazers_count": 6,
  "releases": {
    "latest": "0.2.1"
  },
  "versions": {
    "0.2.1": {
      "name": "javascript-standard-snippets",
      "version": "0.2.1",
      "description": "JavaScript Standard Style Snippets for Atom",
      "repository": "https://github.com/jprichardson/atom-javascript-standard-snippets",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/javascript-standard-snippets/versions/0.2.1/tarball"
      }
    },
    "0.2.0": {
      "name": "javascript-standard-snippets",
      "version": "0.2.0",
      "description": "JavaScript Standard Style Snippets for Atom",
      "repository": "https://github.com/jprichardson/atom-javascript-standard-snippets",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/javascript-standard-snippets/versions/0.2.0/tarball"
      }
    }
  },
  "readme": "JavaScript Standard Style Snippets for [Atom](http://atom.io)\n=============================================================\n\nInstall\n-------\n\nGo to `Atom > Preferences...` then search for **JavaScript Standard Snippets**\nin the `Packages` tab.\n\nor..\n\n\t\tapm install javascript-standard-snippets\n\n\nCredits\n-------\n\nThis package is a fork of\n- https://github.com/zenorocha/atom-javascript-snippets which is a fork of\n- https://github.com/zenorocha/sublime-javascript-snippets which is a fork of\n- https://github.com/jprichardson/sublime-js-snippets\n\nSo thanks to [zenorocha](https://github.com/zenorocha) for helping these snippets\ncome full-circle.\n\nWhy not `javascript-snippets` package? Because it doesn't adhere to\n[JavaScript Standard Style](https://github.com/feross/standard) and doesn't\nsupport ES2015.\n\n\nSnippets Summary\n----------------\n\n- [Console](#console)\n\t- [cd => console.dir](#cd-consoledir)\n\t- [ce => console.error](#ce-consoleerror)\n\t- [cl => console.log](#cl-consolelog)\n- [Control Flow](#control-flow)\n\t- [pe => process.exit](#pe-processexit)\n- [Function](#function)\n\t- [fn => function](#fn-function)\n\t- [afn => anonymous function](#afn-anoymous-function)\n- [Modules](#modules)\n\t- [me => module.exports](#me-moduleexports)\n\t- [req => require](#req-require)\n- [Testing](testing)\n\t- [ase => assert.strictEqual](#ase-assertstrictequal)\n\t- [ade => assert.deepEqual](#ase-assertdeepequal)\n\t- [desc => describe](#desc-describe)\n\t- [ita => it (asynchronous)](#ita-it-asynchronous)\n\t- [its => it (synchronous)](#its-it-synchronous)\n\n\n\nConsole\n-------\n\n### [cd] console.dir\n\n```js\nconsole.dir(${1:obj})\n```\n\n### [ce] console.error\n\n```js\nconsole.error(${1:error})\n```\n\n### [cl] console.log\n\n```js\nconsole.log(${1:message})\n```\n\n\nControl Flow\n------------\n\n### [pe] process.exit\n\n```js\nprocess.exit(${1:code})\n```\n\n\nFunction\n--------\n\n### [fn] function\n\n```js\nfunction ${1:methodName} (${2:arguments}) {\n\t${0:// body...}\n}\n```\n\n### [afn] anonymous function\n\n```js\nfunction (${1:arguments}) {\n\t${0:// body...}\n}\n```\n\n### [me] module.exports\n\n```js\nmodule.exports = ${1:name}\n```\n\n### [req] require\n\n```js\nrequire('${1:module}')\n```\n\n\n## Testing\n\n### [ase] assert.strictEqual\n\n```js\nassert.strictEqual(${1:actual}, ${2:expected})\n```\n\n### [asd] assert.deepEqual\n\n```js\nassert.deepEqual(${1:actual}, ${2:expected})\n```\n\n### [desc] describe\n\n```js\ndescribe('${1:description}', function () {\n\t${0:// body...}\n})\n```\n\n### [ita] it asynchronous\n\n```js\nit('${1:description}', function (done) {\n\t${0:// body...}\n})\n```\n\n### [its] it synchronous\n\n```js\nit('${1:description}', function () {\n\t${0:// body...}\n})\n```\n\n\n\nDevelopment / Contributions\n---------------------------\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nWanna suggest new snippets? Excellent! First, make sure that they adhere to\n[JavaScript Standard Style](https://github.com/feross/standard). This means\nthat if you suggest that any of these snippets should have semicolons, your\nsuggestion will be rejected :p\n\nI have no intention of maintaining compability with my older [sublime JavaScript snippet\npackage](https://github.com/jprichardson/sublime-js-snippets).\n\nThis package will adhere to [semver](http://semver-ftw.org/). This means until\nit's 1.0, you can and should expect breaking changes.\n\nI'm particularly interested in ES6 (ES2015)/ES7 snippet suggestions.\n\nPlease don't suggest maintaining snippets for the sake of ES5 compatibility, it's\nnot gonna happen.\n\n\nAlternatives\n------------\n- https://github.com/atom/language-javascript\n- https://github.com/extrabacon/atom-turbo-javascript\n- https://github.com/zenorocha/atom-javascript-snippets#afn-anonymous-function\n\n\nLicense\n-------\n\nMIT\n\nCopyright (c) [JP Richardson](https://github.com/jprichardson)\n",
  "metadata": {
    "name": "javascript-standard-snippets",
    "version": "0.2.1",
    "description": "JavaScript Standard Style Snippets for Atom",
    "repository": "https://github.com/jprichardson/atom-javascript-standard-snippets",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0"
    }
  }
}