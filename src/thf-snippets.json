{
  "name": "thf-snippets",
  "repository": {
    "type": "git",
    "url": "https://github.com/lypborges/thf-snippets"
  },
  "downloads": 55,
  "stargazers_count": 0,
  "releases": {
    "latest": "0.1.0"
  },
  "versions": {
    "0.1.0": {
      "name": "thf-snippets",
      "main": "./lib/thf",
      "version": "0.1.0",
      "description": "A set of AngularJS snippets based on John Papa's style guide for THF (TOTVS HTML framework).",
      "repository": "https://github.com/lypborges/thf-snippets",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/thf-snippets/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# angularjs-styleguide-snippets package\n\nFor use with THF (TOTVS HTML framework) in atom.\nA set of AngularJS snippets forked from angularjs-styleguide-snippets based on John Papa's style guide.\n\n### Snippets\n\nYou can use the following snippets in JavaScript.\n\n##### ngmodule\n```\n(function() {\n    'use strict';\n\n    angular\n        .module('${1:module}', [\n            '${2:dependencies}'\n        ]);\n})();\n```\n\n##### ngcontroller\n```\n(function() {\n    'use strict';\n\n    angular\n        .module('${1:module}')\n        .controller('${2:Controller}', ${2:Controller});\n\n    ${2:Controller}.$inject = ['${3:dependencies}'];\n\n    /* @ngInject */\n    function ${2:Controller}(${3:dependencies}) {\n        var vm = this;\n\n        activate();\n\n        function activate() {\n\n        }\n    }\n})();\n```\n\n##### ngfactory\n```\n(function() {\n    'use strict';\n\n    angular\n        .module('${1:module}')\n        .factory('${2:factory}', ${2:factory});\n\n    ${2:factory}.$inject = ['${3:dependencies}'];\n\n    /* @ngInject */\n    function ${2:factory}(${3:dependencies}) {\n        var service = {\n            ${4:function}: ${4:function}\n        };\n\n        return service;\n\n        function ${4:function}() {\n\n        }\n    }\n})();\n```\n\n##### ngcomponent\n```\n(function() {\n          'use strict';\n\n          angular\n              .module('${1:module}')\n              .component('${2:component}', ${2:component}());\n\n          /* @ngInject */\n          function ${2:component}() {\n              var component = {\n                  templateUrl: '${4:templateUrl}',\n                  controller: ${5:Controller},\n              };\n\n              return component;\n          }\n\n          ${5:Controller}.$inject = ['${6:dependencies}'];\n\n          /* @ngInject */\n          function ${5:Controller}(${6:dependencies}) {\n\n          }\n      })();\n```\n\n##### ngdirective\n```\n(function() {\n    'use strict';\n\n    angular\n        .module('${1:module}')\n        .directive('${2:directive}', ${2:directive});\n\n    /* @ngInject */\n    function ${2:directive}() {\n        var directive = {\n            restrict: '${3:EA}',\n            templateUrl: '${4:templateUrl}',\n            scope: {\n            },\n            link: linkFunc,\n            controller: ${5:Controller},\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        function linkFunc(scope, el, attr, ctrl) {\n\n        }\n    }\n\n    ${5:Controller}.$inject = ['${6:dependencies}'];\n\n    /* @ngInject */\n    function ${5:Controller}(${6:dependencies}) {\n        var vm = this;\n\n        activate();\n\n        function activate() {\n\n        }\n    }\n})();\n```\n\n##### ngservice\n```\n(function() {\n    'use strict';\n\n    angular\n        .module('${1:module}')\n        .service('${2:Service}', ${2:Service});\n\n    ${2:Service}.$inject = ['${3:dependencies}'];\n\n    /* @ngInject */\n    function ${2:Service}(${3:dependencies}) {\n        this.${4:function} = ${4:function};\n\n        function ${4:function}() {\n\n        }\n    }\n})();\n```\n\n##### ngfilter\n```\n(function() {\n    'use strict';\n\n    angular\n        .module('${1:module}')\n        .filter('${2:filter}', ${2:filter});\n\n    function ${2:filter}() {\n        return ${2:filter}Filter\n\n        function ${2:filter}Filter(${3:params}) {\n            return ${3:params};\n        }\n    }\n})();\n```\n\n##### ngroute\n```\n(function () {\n    'use strict';\n\n    angular\n        .module('${1:state}')\n        .config(${1:state}RouteConfig);\n\n    ${1:state}RouteConfig.$inject = ['$stateProvider'];\n\n    function ${1:state}RouteConfig($stateProvider) {\n\n        $stateProvider.state('${1:state}', {\n            abstract: true,\n            template: '<ui-view/>'\n        })${2}\n    }\n\n}());\n```\n\n##### ngstate\n```\n.state('${1:state}', {\n  url: '${2:url}',\n  controller: '${3:controller}',\n  controllerAs: '${4:nameController}',\n  templateUrl: '${5:path}'\n\n})\n```\n",
  "metadata": {
    "name": "thf-snippets",
    "main": "./lib/thf",
    "version": "0.1.0",
    "description": "A set of AngularJS snippets based on John Papa's style guide for THF (TOTVS HTML framework).",
    "repository": "https://github.com/lypborges/thf-snippets",
    "license": "MIT",
    "engines": {
      "atom": ">0.50.0"
    },
    "dependencies": {}
  }
}