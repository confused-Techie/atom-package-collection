{
  "name": "linter-js-tenx",
  "repository": {
    "type": "git",
    "url": "https://github.com/jeremyosborne/linter-js-tenx"
  },
  "downloads": 2766,
  "stargazers_count": 0,
  "releases": {
    "latest": "4.0.1"
  },
  "versions": {
    "4.0.1": {
      "name": "linter-js-tenx",
      "main": "./lib/init.js",
      "activationCommands": [],
      "version": "4.0.1",
      "description": "Linter plugin for Ten-X using JavaScript Standard Style.",
      "keywords": [
        "javascript",
        "standard",
        "linter"
      ],
      "author": {
        "name": "Ricardo Barros",
        "email": "ricardofbarros@hotmail.com"
      },
      "contributors": [
        {
          "name": "Jeremy Osborne",
          "email": "jeremywosborne@gmail.com"
        }
      ],
      "repository": "https://github.com/jeremyosborne/linter-js-tenx.git",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "babel-eslint": "^6.0.2",
        "eslint": "^2.7.0",
        "eslint-config-standard": "^5.1.0",
        "esprima": "^2.4.1",
        "esprima-fb": "^15001.1.0-dev-harmony-fb",
        "find-root": "^1.0.0",
        "lodash.intersection": "^4.1.2",
        "loophole": "^1.1.0",
        "minimatch": "^3.0.0",
        "pkg-config": "^1.1.0",
        "q": "^1.4.1",
        "standard": "6.0.8"
      },
      "devDependencies": {
        "mocha": "^2.5.3"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "standard": {
        "globals": [
          "atom"
        ]
      },
      "scripts": {
        "test": "mocha --reporter=spec --ui=bdd --recursive ./lib/*.test.js"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-js-tenx/versions/4.0.1/tarball"
      }
    },
    "4.0.0": {
      "name": "linter-js-tenx",
      "main": "./lib/init.js",
      "activationCommands": [],
      "version": "4.0.0",
      "description": "Linter plugin for Ten-X using JavaScript Standard Style.",
      "keywords": [
        "javascript",
        "standard",
        "linter"
      ],
      "author": {
        "name": "Ricardo Barros",
        "email": "ricardofbarros@hotmail.com"
      },
      "contributors": [
        {
          "name": "Jeremy Osborne",
          "email": "jeremywosborne@gmail.com"
        }
      ],
      "repository": "https://github.com/jeremyosborne/linter-js-tenx.git",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "babel-eslint": "^6.0.2",
        "eslint": "^2.7.0",
        "eslint-config-standard": "^5.1.0",
        "esprima": "^2.4.1",
        "esprima-fb": "^15001.1.0-dev-harmony-fb",
        "find-root": "^1.0.0",
        "lodash.intersection": "^4.1.2",
        "loophole": "^1.1.0",
        "minimatch": "^3.0.0",
        "pkg-config": "^1.1.0",
        "q": "^1.4.1",
        "standard": "6.0.8"
      },
      "devDependencies": {
        "mocha": "^2.5.3"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "standard": {
        "globals": [
          "atom"
        ]
      },
      "scripts": {
        "test": "mocha --reporter=spec --ui=bdd --recursive ./lib/*.test.js"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-js-tenx/versions/4.0.0/tarball"
      }
    },
    "3.2.10": {
      "name": "linter-js-tenx",
      "main": "./lib/init.js",
      "activationCommands": [],
      "version": "3.2.10",
      "description": "Linter plugin for Ten-X using JavaScript Standard Style.",
      "keywords": [
        "javascript",
        "standard",
        "linter"
      ],
      "author": {
        "name": "Ricardo Barros",
        "email": "ricardofbarros@hotmail.com"
      },
      "contributors": [
        {
          "name": "Jeremy Osborne",
          "email": "jeremywosborne@gmail.com"
        }
      ],
      "repository": "https://github.com/jeremyosborne/linter-js-tenx.git",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "babel-eslint": "^6.0.2",
        "eslint": "^2.7.0",
        "eslint-config-standard": "^5.1.0",
        "esprima": "^2.4.1",
        "esprima-fb": "^15001.1.0-dev-harmony-fb",
        "find-root": "^1.0.0",
        "lodash.intersection": "^4.1.2",
        "loophole": "^1.1.0",
        "minimatch": "^3.0.0",
        "pkg-config": "^1.1.0",
        "q": "^1.4.1",
        "standard": "6.0.8"
      },
      "standard": {
        "globals": [
          "atom"
        ]
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-js-tenx/versions/3.2.10/tarball"
      }
    },
    "3.2.9": {
      "name": "linter-js-tenx",
      "main": "./lib/init.js",
      "activationCommands": [],
      "version": "3.2.9",
      "description": "Linter plugin for Ten-X using JavaScript Standard Style.",
      "keywords": [
        "javascript",
        "standard",
        "linter"
      ],
      "author": {
        "name": "Ricardo Barros",
        "email": "ricardofbarros@hotmail.com"
      },
      "contributors": [
        {
          "name": "Jeremy Osborne",
          "email": "jeremywosborne@gmail.com"
        }
      ],
      "repository": "https://github.com/jeremyosborne/linter-js-tenx.git",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "babel-eslint": "^6.0.2",
        "eslint": "^2.7.0",
        "eslint-config-standard": "^5.1.0",
        "esprima": "^2.4.1",
        "esprima-fb": "^15001.1.0-dev-harmony-fb",
        "find-root": "^1.0.0",
        "lodash.intersection": "^4.1.2",
        "loophole": "^1.1.0",
        "minimatch": "^3.0.0",
        "pkg-config": "^1.1.0",
        "q": "^1.4.1",
        "standard": "6.0.8"
      },
      "standard": {
        "globals": [
          "atom"
        ]
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-js-tenx/versions/3.2.9/tarball"
      }
    },
    "3.2.7": {
      "name": "linter-js-tenx",
      "main": "./lib/init.js",
      "activationCommands": [],
      "version": "3.2.7",
      "description": "Linter plugin for Ten-X using JavaScript Standard Style.",
      "keywords": [
        "javascript",
        "standard",
        "linter"
      ],
      "author": {
        "name": "Ricardo Barros",
        "email": "ricardofbarros@hotmail.com"
      },
      "contributors": [
        {
          "name": "Jeremy Osborne",
          "email": "jeremywosborne@gmail.com"
        }
      ],
      "repository": "https://github.com/jeremyosborne/linter-js-tenx.git",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.0.1",
        "babel-eslint": "^6.0.2",
        "eslint": "^2.7.0",
        "eslint-config-standard": "^5.1.0",
        "esprima": "^2.4.1",
        "esprima-fb": "^15001.1.0-dev-harmony-fb",
        "find-root": "^1.0.0",
        "lodash.intersection": "^4.1.2",
        "loophole": "^1.1.0",
        "minimatch": "^3.0.0",
        "pkg-config": "^1.1.0",
        "q": "^1.4.1",
        "standard": "6.0.8"
      },
      "standard": {
        "globals": [
          "atom"
        ]
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-js-tenx/versions/3.2.7/tarball"
      }
    }
  },
  "readme": "# linter-js-tenx\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\nThis is a fork from [linter-js-standard](https://github.com/ricardofbarros/linter-js-standard), but specifically for the team I work with and designed to work with just the [js standard style](https://github.com/feross/standard).\n\n\n\n## Installation\n\n* Install [linter](https://github.com/AtomLinter/Linter).\n* Install this plugin through the package manager within the editor or from command line:\n\n```bash\napm install linter-js-tenx\n```\n\n\n\n## Features\n\n- Enforce `standard` style.\n- Optionally lint fenced JavaScript code in markdown files.\n- Optionally require a project to opt in to using this plugin. Saves you when you have to handle different projects, and some of them are `standard` style, and some of them are not.\n- Optionally use a `standard` parser `npm install`ed within a project. Allows different projects to use their own version of the `standard` linter when you don't want to use the one included with this plugin.\n- Configured on a per project basis via `package.json`:\n    - Ignore declared global variables (per regular `standard` configuration).\n    - Allow for custom parsers.\n    - Ignore linting of files based on glob patterns.\n\n\n\n## Plugin settings\n\n### lintMarkdownFiles (default: false)\n\nLint markdown fenced code blocks.\n\n### requireStandardInPackageJson (default: false)\n\nOnly lint if the project has opted in to `js-standard` by declaring standard as (1) a dependency in `dependencies` or `devDependencies`, or (2) declaring a top-level `standard` config block. Allows this plugin to exist along with other linter plugins and be off by default.\n\nNote: This will opt for the `package.json` located in the project folder.\n\n### preferProjectStandard (default: false)\n\nIf the parent project includes `standard` in `dependencies` or `devDependencies`, and it is `npm install`ed in the project `node_modules`, then use that version from the project. If not `npm install`ed, the plugin will log a warning to the atom console (should you wish to debug if the lint errors you are getting are unexpected) and will use the one included in this plugin.\n\n### showEslintRules (default: false)\n\nEnable/disable showing the id of the offended eslint rules.\n\n\n\n## Plugin configuration via `package.json`\n\nThe plugin will respect an extended `standard` configuration object located inside of your project's `package.json` file.\n\n### Global variable support\n\nTo have the linter not warn about undeclared variables when using global variables, add a `globals` section to package.json:\n\n```json\n{\n  \"standard\": {\n    \"globals\": [\n      \"var1\",\n      \"var2\"\n    ]\n  }\n}\n```\n\nSee:  https://github.com/feross/standard#i-use-a-library-that-pollutes-the-global-namespace-how-do-i-prevent-variable-is-not-defined-errors\n\n### Use a custom parser\n\nCustom parsers currently supported:\n- esprima\n- esprima-fb\n- babel-eslint\n\nTo use a custom parser, extend the `standard` object in your `package.json` file:\n\n```json\n{\n  \"standard\": {\n    \"parser\": \"esprima\"\n  }\n}\n```\n\n### Ignore files while linting\n\nTo opt to ignore files from linting, extend the `standard` object in your `package.json` file with a single glob expression:\n\n```json\n{\n  \"standard\": {\n    \"ignore\": \"*.spec.js\"\n  }\n}\n```\n\nor an array of glob expressions:\n\n```json\n{\n  \"standard\": {\n    \"ignore\": [\"*.spec.js\", \"*.legacy.js\"]\n  }\n}\n```\n\nIf the file open in the editor would have normally been linted, but the file path matches one of the glob patterns, it will not be linted.\n\nSee: https://github.com/isaacs/minimatch\n\n\n\n## License\n\nMIT\n\n\n\n## Rubber Duck Notes\n\nThis is the second atom plugin that I've worked on and have decided to make [rubber duck coding](https://en.wikipedia.org/wiki/Rubber_duck_debugging) notes to myself. I may remove these notes over time, but for now I'm leaving them here for myself and anyone who may want them.\n\nMy dev procedure for working on this plugin:\n\n```bash\n# These commands are mac-centric, but could be tweaked for other systems\n\n# Link this plugin to my atom app, run inside this directory\natom link\n\n# Launch atom in dev mode (from terminal)\natom -d\n\n# When in dev mode and I've made changes to the package, restart atom to\n# recognize the changes\nctrl-opt-cmd-L\n```\n",
  "metadata": {
    "name": "linter-js-tenx",
    "main": "./lib/init.js",
    "activationCommands": [],
    "version": "4.0.1",
    "description": "Linter plugin for Ten-X using JavaScript Standard Style.",
    "keywords": [
      "javascript",
      "standard",
      "linter"
    ],
    "author": {
      "name": "Ricardo Barros",
      "email": "ricardofbarros@hotmail.com"
    },
    "contributors": [
      {
        "name": "Jeremy Osborne",
        "email": "jeremywosborne@gmail.com"
      }
    ],
    "repository": "https://github.com/jeremyosborne/linter-js-tenx.git",
    "license": "MIT",
    "engines": {
      "atom": ">0.50.0"
    },
    "dependencies": {
      "atom-package-deps": "^4.0.1",
      "babel-eslint": "^6.0.2",
      "eslint": "^2.7.0",
      "eslint-config-standard": "^5.1.0",
      "esprima": "^2.4.1",
      "esprima-fb": "^15001.1.0-dev-harmony-fb",
      "find-root": "^1.0.0",
      "lodash.intersection": "^4.1.2",
      "loophole": "^1.1.0",
      "minimatch": "^3.0.0",
      "pkg-config": "^1.1.0",
      "q": "^1.4.1",
      "standard": "6.0.8"
    },
    "devDependencies": {
      "mocha": "^2.5.3"
    },
    "package-deps": [
      "linter"
    ],
    "providedServices": {
      "linter": {
        "versions": {
          "1.0.0": "provideLinter"
        }
      }
    },
    "standard": {
      "globals": [
        "atom"
      ]
    },
    "scripts": {
      "test": "mocha --reporter=spec --ui=bdd --recursive ./lib/*.test.js"
    }
  }
}