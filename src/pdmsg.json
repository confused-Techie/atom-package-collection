{
  "name": "pdmsg",
  "repository": {
    "type": "git",
    "url": "https://github.com/pndmix/atom-pdmsg"
  },
  "downloads": 357,
  "stargazers_count": 0,
  "releases": {
    "latest": "1.1.0"
  },
  "versions": {
    "1.1.0": {
      "name": "pdmsg",
      "main": "./lib/main",
      "version": "1.1.0",
      "description": "Dynamic patching environment with Pd Internal Messages",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-pdmsg",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "pdmsg:toggle"
      },
      "dependencies": {
        "atom-message-panel": "^1.3.1",
        "atom-package-deps": "^6.0.0",
        "tree-sitter": "^0.17.1",
        "tree-sitter-pdmsg": "^0.2.0"
      },
      "devDependencies": {
        "@types/atom": "^1.40.5",
        "@types/node": "^14.14.10",
        "@typescript-eslint/eslint-plugin": "^4.9.0",
        "@typescript-eslint/parser": "^4.9.0",
        "eslint": "^7.14.0",
        "eslint-config-prettier": "^6.15.0",
        "eslint-plugin-prettier": "^3.1.4",
        "prettier": "^2.2.1",
        "typescript": "^4.1.2"
      },
      "scripts": {
        "build": "tsc",
        "watch": "tsc -w",
        "lint": "eslint src/**/*.ts && prettier -c **/*.{ts,less,json,yml}",
        "format": "eslint --fix src/**/*.ts && prettier --write **/*.{ts,less,json,yml}"
      },
      "package-deps": [
        "language-pdmsg"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/1.1.0/tarball"
      }
    },
    "1.0.0": {
      "name": "pdmsg",
      "main": "./lib/main",
      "version": "1.0.0",
      "description": "Dynamic patching environment with Pd Internal Messages",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-pdmsg",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "pdmsg:toggle"
      },
      "dependencies": {
        "atom-message-panel": "^1.3.1",
        "atom-package-deps": "^7.0.3",
        "tree-sitter": "^0.17.1",
        "tree-sitter-pdmsg": "^0.1.2"
      },
      "devDependencies": {
        "@types/atom": "^1.40.5",
        "@types/node": "^14.14.10",
        "@typescript-eslint/eslint-plugin": "^4.9.0",
        "@typescript-eslint/parser": "^4.9.0",
        "eslint": "^7.14.0",
        "eslint-config-prettier": "^6.15.0",
        "eslint-plugin-prettier": "^3.1.4",
        "prettier": "^2.2.1",
        "typescript": "^4.1.2"
      },
      "scripts": {
        "build": "tsc",
        "watch": "tsc -w",
        "lint": "eslint src/**/*.ts && prettier -c **/*.{ts,less,json,yml}",
        "format": "eslint --fix src/**/*.ts && prettier --write **/*.{ts,less,json,yml}"
      },
      "package-deps": [
        "language-pdmsg"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/1.0.0/tarball"
      }
    },
    "0.4.3": {
      "name": "pdmsg",
      "main": "./lib/main",
      "version": "0.4.3",
      "description": "Rampcode on Atom.",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-rampcode",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "atom-rampcode:toggle"
      },
      "dependencies": {
        "atom-message-panel": "^1.3.1",
        "atom-package-deps": "^7.0.3",
        "tree-sitter": "^0.17.1",
        "tree-sitter-pdmsg": "^0.1.2"
      },
      "devDependencies": {
        "@types/atom": "^1.40.5",
        "@types/node": "^14.14.10",
        "@typescript-eslint/eslint-plugin": "^4.9.0",
        "@typescript-eslint/parser": "^4.9.0",
        "eslint": "^7.14.0",
        "eslint-config-prettier": "^6.15.0",
        "eslint-plugin-prettier": "^3.1.4",
        "prettier": "^2.2.1",
        "typescript": "^4.1.2"
      },
      "scripts": {
        "build": "tsc",
        "watch": "tsc -w",
        "lint": "eslint src/**/*.ts && prettier -c **/*.{ts,less,json,yml}",
        "format": "eslint --fix src/**/*.ts && prettier --write **/*.{ts,less,json,yml}"
      },
      "package-deps": [
        "language-pdmsg"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/0.4.3/tarball"
      }
    },
    "0.4.2": {
      "name": "atom-rampcode",
      "main": "./lib/atom-rampcode",
      "version": "0.4.2",
      "description": "Rampcode on Atom.",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-rampcode",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "atom-rampcode:toggle"
      },
      "dependencies": {
        "atom-package-deps": "^5.1.0"
      },
      "package-deps": [
        "language-rampcode"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/0.4.2/tarball"
      }
    },
    "0.4.1": {
      "name": "atom-rampcode",
      "main": "./lib/atom-rampcode",
      "version": "0.4.1",
      "description": "Rampcode on Atom.",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-rampcode",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "atom-rampcode:toggle"
      },
      "dependencies": {
        "atom-package-deps": "^5.1.0"
      },
      "package-deps": [
        "language-rampcode"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/0.4.1/tarball"
      }
    },
    "0.4.0": {
      "name": "atom-rampcode",
      "main": "./lib/atom-rampcode",
      "version": "0.4.0",
      "description": "Rampcode on Atom.",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-rampcode",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "atom-rampcode:toggle"
      },
      "dependencies": {
        "atom-package-deps": "^5.1.0"
      },
      "package-deps": [
        "language-rampcode"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/0.4.0/tarball"
      }
    },
    "0.3.0": {
      "name": "atom-rampcode",
      "main": "./lib/atom-rampcode",
      "version": "0.3.0",
      "description": "Rampcode on Atom.",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-rampcode",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "atom-rampcode:toggle"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/0.3.0/tarball"
      }
    },
    "0.2.2": {
      "name": "atom-rampcode",
      "main": "./lib/atom-rampcode",
      "version": "0.2.2",
      "description": "Rampcode on Atom.",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-rampcode",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "atom-rampcode:toggle"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/0.2.2/tarball"
      }
    },
    "0.2.1": {
      "name": "atom-rampcode",
      "main": "./lib/atom-rampcode",
      "version": "0.2.1",
      "description": "Rampcode on Atom.",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-rampcode",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "atom-rampcode:toggle"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/0.2.1/tarball"
      }
    },
    "0.2.0": {
      "name": "atom-rampcode",
      "main": "./lib/atom-rampcode",
      "version": "0.2.0",
      "description": "Rampcode on Atom.",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-rampcode",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "atom-rampcode:toggle"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/0.2.0/tarball"
      }
    },
    "0.1.0": {
      "name": "atom-rampcode",
      "main": "./lib/atom-rampcode",
      "version": "0.1.0",
      "description": "Rampcode on Atom.",
      "keywords": [
        "livecoding",
        "puredata"
      ],
      "repository": "https://github.com/pndmix/atom-rampcode",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "activationCommands": {
        "atom-workspace": "atom-rampcode:toggle"
      },
      "dependencies": {
        "atom-message-panel": "^1.3.0",
        "atom-package-deps": "^4.6.2"
      },
      "package-deps": [
        "language-rampcode"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/pdmsg/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# pdmsg\n[![apm version](https://img.shields.io/apm/v/pdmsg.svg)](https://atom.io/packages/pdmsg)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\nDynamic patching environment with Pd Internal Messages. This package provides syntax highlighting, snippets and sending messages to Pd via pdsend when you write pdmsg code in Atom.\n\n#### Pd Internal Messages\nThese messages can be useful if you are running pd without a gui, or building patches dynamically. For more information, please see below.\n- <https://puredata.info/community/pdwiki/PdInternalMessages>\n- <https://puredata.info/docs/tutorials/TipsAndTricks#undocumented-pd-internal-messages>\n- <https://puredata.info/docs/developer/PdFileFormat>\n\n## Install\nYou can install in Atom: `File > Settings > Packages > pdmsg`  \nOr, using `apm`\n```\n$ apm install pdmsg\n```\n\n#### Unable to install\nIf you see an error like below, you need to install Python and C/C++ compiler toolchain, for [node-gyp](https://github.com/nodejs/node-gyp) depending on your OS.\n```\ngyp ERR! build error\n```\n\n##### On Windows\n- Install [Node.js](https://nodejs.org/en/)\n- Launch PS (or CMD) as admin and run: `npm install --global windows-build-tools`  \n  Details: [windows-build-tools](https://github.com/felixrieseberg/windows-build-tools)\n\n##### On the others\n- Please see the [node-gyp#installation](https://github.com/nodejs/node-gyp#installation)\n\n## Settings\nYou will need to have [Pure Data](https://puredata.info/downloads/pure-data) (Pd) and pdsend which is a CLI for sending messages to Pd, installed. If you don't have them installed, please install Pd only (Pd includes pdsend).  \n\n#### Package Settings\nYou can change settings in Atom: `File > Settings > Packages > pdmsg`\n- `Pdsend path`: Leave empty to use pdsend from the PATH\n\n## Usage\n### Key bindings\n| Binding | Command | Description\n| --- | --- | --- |\n| ctrl-alt-p | Toggle | Start / Stop pdmsg |\n| shift-enter | Evaluate line | Run a line of code |\n| ctrl-enter | Evaluate block | Run a block of code |\n\n### Execution flow\nBuilding a pd patch:\n1. Create a new canvas\n1. Put a netreceive object: `[netreceive <port> <udp> <old>]`\n1. Put a subpatch object (a patching target): `[pd <name>]`\n\nRunning pdmsg:\n1. Create a file ending with `.pdmsg`\n1. Enable pdmsg by running `Pdmsg:toggle`: `Packages > pdmsg > Toggle`\n1. Edit your pdmsg code\n1. Press `shift-enter` or `ctrl-enter` to run this\n\n### Examples\nCreating an instance of the pdmsg's connection allows you to communicate directly with Pd, i.e. `Cn(port, host=localhost)`. It is used with the insertion operator, and then this operator inserts a message which is defined as a tuple.\n```c\nCn(3001, localhost) << (pd-ex, clear) // Send 'pd-ex clear;' to port 3001 on the local.\n```\nSend multiple messages by using the addition operator.\n```c\nCn(3001, localhost) << (pd-ex, clear) + (pd, dsp, 1) // Send 'pd-ex clear;pd dsp 1;'\n```\n\n##### Put a object\n```c\nCn(3001) << (pd-ex, obj, 10, 10, osc~, 440)\n```\n\n##### Put a message\n```c\nCn(3001) << (pd-ex, msg, 10, 50, 220)\n```\n\n##### Put a number\n```c\nCn(3001) << (pd-ex, floatatom, 10, 100)\n```\n\n##### Put a symbol\n```c\nCn(3001) << (pd-ex, symbolatom, 10, 130)\n```\n\n##### Put a comment\n```c\nCn(3001) << (pd-ex, text, 100, 10, \"This is a comment\")\n```\n\n##### Build a sine wave generator\n```c\nCn(3001) << (pd-ex, clear) // Clear a canvas\n  + (pd-ex, obj, 10, 10, osc~, 440) + (pd-ex, obj, 10, 60, dac~) // Put objects\n  + (pd-ex, connect, 0, 0, 1, 0) + (pd-ex, connect, 0, 0, 1, 1) // Connect them\n  + (pd, dsp, 1) // Turn on audio\n```\n",
  "metadata": {
    "name": "pdmsg",
    "main": "./lib/main",
    "version": "1.1.0",
    "description": "Dynamic patching environment with Pd Internal Messages",
    "keywords": [
      "livecoding",
      "puredata"
    ],
    "repository": "https://github.com/pndmix/atom-pdmsg",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "activationCommands": {
      "atom-workspace": "pdmsg:toggle"
    },
    "dependencies": {
      "atom-message-panel": "^1.3.1",
      "atom-package-deps": "^6.0.0",
      "tree-sitter": "^0.17.1",
      "tree-sitter-pdmsg": "^0.2.0"
    },
    "devDependencies": {
      "@types/atom": "^1.40.5",
      "@types/node": "^14.14.10",
      "@typescript-eslint/eslint-plugin": "^4.9.0",
      "@typescript-eslint/parser": "^4.9.0",
      "eslint": "^7.14.0",
      "eslint-config-prettier": "^6.15.0",
      "eslint-plugin-prettier": "^3.1.4",
      "prettier": "^2.2.1",
      "typescript": "^4.1.2"
    },
    "scripts": {
      "build": "tsc",
      "watch": "tsc -w",
      "lint": "eslint src/**/*.ts && prettier -c **/*.{ts,less,json,yml}",
      "format": "eslint --fix src/**/*.ts && prettier --write **/*.{ts,less,json,yml}"
    },
    "package-deps": [
      "language-pdmsg"
    ]
  }
}