{
  "name": "linter-emperlc",
  "repository": {
    "type": "git",
    "url": "https://github.com/RYTong/linter-emperlc"
  },
  "downloads": 139,
  "stargazers_count": 0,
  "releases": {
    "latest": "0.3.0"
  },
  "versions": {
    "0.3.0": {
      "name": "linter-emperlc",
      "main": "./lib/linter-emperlc",
      "version": "0.3.0",
      "description": "A short description of your package",
      "keywords": [],
      "repository": "https://github.com/RYTong/linter-emperlc",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.0.1",
        "tmp": "^0.0.33",
        "fs-plus": "*"
      },
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "erlc"
        },
        "includeDirs": {
          "type": "array",
          "description": "A comma separated list of paths included by erlc with the -I flag",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "pa": {
          "type": "array",
          "description": "A comma separated list of paths added with the -pa flag",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-emperlc/versions/0.3.0/tarball"
      }
    }
  },
  "readme": "\n\n### Plugin installation\n```\n$ apm install linter-emperlc\n```\n\n## Settings\nAll of linter-erlc's settings are available from within Atom's settings menu.\nIf you prefer to manually edit the configuration file the following settings\nare available:\n\n*   `executablePath`: Defaults to `erlc`, allowing the `$PATH` to resolve the\n    correct location. If you need to override this specify the full path to\n    `erlc`.\n\n*   `includeDirs`: You can add a comma separated list of paths that need to be included by `erlc`. You can add relative paths to the project root directory. The project must be in OTP style for it to resolve the project root. For example: `includes, other/paths`.\n\n*   `pa`: A comma separated list of paths added with the -pa flag. For example `~/.ebin, /opt/ebins`\n",
  "metadata": {
    "name": "linter-emperlc",
    "main": "./lib/linter-emperlc",
    "version": "0.3.0",
    "description": "A short description of your package",
    "keywords": [],
    "repository": "https://github.com/RYTong/linter-emperlc",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {
      "atom-linter": "^10.0.0",
      "atom-package-deps": "^4.0.1",
      "tmp": "^0.0.33",
      "fs-plus": "*"
    },
    "configSchema": {
      "executablePath": {
        "type": "string",
        "default": "erlc"
      },
      "includeDirs": {
        "type": "array",
        "description": "A comma separated list of paths included by erlc with the -I flag",
        "default": [],
        "items": {
          "type": "string"
        }
      },
      "pa": {
        "type": "array",
        "description": "A comma separated list of paths added with the -pa flag",
        "default": [],
        "items": {
          "type": "string"
        }
      }
    },
    "providedServices": {
      "linter": {
        "versions": {
          "2.0.0": "provideLinter"
        }
      }
    }
  }
}