{
  "name": "symbols-view-plus",
  "repository": {
    "type": "git",
    "url": "https://github.com/aidistan/atom-symbols-view-plus"
  },
  "downloads": 6672,
  "stargazers_count": 7,
  "releases": {
    "latest": "0.118.2-plus.3"
  },
  "versions": {
    "0.118.2-plus.3": {
      "name": "symbols-view-plus",
      "version": "0.118.2-plus.3",
      "description": "An alternative to atom/symbols-view",
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "keywors": [
        "symbols",
        "tags",
        "taglist"
      ],
      "license": "MIT",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "main": "./lib/main",
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeBusySignal"
          }
        }
      },
      "dependencies": {
        "async": "^0.2.6",
        "atom-select-list": "^0.7.0",
        "ctags": "^3.0.0",
        "fs-plus": "^3.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "^1.8.2",
        "temp": "^0.8.3",
        "underscore-plus": "^1.6.6"
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Dock Item (new feature from v1.17.x)",
              "enum": [
                "Dock Item (new feature from v1.17.x)",
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "devDependencies": {
        "babel-eslint": "^6.1.2",
        "eslint": "^3.12.2",
        "eslint-config-fbjs": "^1.1.1",
        "eslint-plugin-babel": "^3.3.0",
        "eslint-plugin-flowtype": "^2.29.1",
        "eslint-plugin-jasmine": "^2.2.0",
        "eslint-plugin-prefer-object-spread": "^1.1.0",
        "eslint-plugin-react": "^5.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.118.2-plus.3/tarball"
      }
    },
    "0.118.2-plus.2": {
      "name": "symbols-view-plus",
      "version": "0.118.2-plus.2",
      "description": "An alternative to atom/symbols-view",
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "keywors": [
        "symbols",
        "tags",
        "taglist"
      ],
      "license": "MIT",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "main": "./lib/main",
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeBusySignal"
          }
        }
      },
      "dependencies": {
        "async": "^0.2.6",
        "atom-select-list": "^0.7.0",
        "ctags": "^3.0.0",
        "fs-plus": "^3.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "^1.8.2",
        "temp": "^0.8.3",
        "underscore-plus": "^1.6.6"
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Dock Item (new feature from v1.17.x)",
              "enum": [
                "Dock Item (new feature from v1.17.x)",
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "devDependencies": {
        "babel-eslint": "^6.1.2",
        "eslint": "^3.12.2",
        "eslint-config-fbjs": "^1.1.1",
        "eslint-plugin-babel": "^3.3.0",
        "eslint-plugin-flowtype": "^2.29.1",
        "eslint-plugin-jasmine": "^2.2.0",
        "eslint-plugin-prefer-object-spread": "^1.1.0",
        "eslint-plugin-react": "^5.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.118.2-plus.2/tarball"
      }
    },
    "0.118.2-plus.1": {
      "name": "symbols-view-plus",
      "version": "0.118.2-plus.1",
      "description": "An alternative to atom/symbols-view",
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "keywors": [
        "symbols",
        "tags",
        "taglist"
      ],
      "license": "MIT",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "main": "./lib/main",
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeBusySignal"
          }
        }
      },
      "dependencies": {
        "async": "^0.2.6",
        "atom-select-list": "^0.7.0",
        "ctags": "^3.0.0",
        "fs-plus": "^3.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "^1.8.2",
        "temp": "^0.8.3",
        "underscore-plus": "^1.6.6"
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Dock Item (new feature from v1.17.x)",
              "enum": [
                "Dock Item (new feature from v1.17.x)",
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "devDependencies": {
        "babel-eslint": "^6.1.2",
        "eslint": "^3.12.2",
        "eslint-config-fbjs": "^1.1.1",
        "eslint-plugin-babel": "^3.3.0",
        "eslint-plugin-flowtype": "^2.29.1",
        "eslint-plugin-jasmine": "^2.2.0",
        "eslint-plugin-prefer-object-spread": "^1.1.0",
        "eslint-plugin-react": "^5.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.118.2-plus.1/tarball"
      }
    },
    "0.117.0-plus.1": {
      "name": "symbols-view-plus",
      "version": "0.117.0-plus.1",
      "description": "An alternative to atom/symbols-view",
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "keywors": [
        "symbols",
        "tags",
        "taglist"
      ],
      "license": "MIT",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "main": "./lib/main",
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeBusySignal"
          }
        }
      },
      "dependencies": {
        "async": "^0.2.6",
        "atom-select-list": "^0.1.0",
        "ctags": "^3.0.0",
        "fs-plus": "^3.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "^1.8.2",
        "temp": "^0.8.3",
        "underscore-plus": "^1.6.6"
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Dock Item (new feature from v1.17.x)",
              "enum": [
                "Dock Item (new feature from v1.17.x)",
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "devDependencies": {
        "babel-eslint": "^6.1.2",
        "eslint": "^3.12.2",
        "eslint-config-fbjs": "^1.1.1",
        "eslint-plugin-babel": "^3.3.0",
        "eslint-plugin-flowtype": "^2.29.1",
        "eslint-plugin-jasmine": "^2.2.0",
        "eslint-plugin-prefer-object-spread": "^1.1.0",
        "eslint-plugin-react": "^5.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.117.0-plus.1/tarball"
      }
    },
    "0.117.0-plus": {
      "name": "symbols-view-plus",
      "version": "0.117.0-plus",
      "description": "An alternative to atom/symbols-view",
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "keywors": [
        "symbols",
        "tags",
        "taglist"
      ],
      "license": "MIT",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "main": "./lib/main",
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeBusySignal"
          }
        }
      },
      "dependencies": {
        "async": "^0.2.6",
        "atom-select-list": "^0.1.0",
        "ctags": "^3.0.0",
        "fs-plus": "^3.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "^1.8.2",
        "temp": "^0.8.3",
        "underscore-plus": "^1.6.6"
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Dock Item (new feature from v1.17.x)",
              "enum": [
                "Dock Item (new feature from v1.17.x)",
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "devDependencies": {
        "babel-eslint": "^6.1.2",
        "eslint": "^3.12.2",
        "eslint-config-fbjs": "^1.1.1",
        "eslint-plugin-babel": "^3.3.0",
        "eslint-plugin-flowtype": "^2.29.1",
        "eslint-plugin-jasmine": "^2.2.0",
        "eslint-plugin-prefer-object-spread": "^1.1.0",
        "eslint-plugin-react": "^5.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.117.0-plus/tarball"
      }
    },
    "0.116.1-plus.4": {
      "name": "symbols-view-plus",
      "version": "0.116.1-plus.4",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeBusySignal"
          }
        }
      },
      "dependencies": {
        "async": "^0.2.6",
        "atom-select-list": "^0.1.0",
        "ctags": "^3.0.0",
        "fs-plus": "^3.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "^1.8.2",
        "temp": "^0.8.3",
        "underscore-plus": "^1.6.6"
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Dock Item (new feature from v1.17.x)",
              "enum": [
                "Dock Item (new feature from v1.17.x)",
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "babel-eslint": "^6.1.2",
        "eslint": "^3.12.2",
        "eslint-config-fbjs": "^1.1.1",
        "eslint-plugin-babel": "^3.3.0",
        "eslint-plugin-flowtype": "^2.29.1",
        "eslint-plugin-jasmine": "^2.2.0",
        "eslint-plugin-prefer-object-spread": "^1.1.0",
        "eslint-plugin-react": "^5.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.116.1-plus.4/tarball"
      }
    },
    "0.116.1-plus.3": {
      "name": "symbols-view-plus",
      "version": "0.116.1-plus.3",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "dependencies": {
        "async": "^0.2.6",
        "atom-select-list": "^0.1.0",
        "ctags": "^3.0.0",
        "fs-plus": "^3.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "^1.8.2",
        "temp": "^0.8.3",
        "underscore-plus": "^1.6.6"
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Dock Item (new feature from v1.17.x)",
              "enum": [
                "Dock Item (new feature from v1.17.x)",
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "babel-eslint": "^6.1.2",
        "eslint": "^3.12.2",
        "eslint-config-fbjs": "^1.1.1",
        "eslint-plugin-babel": "^3.3.0",
        "eslint-plugin-flowtype": "^2.29.1",
        "eslint-plugin-jasmine": "^2.2.0",
        "eslint-plugin-prefer-object-spread": "^1.1.0",
        "eslint-plugin-react": "^5.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.116.1-plus.3/tarball"
      }
    },
    "0.116.1-plus.2": {
      "name": "symbols-view-plus",
      "version": "0.116.1-plus.2",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "dependencies": {
        "async": "^0.2.6",
        "atom-select-list": "^0.1.0",
        "ctags": "^3.0.0",
        "fs-plus": "^3.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "^1.8.2",
        "temp": "^0.8.3",
        "underscore-plus": "^1.6.6"
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Dock Item (new feature from v1.17.x)",
              "enum": [
                "Dock Item (new feature from v1.17.x)",
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "babel-eslint": "^6.1.2",
        "eslint": "^3.12.2",
        "eslint-config-fbjs": "^1.1.1",
        "eslint-plugin-babel": "^3.3.0",
        "eslint-plugin-flowtype": "^2.29.1",
        "eslint-plugin-jasmine": "^2.2.0",
        "eslint-plugin-prefer-object-spread": "^1.1.0",
        "eslint-plugin-react": "^5.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.116.1-plus.2/tarball"
      }
    },
    "0.116.1-plus.1": {
      "name": "symbols-view-plus",
      "version": "0.116.1-plus.1",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "dependencies": {
        "async": "^0.2.6",
        "atom-select-list": "^0.1.0",
        "ctags": "^3.0.0",
        "fs-plus": "^3.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "^1.8.2",
        "temp": "^0.8.3",
        "underscore-plus": "^1.6.6"
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Dock Item (new feature from v1.17.x)",
              "enum": [
                "Dock Item (new feature from v1.17.x)",
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "babel-eslint": "^6.1.2",
        "eslint": "^3.12.2",
        "eslint-config-fbjs": "^1.1.1",
        "eslint-plugin-babel": "^3.3.0",
        "eslint-plugin-flowtype": "^2.29.1",
        "eslint-plugin-jasmine": "^2.2.0",
        "eslint-plugin-prefer-object-spread": "^1.1.0",
        "eslint-plugin-react": "^5.2.2"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.116.1-plus.1/tarball"
      }
    },
    "0.113.2-plus.4": {
      "name": "symbols-view-plus",
      "version": "0.113.2-plus.4",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.6",
        "atom-space-pen-views": "^2.0.0",
        "ctags": "^3.0.0",
        "fs-plus": "^2.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "1.4.2",
        "temp": "~0.8.1",
        "underscore-plus": "~1.6.6"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "provideArgumentsForAutocomplete": {
              "title": "Provide Arguments For Autocomplete (Experimental)",
              "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
              "order": 6,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 7,
              "type": "string",
              "default": "Right Panel (like 7ute/symbols-list)",
              "enum": [
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "coffeelint": "^1.9.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.113.2-plus.4/tarball"
      }
    },
    "0.113.2-plus.3": {
      "name": "symbols-view-plus",
      "version": "0.113.2-plus.3",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.6",
        "atom-space-pen-views": "^2.0.0",
        "ctags": "^3.0.0",
        "fs-plus": "^2.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "1.4.2",
        "temp": "~0.8.1",
        "underscore-plus": "~1.6.6"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 6,
              "type": "string",
              "default": "Right Panel (like 7ute/symbols-list)",
              "enum": [
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "coffeelint": "^1.9.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.113.2-plus.3/tarball"
      }
    },
    "0.113.2-plus.2": {
      "name": "symbols-view-plus",
      "version": "0.113.2-plus.2",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.6",
        "atom-space-pen-views": "^2.0.0",
        "ctags": "^3.0.0",
        "fs-plus": "^2.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "1.4.2",
        "temp": "~0.8.1",
        "underscore-plus": "~1.6.6"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 6,
              "type": "string",
              "default": "Right Panel (like 7ute/symbols-list)",
              "enum": [
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "coffeelint": "^1.9.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.113.2-plus.2/tarball"
      }
    },
    "0.113.2-plus.1": {
      "name": "symbols-view-plus",
      "version": "0.113.2-plus.1",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.6",
        "atom-space-pen-views": "^2.0.0",
        "ctags": "^3.0.0",
        "fs-plus": "^2.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "1.4.2",
        "temp": "~0.8.1",
        "underscore-plus": "~1.6.6"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 6,
              "type": "string",
              "default": "Right Panel (like 7ute/symbols-list)",
              "enum": [
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "coffeelint": "^1.9.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.113.2-plus.1/tarball"
      }
    },
    "0.113.1-plus.5": {
      "name": "symbols-view-plus",
      "version": "0.113.1-plus.5",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.6",
        "atom-space-pen-views": "^2.0.0",
        "ctags": "^3.0.0",
        "fs-plus": "^2.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "1.4.2",
        "temp": "~0.8.1",
        "underscore-plus": "~1.6.6"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 6,
              "type": "string",
              "default": "Right Panel (like 7ute/symbols-list)",
              "enum": [
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "coffeelint": "^1.9.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.113.1-plus.5/tarball"
      }
    },
    "0.113.1-plus.4": {
      "name": "symbols-view-plus",
      "version": "0.113.1-plus.4",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.6",
        "atom-space-pen-views": "^2.0.0",
        "ctags": "^3.0.0",
        "fs-plus": "^2.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "1.4.2",
        "temp": "~0.8.1",
        "underscore-plus": "~1.6.6"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 6,
              "type": "string",
              "default": "Right Panel (like 7ute/symbols-list)",
              "enum": [
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "coffeelint": "^1.9.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.113.1-plus.4/tarball"
      }
    },
    "0.113.1-plus.3": {
      "name": "symbols-view-plus",
      "version": "0.113.1-plus.3",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.6",
        "atom-space-pen-views": "^2.0.0",
        "ctags": "^3.0.0",
        "fs-plus": "^2.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "1.4.2",
        "temp": "~0.8.1",
        "underscore-plus": "~1.6.6"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArguments": {
              "title": "Extra Command Arguments For CTAGS",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
              "order": 1,
              "type": "string",
              "default": ""
            },
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 2,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 3,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 4,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 5,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 6,
              "type": "string",
              "default": "Right Panel (like 7ute/symbols-list)",
              "enum": [
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "coffeelint": "^1.9.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.113.1-plus.3/tarball"
      }
    },
    "0.113.1-plus.2": {
      "name": "symbols-view-plus",
      "version": "0.113.1-plus.2",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.6",
        "atom-space-pen-views": "^2.0.0",
        "ctags": "^3.0.0",
        "fs-plus": "^2.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "1.4.2",
        "temp": "~0.8.1",
        "underscore-plus": "~1.6.6"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "configSchema": {
        "originalConfigurations": {
          "title": "Original Configurations",
          "type": "object",
          "properties": {
            "useEditorGrammarAsCtagsLanguage": {
              "title": "Use Editor Grammar As Ctags Language",
              "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
              "type": "boolean",
              "default": true
            },
            "quickJumpToFileSymbol": {
              "title": "Quick Jump To File Symbol",
              "description": "Automatically visit selected file-symbols",
              "type": "boolean",
              "default": true
            }
          }
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 1,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 2,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 3,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 4,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 5,
              "type": "string",
              "default": "Right Panel (like 7ute/symbols-list)",
              "enum": [
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "coffeelint": "^1.9.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.113.1-plus.2/tarball"
      }
    },
    "0.113.1-plus.1": {
      "name": "symbols-view-plus",
      "version": "0.113.1-plus.1",
      "main": "./lib/main",
      "description": "An alternative to atom/symbols-view",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.6",
        "atom-space-pen-views": "^2.0.0",
        "ctags": "^3.0.0",
        "fs-plus": "^2.0.0",
        "fuzzaldrin": "^2.1.0",
        "humanize-plus": "1.4.2",
        "temp": "~0.8.1",
        "underscore-plus": "~1.6.6"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        }
      },
      "configSchema": {
        "useEditorGrammarAsCtagsLanguage": {
          "default": true,
          "type": "boolean",
          "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension."
        },
        "quickJumpToFileSymbol": {
          "default": true,
          "type": "boolean",
          "description": "Automatically visit selected file-symbols"
        },
        "plusConfigurations": {
          "title": "Plus Configurations",
          "type": "object",
          "properties": {
            "extraCommandArgumentsWhenGeneratingProjectSymbols": {
              "title": "Extra Command Arguments When Generating Project Symbols",
              "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
              "order": 1,
              "type": "string",
              "default": "--exclude=@.gitignore"
            },
            "updateProjectTagsAfterTogglingFileSymbols": {
              "title": "Update Project Tags After Toggling File Symbols",
              "order": 2,
              "type": "boolean",
              "default": "true"
            },
            "updateProjectTagsOnFileChange": {
              "title": "Update Project Tags On File Change",
              "order": 3,
              "type": "boolean",
              "default": "false"
            },
            "provideServiceForAutocomplete": {
              "title": "Provide Service For Autocomplete",
              "order": 4,
              "type": "boolean",
              "default": "true"
            },
            "symbolsViewTheme": {
              "title": "Symbols View Theme",
              "order": 5,
              "type": "string",
              "default": "Right Panel (like 7ute/symbols-list)",
              "enum": [
                "Right Panel (like 7ute/symbols-list)",
                "Modal Panel (like atom/symbols-view)"
              ]
            }
          }
        }
      },
      "repository": "https://github.com/aidistan/atom-symbols-view-plus",
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "devDependencies": {
        "coffeelint": "^1.9.7"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/symbols-view-plus/versions/0.113.1-plus.1/tarball"
      }
    }
  },
  "readme": "# Symbols View Plus package\n\n[![macOS Build Status](https://travis-ci.org/aidistan/atom-symbols-view-plus.svg?branch=master)](https://travis-ci.org/aidistan/atom-symbols-view-plus)\n[![Windows Build status](https://ci.appveyor.com/api/projects/status/xwvan82oo42t6qmu?svg=true)](https://ci.appveyor.com/project/aidistan/atom-symbols-view-plus)\n[![Dependency Status](https://david-dm.org/aidistan/atom-symbols-view-plus.svg)](https://david-dm.org/aidistan/atom-symbols-view-plus)\n\nAn alternative to [atom/symbols-view](https://atom.io/packages/symbols-view)\n\n## Features\n\n- Generate project symbols\n  - Provide a command to generate the tag file for the whole project\n  - Update the project tag file incrementally on file save\n  - Allow user to add extra ctag command arguments\n- Provide service for autocomplete-plus\n  - Project symbols are provided for autocomplete-plus automatically\n- Provide extra themes of symbols view\n  - Dock item theme\n  - Right panel theme\n\n## Installation\n\nInstall this package in Atom or using `apm install`, and read [this wiki page](https://github.com/aidistan/atom-symbols-view-plus/wiki/FAQ:-unable-to-install-on-Windows,-Linux-or-MacOS) when encountering errors.\n\n## Usage\n\nBasically the same as [atom/symbols-view](https://atom.io/packages/symbols-view), refer to [the wiki](https://github.com/aidistan/atom-symbols-view-plus/wiki) for advanced usage and faqs.\n\n## Screenshots\n\n### Theme: dock item\n![](https://raw.githubusercontent.com/aidistan/atom-symbols-view-plus/master/screenshots/theme-dock-item.png)\n\n### Theme: right panel\n![](https://raw.githubusercontent.com/aidistan/atom-symbols-view-plus/master/screenshots/theme-right-panel.png)\n\n## License\n\n[The MIT License](https://github.com/aidistan/atom-symbols-view-plus/blob/master/LICENSE.md)\n\n## References\n\n- [atom/symbols-view](https://github.com/atom/symbols-view) : Jump to symbols in Atom\n- [atom/autocomplete-plus](https://github.com/atom/autocomplete-plus) : View and insert possible completions in the editor while typing\n- [yongkangchen/atom-ctags](https://github.com/yongkangchen/atom-ctags) : Better autocomplete for atom, using ctags\n- [7ute/symbols-list](https://github.com/7ute/symbols-list) : An alternate symbol list sidebar for Atom.io text editor\n- [xndcn/symbols-tree-view](https://github.com/xndcn/symbols-tree-view) : A symbols view like taglist for Atom.io\n",
  "metadata": {
    "name": "symbols-view-plus",
    "version": "0.118.2-plus.3",
    "description": "An alternative to atom/symbols-view",
    "repository": "https://github.com/aidistan/atom-symbols-view-plus",
    "keywors": [
      "symbols",
      "tags",
      "taglist"
    ],
    "license": "MIT",
    "engines": {
      "atom": ">=1.7.0 <2.0.0"
    },
    "main": "./lib/main",
    "providedServices": {
      "autocomplete.provider": {
        "versions": {
          "2.0.0": "provideAutocomplete"
        }
      }
    },
    "consumedServices": {
      "busy-signal": {
        "versions": {
          "1.0.0": "consumeBusySignal"
        }
      }
    },
    "dependencies": {
      "async": "^0.2.6",
      "atom-select-list": "^0.7.0",
      "ctags": "^3.0.0",
      "fs-plus": "^3.0.0",
      "fuzzaldrin": "^2.1.0",
      "humanize-plus": "^1.8.2",
      "temp": "^0.8.3",
      "underscore-plus": "^1.6.6"
    },
    "configSchema": {
      "originalConfigurations": {
        "title": "Original Configurations",
        "type": "object",
        "properties": {
          "useEditorGrammarAsCtagsLanguage": {
            "title": "Use Editor Grammar As Ctags Language",
            "description": "Force ctags to use the name of the current file's language in Atom when generating tags. By default, ctags automatically selects the language of a source file, ignoring those files whose language cannot be determined. This option forces the specified language to be used instead of automatically selecting the language based upon its extension.",
            "type": "boolean",
            "default": true
          },
          "quickJumpToFileSymbol": {
            "title": "Quick Jump To File Symbol",
            "description": "Automatically visit selected file-symbols",
            "type": "boolean",
            "default": true
          }
        }
      },
      "plusConfigurations": {
        "title": "Plus Configurations",
        "type": "object",
        "properties": {
          "extraCommandArguments": {
            "title": "Extra Command Arguments For CTAGS",
            "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which could be an option file for overriding, like `--options=ctags-config`. Default is an empty string.",
            "order": 1,
            "type": "string",
            "default": ""
          },
          "extraCommandArgumentsWhenGeneratingProjectSymbols": {
            "title": "Extra Command Arguments For CTAGS When Generating Project Symbols",
            "description": "Add extra [ctag command arguments](http://ctags.sourceforge.net/ctags.html), which usually are exclusive patterns, when generating project symbols, like `--exclude=node_modules --exclude=spec --exclude=*.html`. Default is to exclude all files ignored by git.",
            "order": 2,
            "type": "string",
            "default": "--exclude=@.gitignore"
          },
          "updateProjectTagsAfterTogglingFileSymbols": {
            "title": "Update Project Tags After Toggling File Symbols",
            "order": 3,
            "type": "boolean",
            "default": "true"
          },
          "updateProjectTagsOnFileChange": {
            "title": "Update Project Tags On File Change",
            "order": 4,
            "type": "boolean",
            "default": "false"
          },
          "provideServiceForAutocomplete": {
            "title": "Provide Service For Autocomplete",
            "order": 5,
            "type": "boolean",
            "default": "true"
          },
          "provideArgumentsForAutocomplete": {
            "title": "Provide Arguments For Autocomplete (Experimental)",
            "description": "Work with \"Provide Service For Autocomplete\" together, try to provide function parameter completion.",
            "order": 6,
            "type": "boolean",
            "default": "true"
          },
          "symbolsViewTheme": {
            "title": "Symbols View Theme",
            "order": 7,
            "type": "string",
            "default": "Dock Item (new feature from v1.17.x)",
            "enum": [
              "Dock Item (new feature from v1.17.x)",
              "Right Panel (like 7ute/symbols-list)",
              "Modal Panel (like atom/symbols-view)"
            ]
          }
        }
      }
    },
    "devDependencies": {
      "babel-eslint": "^6.1.2",
      "eslint": "^3.12.2",
      "eslint-config-fbjs": "^1.1.1",
      "eslint-plugin-babel": "^3.3.0",
      "eslint-plugin-flowtype": "^2.29.1",
      "eslint-plugin-jasmine": "^2.2.0",
      "eslint-plugin-prefer-object-spread": "^1.1.0",
      "eslint-plugin-react": "^5.2.2"
    }
  }
}