{
  "name": "go-plus",
  "repository": {
    "type": "git",
    "url": "https://github.com/joefitzgerald/go-plus"
  },
  "downloads": 847555,
  "stargazers_count": 554,
  "releases": {
    "latest": "6.1.0"
  },
  "versions": {
    "6.1.0": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "6.1.0",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec",
        "lintfix": "eslint ./lib ./spec --fix",
        "fmt": "prettier --write lib/**/*.js spec/**/*.js"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "@atom/temp": "^0.8.4",
        "ansi-style-parser": "^2.0.0",
        "atom-babel6-transpiler": "^1.2.0",
        "atom-select-list": "^0.7.2",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^7.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.6.0",
        "yargs-parser": "^10.1.0"
      },
      "devDependencies": {
        "babel-eslint": "10.0.1",
        "eslint": "^5.8.0",
        "eslint-config-prettier": "^3.1.0",
        "eslint-plugin-flowtype": "^3.2.0",
        "eslint-plugin-prettier": "^3.0.0",
        "eslint-plugin-promise": "^4.0.1",
        "eslint-plugin-react": "^7.11.1",
        "flow-bin": "^0.90.0",
        "prettier": "1.14.3"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideReferences"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.file": {
          "versions": {
            "0.1.0": "provideCodeFormatter"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "consumedServices": {
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatipService"
          }
        },
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        },
        "console": {
          "versions": {
            "0.1.0": "consumeConsole"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            },
            "buildTimeout": {
              "title": "Build Timeout",
              "description": "Stop running a build after this number of milliseconds",
              "type": "integer",
              "default": 10000,
              "order": 5
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Propose completions for standard library packages not explicitly imported. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 1
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "tool": {
              "title": "Linter",
              "description": "The linter that is used to lint your code",
              "type": "string",
              "default": "gometalinter",
              "enum": [
                "gometalinter",
                "revive",
                "golangci-lint"
              ],
              "order": 1
            },
            "args": {
              "title": "Linter Arguments",
              "description": "Arguments to be passed when invoking the provided linter.",
              "type": "any",
              "default": "",
              "order": 2
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/6.1.0/tarball"
      }
    },
    "6.0.2": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "6.0.2",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec",
        "lintfix": "eslint ./lib ./spec --fix",
        "fmt": "prettier --write lib/**/*.js spec/**/*.js"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^2.0.0",
        "atom-select-list": "^0.7.2",
        "atom-babel6-transpiler": "^1.2.0",
        "babel-plugin-add-module-exports": "^1.0.0",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^7.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.6.0",
        "@atom/temp": "^0.8.4",
        "yargs-parser": "^10.1.0"
      },
      "devDependencies": {
        "babel-eslint": "10.0.1",
        "eslint": "^5.8.0",
        "eslint-config-prettier": "^3.1.0",
        "eslint-plugin-flowtype": "^3.2.0",
        "eslint-plugin-prettier": "^3.0.0",
        "eslint-plugin-promise": "^4.0.1",
        "eslint-plugin-react": "^7.11.1",
        "flow-bin": "^0.85.0",
        "prettier": "1.14.3"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideReferences"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.file": {
          "versions": {
            "0.1.0": "provideCodeFormatter"
          }
        },
        "outline-view": {
          "versions": {
            "0.1.0": "provideOutlines"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatipService"
          }
        },
        "atom-ide-busy-signal": {
          "versions": {
            "0.1.0": "consumeBusySignal"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            },
            "buildTimeout": {
              "title": "Build Timeout",
              "description": "Stop running a build after this number of milliseconds",
              "type": "integer",
              "default": 10000,
              "order": 5
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Propose completions for standard library packages not explicitly imported. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 1
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/6.0.2/tarball"
      }
    },
    "6.0.1": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "6.0.1",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec",
        "lintfix": "eslint ./lib ./spec --fix",
        "fmt": "prettier --write lib/**/*.js spec/**/*.js"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^2.0.0",
        "atom-select-list": "^0.7.2",
        "atom-babel6-transpiler": "^1.2.0",
        "babel-plugin-add-module-exports": "^1.0.0",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^7.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.6.0",
        "@atom/temp": "^0.8.4",
        "yargs-parser": "^10.1.0"
      },
      "devDependencies": {
        "babel-eslint": "10.0.1",
        "eslint": "^5.8.0",
        "eslint-config-prettier": "^3.1.0",
        "eslint-plugin-flowtype": "^3.2.0",
        "eslint-plugin-prettier": "^3.0.0",
        "eslint-plugin-promise": "^4.0.1",
        "eslint-plugin-react": "^7.11.1",
        "flow-bin": "^0.85.0",
        "prettier": "1.14.3"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideReferences"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.file": {
          "versions": {
            "0.1.0": "provideCodeFormatter"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatipService"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            },
            "buildTimeout": {
              "title": "Build Timeout",
              "description": "Stop running a build after this number of milliseconds",
              "type": "integer",
              "default": 10000,
              "order": 5
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Propose completions for standard library packages not explicitly imported. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 1
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/6.0.1/tarball"
      }
    },
    "6.0.0": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "6.0.0",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec",
        "lintfix": "eslint ./lib ./spec --fix",
        "fmt": "prettier --write lib/**/*.js spec/**/*.js"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^2.0.0",
        "atom-select-list": "^0.7.2",
        "atom-babel6-transpiler": "^1.2.0",
        "babel-plugin-add-module-exports": "^1.0.0",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^7.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.6.0",
        "@atom/temp": "^0.8.4",
        "yargs-parser": "^10.1.0"
      },
      "devDependencies": {
        "babel-eslint": "10.0.1",
        "eslint": "^5.8.0",
        "eslint-config-prettier": "^3.1.0",
        "eslint-plugin-flowtype": "^3.2.0",
        "eslint-plugin-prettier": "^3.0.0",
        "eslint-plugin-promise": "^4.0.1",
        "eslint-plugin-react": "^7.11.1",
        "flow-bin": "^0.85.0",
        "prettier": "1.14.3"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        },
        "find-references": {
          "versions": {
            "0.1.0": "provideReferences"
          }
        },
        "code-highlight": {
          "versions": {
            "0.1.0": "provideCodeHighlight"
          }
        },
        "code-format.file": {
          "versions": {
            "0.1.0": "provideCodeFormatter"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        },
        "datatip": {
          "versions": {
            "0.1.0": "consumeDatatipService"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            },
            "buildTimeout": {
              "title": "Build Timeout",
              "description": "Stop running a build after this number of milliseconds",
              "type": "integer",
              "default": 10000,
              "order": 5
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Propose completions for standard library packages not explicitly imported. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 1
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/6.0.0/tarball"
      }
    },
    "5.9.1": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.9.1",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec",
        "lintfix": "eslint ./lib ./spec --fix",
        "fmt": "prettier --write lib/**/*.js spec/**/*.js"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^2.0.0",
        "atom-select-list": "^0.7.2",
        "atom-babel6-transpiler": "^1.2.0",
        "babel-plugin-add-module-exports": "^1.0.0",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^7.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.6.0",
        "temp": "^0.8.3",
        "yargs-parser": "^10.1.0"
      },
      "devDependencies": {
        "babel-eslint": "10.0.1",
        "eslint": "^5.8.0",
        "eslint-config-prettier": "^3.1.0",
        "eslint-plugin-flowtype": "^3.2.0",
        "eslint-plugin-prettier": "^3.0.0",
        "eslint-plugin-promise": "^4.0.1",
        "eslint-plugin-react": "^7.11.1",
        "flow-bin": "^0.85.0",
        "prettier": "1.14.3"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            },
            "buildTimeout": {
              "title": "Build Timeout",
              "description": "Stop running a build after this number of milliseconds",
              "type": "integer",
              "default": 10000,
              "order": 5
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Propose completions for standard library packages not explicitly imported. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.9.1/tarball"
      }
    },
    "5.9.0": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.9.0",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec",
        "lintfix": "eslint ./lib ./spec --fix",
        "fmt": "prettier --write lib/**/*.js spec/**/*.js"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^2.0.0",
        "atom-select-list": "^0.7.2",
        "atom-babel6-transpiler": "^1.2.0",
        "babel-plugin-add-module-exports": "^1.0.0",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^7.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.6.0",
        "temp": "^0.8.3",
        "yargs-parser": "^10.1.0"
      },
      "devDependencies": {
        "babel-eslint": "10.0.1",
        "eslint": "^5.8.0",
        "eslint-config-prettier": "^3.1.0",
        "eslint-plugin-flowtype": "^3.2.0",
        "eslint-plugin-prettier": "^3.0.0",
        "eslint-plugin-promise": "^4.0.1",
        "eslint-plugin-react": "^7.11.1",
        "flow-bin": "^0.85.0",
        "prettier": "1.14.3"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "definitions": {
          "versions": {
            "0.1.0": "provideDefinitions"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            },
            "buildTimeout": {
              "title": "Build Timeout",
              "description": "Stop running a build after this number of milliseconds",
              "type": "integer",
              "default": 10000,
              "order": 5
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Propose completions for standard library packages not explicitly imported. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.9.0/tarball"
      }
    },
    "5.8.6": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.8.6",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^2.0.0",
        "atom-select-list": "^0.7.1",
        "atom-babel6-transpiler": "^1.1.3",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^5.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "lodash": "^4.17.5",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.5.0",
        "temp": "^0.8.3",
        "yargs-parser": "^8.1.0"
      },
      "devDependencies": {
        "babel-eslint": "8.2.1",
        "eslint": "^4.15.0",
        "eslint-config-standard": "^11.0.0",
        "eslint-config-standard-flow": "^1.0.1",
        "eslint-config-standard-jsx": "^5.0.0",
        "eslint-plugin-flowtype": "^2.46.1",
        "eslint-plugin-import": "^2.10.0",
        "eslint-plugin-node": "^6.0.1",
        "eslint-plugin-promise": "^3.7.0",
        "eslint-plugin-react": "^7.7.0",
        "eslint-plugin-standard": "^3.0.1",
        "flow-bin": "^0.69.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.8.6/tarball"
      }
    },
    "5.8.5": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.8.5",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^2.0.0",
        "atom-select-list": "^0.7.1",
        "atom-babel6-transpiler": "^1.1.3",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^5.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "lodash": "^4.17.5",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.5.0",
        "temp": "^0.8.3",
        "yargs-parser": "^8.1.0"
      },
      "devDependencies": {
        "babel-eslint": "8.2.1",
        "eslint": "^4.15.0",
        "eslint-config-standard": "^11.0.0",
        "eslint-config-standard-flow": "^1.0.1",
        "eslint-config-standard-jsx": "^5.0.0",
        "eslint-plugin-flowtype": "^2.46.1",
        "eslint-plugin-import": "^2.10.0",
        "eslint-plugin-node": "^6.0.1",
        "eslint-plugin-promise": "^3.7.0",
        "eslint-plugin-react": "^7.7.0",
        "eslint-plugin-standard": "^3.0.1",
        "flow-bin": "^0.69.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.8.5/tarball"
      }
    },
    "5.8.4": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.8.4",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^2.0.0",
        "atom-select-list": "^0.7.1",
        "atom-babel6-transpiler": "^1.1.3",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^5.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "lodash": "^4.17.5",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.5.0",
        "temp": "^0.8.3",
        "yargs-parser": "^8.1.0"
      },
      "devDependencies": {
        "babel-eslint": "8.2.1",
        "eslint": "^4.15.0",
        "eslint-config-standard": "^11.0.0",
        "eslint-config-standard-flow": "^1.0.1",
        "eslint-config-standard-jsx": "^5.0.0",
        "eslint-plugin-flowtype": "^2.46.1",
        "eslint-plugin-import": "^2.10.0",
        "eslint-plugin-node": "^6.0.1",
        "eslint-plugin-promise": "^3.7.0",
        "eslint-plugin-react": "^7.7.0",
        "eslint-plugin-standard": "^3.0.1",
        "flow-bin": "^0.69.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.8.4/tarball"
      }
    },
    "5.8.3": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.8.3",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^2.0.0",
        "atom-select-list": "^0.7.1",
        "atom-babel6-transpiler": "^1.1.3",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.14.0",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^5.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "lodash": "^4.17.5",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.5.0",
        "temp": "^0.8.3",
        "yargs-parser": "^8.1.0"
      },
      "devDependencies": {
        "babel-eslint": "8.2.1",
        "eslint": "^4.15.0",
        "eslint-config-standard": "^11.0.0",
        "eslint-config-standard-flow": "^1.0.1",
        "eslint-config-standard-jsx": "^5.0.0",
        "eslint-plugin-flowtype": "^2.46.1",
        "eslint-plugin-import": "^2.10.0",
        "eslint-plugin-node": "^6.0.1",
        "eslint-plugin-promise": "^3.7.0",
        "eslint-plugin-react": "^7.7.0",
        "eslint-plugin-standard": "^3.0.1",
        "flow-bin": "^0.69.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.8.3/tarball"
      }
    },
    "5.8.2": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.8.2",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "atom-select-list": "^0.7.0",
        "atom-babel6-transpiler": "^1.1.2",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.12.7",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^5.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "lodash": "^4.17.4",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.4.1",
        "temp": "^0.8.3",
        "yargs-parser": "^8.1.0"
      },
      "devDependencies": {
        "babel-eslint": "^8.2.1",
        "eslint": "^4.15.0",
        "eslint-config-standard": "^11.0.0-beta.0",
        "eslint-config-standard-flow": "^1.0.1",
        "eslint-config-standard-jsx": "^4.0.2",
        "eslint-plugin-flowtype": "^2.41.0",
        "eslint-plugin-import": "^2.8.0",
        "eslint-plugin-node": "^5.2.1",
        "eslint-plugin-promise": "^3.6.0",
        "eslint-plugin-react": "^7.5.1",
        "eslint-plugin-standard": "^3.0.1",
        "flow-bin": "^0.61.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.8.2/tarball"
      }
    },
    "5.8.1": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.8.1",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "atom-select-list": "^0.7.0",
        "atom-babel6-transpiler": "^1.1.2",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.12.7",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^5.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "lodash": "^4.17.4",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.4.1",
        "temp": "^0.8.3",
        "yargs-parser": "^8.1.0"
      },
      "devDependencies": {
        "babel-eslint": "^8.2.1",
        "eslint": "^4.15.0",
        "eslint-config-standard": "^11.0.0-beta.0",
        "eslint-config-standard-flow": "^1.0.1",
        "eslint-config-standard-jsx": "^4.0.2",
        "eslint-plugin-flowtype": "^2.41.0",
        "eslint-plugin-import": "^2.8.0",
        "eslint-plugin-node": "^5.2.1",
        "eslint-plugin-promise": "^3.6.0",
        "eslint-plugin-react": "^7.5.1",
        "eslint-plugin-standard": "^3.0.1",
        "flow-bin": "^0.61.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            },
            "compileOnSave": {
              "title": "Compile on Save",
              "description": "Compile the current package when a file is saved and provide linter errors.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "additionalBuildArgs": {
              "title": "Additional build/install args",
              "description": "Arguments to pass to `go build` and `go install` commands.",
              "type": "string",
              "default": "",
              "order": 3
            },
            "additionalTestArgs": {
              "title": "Additional test args",
              "description": "Arguments to pass to `go test` commands.",
              "type": "string",
              "default": "",
              "order": 4
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.8.1/tarball"
      }
    },
    "5.7.2": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.7.2",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "atom-select-list": "^0.7.0",
        "atom-babel6-transpiler": "^1.1.2",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.12.7",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^5.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "lodash": "^4.17.4",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.4.1",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "babel-eslint": "^8.0.3",
        "eslint": "^4.13.1",
        "eslint-config-standard": "^11.0.0-beta.0",
        "eslint-config-standard-flow": "^1.0.1",
        "eslint-config-standard-jsx": "^4.0.2",
        "eslint-plugin-flowtype": "^2.40.1",
        "eslint-plugin-import": "^2.8.0",
        "eslint-plugin-node": "^5.2.1",
        "eslint-plugin-promise": "^3.6.0",
        "eslint-plugin-react": "^7.5.1",
        "eslint-plugin-standard": "^3.0.1",
        "flow-bin": "^0.61.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.7.2/tarball"
      }
    },
    "5.7.1": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.7.1",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "atom-select-list": "^0.7.0",
        "atom-babel6-transpiler": "^1.1.2",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "etch": "0.12.7",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^5.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "lodash": "^4.17.4",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.4.1",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "babel-eslint": "^8.0.3",
        "eslint": "^4.13.1",
        "eslint-config-standard": "^11.0.0-beta.0",
        "eslint-config-standard-flow": "^1.0.1",
        "eslint-config-standard-jsx": "^4.0.2",
        "eslint-plugin-flowtype": "^2.40.1",
        "eslint-plugin-import": "^2.8.0",
        "eslint-plugin-node": "^5.2.1",
        "eslint-plugin-promise": "^3.6.0",
        "eslint-plugin-react": "^7.5.1",
        "eslint-plugin-standard": "^3.0.1",
        "flow-bin": "^0.61.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.7.1/tarball"
      }
    },
    "5.7.0": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.7.0",
      "main": "./lib/main",
      "scripts": {
        "flow": "flow",
        "lint": "eslint ./lib ./spec"
      },
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "atomTranspilers": [
        {
          "glob": "{lib,spec}/**/*.js",
          "transpiler": "atom-babel6-transpiler",
          "options": {
            "cacheKeyFiles": [
              "package.json",
              ".babelrc"
            ]
          }
        }
      ],
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "atom-select-list": "^0.7.0",
        "etch": "0.12.7",
        "etch-octicon": "^2.0.0",
        "fs-extra": "^5.0.0",
        "fuzzaldrin-plus": "^0.6.0",
        "lodash": "^4.17.4",
        "resize-observer-polyfill": "^1.5.0",
        "semver": "^5.4.1",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "atom-babel6-transpiler": "^1.1.2",
        "babel-eslint": "^8.0.3",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.26.0",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "eslint": "^4.13.1",
        "eslint-config-standard": "^11.0.0-beta.0",
        "eslint-config-standard-flow": "^1.0.1",
        "eslint-config-standard-jsx": "^4.0.2",
        "eslint-plugin-flowtype": "^2.40.1",
        "eslint-plugin-import": "^2.8.0",
        "eslint-plugin-node": "^5.2.1",
        "eslint-plugin-promise": "^3.6.0",
        "eslint-plugin-react": "^7.5.1",
        "eslint-plugin-standard": "^3.0.1",
        "flow-bin": "^0.61.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.7.0/tarball"
      }
    },
    "5.6.0": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.6.0",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "etch": "0.12.6",
        "etch-octicon": "^1.0.0",
        "fs-extra": "^4.0.2",
        "fuzzaldrin-plus": "^0.5.0",
        "lodash": "^4.17.4",
        "resize-observer-polyfill": "^1.4.2",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^10.0.2"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 3
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.6.0/tarball"
      }
    },
    "5.5.6": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.5.6",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "etch": "0.12.4",
        "etch-octicon": "^1.0.0",
        "fs-extra": "^3.0.0",
        "fuzzaldrin-plus": "^0.4.1",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^10.0.2"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "orientation": {
              "title": "Panel Orientation",
              "description": "Dock the panel to the bottom or right of the window",
              "type": "string",
              "default": "horizontal",
              "enum": [
                "horizontal",
                "vertical"
              ],
              "order": 2
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 4
            },
            "maxHeight": {
              "title": "Maximum Panel Height",
              "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vh",
              "order": 5
            },
            "minHeight": {
              "title": "Minimum Panel Width",
              "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
              "type": "string",
              "default": "10vw",
              "order": 6
            },
            "currentHeight": {
              "title": "Current Panel Height",
              "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vh",
              "order": 7
            },
            "maxWidth": {
              "title": "Maximum Panel Width",
              "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vw",
              "order": 8
            },
            "currentWidth": {
              "title": "Current Panel Width",
              "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vw",
              "order": 9
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.5.6/tarball"
      }
    },
    "5.5.5": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.5.5",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "etch": "0.12.4",
        "etch-octicon": "^1.0.0",
        "fs-extra": "^3.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^10.0.2"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "orientation": {
              "title": "Panel Orientation",
              "description": "Dock the panel to the bottom or right of the window",
              "type": "string",
              "default": "horizontal",
              "enum": [
                "horizontal",
                "vertical"
              ],
              "order": 2
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 4
            },
            "maxHeight": {
              "title": "Maximum Panel Height",
              "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vh",
              "order": 5
            },
            "minHeight": {
              "title": "Minimum Panel Width",
              "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
              "type": "string",
              "default": "10vw",
              "order": 6
            },
            "currentHeight": {
              "title": "Current Panel Height",
              "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vh",
              "order": 7
            },
            "maxWidth": {
              "title": "Maximum Panel Width",
              "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vw",
              "order": 8
            },
            "currentWidth": {
              "title": "Current Panel Width",
              "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vw",
              "order": 9
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.5.5/tarball"
      }
    },
    "5.5.4": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.5.4",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "etch": "0.12.4",
        "etch-octicon": "^1.0.0",
        "fs-extra": "^3.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^10.0.2"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "orientation": {
              "title": "Panel Orientation",
              "description": "Dock the panel to the bottom or right of the window",
              "type": "string",
              "default": "horizontal",
              "enum": [
                "horizontal",
                "vertical"
              ],
              "order": 2
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 4
            },
            "maxHeight": {
              "title": "Maximum Panel Height",
              "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vh",
              "order": 5
            },
            "minHeight": {
              "title": "Minimum Panel Width",
              "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
              "type": "string",
              "default": "10vw",
              "order": 6
            },
            "currentHeight": {
              "title": "Current Panel Height",
              "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vh",
              "order": 7
            },
            "maxWidth": {
              "title": "Maximum Panel Width",
              "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vw",
              "order": 8
            },
            "currentWidth": {
              "title": "Current Panel Width",
              "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vw",
              "order": 9
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.5.4/tarball"
      }
    },
    "5.5.3": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.5.3",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "etch": "0.12.4",
        "etch-octicon": "^1.0.0",
        "fs-extra": "^3.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^10.0.2"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "2.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "orientation": {
              "title": "Panel Orientation",
              "description": "Dock the panel to the bottom or right of the window",
              "type": "string",
              "default": "horizontal",
              "enum": [
                "horizontal",
                "vertical"
              ],
              "order": 2
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 4
            },
            "maxHeight": {
              "title": "Maximum Panel Height",
              "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vh",
              "order": 5
            },
            "minHeight": {
              "title": "Minimum Panel Width",
              "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
              "type": "string",
              "default": "10vw",
              "order": 6
            },
            "currentHeight": {
              "title": "Current Panel Height",
              "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vh",
              "order": 7
            },
            "maxWidth": {
              "title": "Maximum Panel Width",
              "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vw",
              "order": 8
            },
            "currentWidth": {
              "title": "Current Panel Width",
              "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vw",
              "order": 9
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.5.3/tarball"
      }
    },
    "5.5.2": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.5.2",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "etch": "0.12.2",
        "etch-octicon": "^1.0.0",
        "fs-extra": "^3.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^10.0.2"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "1.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "orientation": {
              "title": "Panel Orientation",
              "description": "Dock the panel to the bottom or right of the window",
              "type": "string",
              "default": "horizontal",
              "enum": [
                "horizontal",
                "vertical"
              ],
              "order": 2
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 4
            },
            "maxHeight": {
              "title": "Maximum Panel Height",
              "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vh",
              "order": 5
            },
            "minHeight": {
              "title": "Minimum Panel Width",
              "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
              "type": "string",
              "default": "10vw",
              "order": 6
            },
            "currentHeight": {
              "title": "Current Panel Height",
              "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vh",
              "order": 7
            },
            "maxWidth": {
              "title": "Maximum Panel Width",
              "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vw",
              "order": 8
            },
            "currentWidth": {
              "title": "Current Panel Width",
              "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vw",
              "order": 9
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.5.2/tarball"
      }
    },
    "5.5.1": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.5.1",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "etch": "0.12.2",
        "etch-octicon": "^1.0.0",
        "fs-extra": "^3.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^10.0.2"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "1.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "orientation": {
              "title": "Panel Orientation",
              "description": "Dock the panel to the bottom or right of the window",
              "type": "string",
              "default": "horizontal",
              "enum": [
                "horizontal",
                "vertical"
              ],
              "order": 2
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 4
            },
            "maxHeight": {
              "title": "Maximum Panel Height",
              "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vh",
              "order": 5
            },
            "minHeight": {
              "title": "Minimum Panel Width",
              "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
              "type": "string",
              "default": "10vw",
              "order": 6
            },
            "currentHeight": {
              "title": "Current Panel Height",
              "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vh",
              "order": 7
            },
            "maxWidth": {
              "title": "Maximum Panel Width",
              "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vw",
              "order": 8
            },
            "currentWidth": {
              "title": "Current Panel Width",
              "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vw",
              "order": 9
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.5.1/tarball"
      }
    },
    "5.5.0": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.5.0",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "etch": "0.12.2",
        "etch-octicon": "^1.0.0",
        "fs-extra": "^3.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^10.0.2"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        },
        "linter-indie": {
          "versions": {
            "1.0.0": "consumeLinter"
          }
        }
      },
      "configSchema": {
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "panel": {
          "title": "Panel",
          "type": "object",
          "properties": {
            "displayMode": {
              "title": "Panel Display Mode",
              "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
              "type": "string",
              "default": "open",
              "enum": [
                "open",
                "closed"
              ],
              "order": 1
            },
            "orientation": {
              "title": "Panel Orientation",
              "description": "Dock the panel to the bottom or right of the window",
              "type": "string",
              "default": "horizontal",
              "enum": [
                "horizontal",
                "vertical"
              ],
              "order": 2
            },
            "focusOnFailure": {
              "title": "Focus the go-plus panel on failure ",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "fontSize": {
              "title": "Panel Font Size",
              "description": "Control the font size for content displayed in the panel",
              "type": "string",
              "default": "1.2em",
              "order": 4
            },
            "maxHeight": {
              "title": "Maximum Panel Height",
              "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vh",
              "order": 5
            },
            "minHeight": {
              "title": "Minimum Panel Width",
              "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
              "type": "string",
              "default": "10vw",
              "order": 6
            },
            "currentHeight": {
              "title": "Current Panel Height",
              "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vh",
              "order": 7
            },
            "maxWidth": {
              "title": "Maximum Panel Width",
              "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
              "type": "string",
              "default": "50vw",
              "order": 8
            },
            "currentWidth": {
              "title": "Current Panel Width",
              "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
              "type": "string",
              "default": "15vw",
              "order": 9
            }
          }
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.5.0/tarball"
      }
    },
    "5.4.0": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.4.0",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-style-parser": "^1.1.0",
        "etch": "0.8.0",
        "etch-octicon": "^0.1.0",
        "fs-extra": "^2.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^9.0.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        }
      },
      "configSchema": {
        "panelDisplayMode": {
          "title": "Panel Display Mode",
          "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
          "type": "string",
          "default": "open",
          "enum": [
            "open",
            "closed"
          ],
          "order": 1
        },
        "panelOrientation": {
          "title": "Panel Orientation",
          "description": "Dock the panel to the bottom or right of the window",
          "type": "string",
          "default": "horizontal",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "order": 2
        },
        "panelFontSize": {
          "title": "Panel Font Size",
          "description": "Control the font size for content displayed in the panel",
          "type": "string",
          "default": "1.2em",
          "order": 3
        },
        "maxPanelHeight": {
          "title": "Maximum Panel Height",
          "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vh",
          "order": 3
        },
        "minPanelHeight": {
          "title": "Minimum Panel Width",
          "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
          "type": "string",
          "default": "10vw",
          "order": 7
        },
        "currentPanelHeight": {
          "title": "Current Panel Height",
          "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vh",
          "order": 5
        },
        "maxPanelWidth": {
          "title": "Maximum Panel Width",
          "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vw",
          "order": 6
        },
        "currentPanelWidth": {
          "title": "Current Panel Width",
          "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vw",
          "order": 8
        },
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            },
            "focusPanelIfTestsFail": {
              "title": "Focus The go-plus Panel If Tests Fail",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the test tab focused when tests fail.",
              "type": "boolean",
              "default": true,
              "order": 8
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.4.0/tarball"
      }
    },
    "5.3.4": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.3.4",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-to-html": "^0.6.0",
        "etch": "0.8.0",
        "etch-octicon": "^0.1.0",
        "fs-extra": "^2.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^9.0.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        }
      },
      "configSchema": {
        "panelDisplayMode": {
          "title": "Panel Display Mode",
          "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
          "type": "string",
          "default": "open",
          "enum": [
            "open",
            "closed"
          ],
          "order": 1
        },
        "panelOrientation": {
          "title": "Panel Orientation",
          "description": "Dock the panel to the bottom or right of the window",
          "type": "string",
          "default": "horizontal",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "order": 2
        },
        "panelFontSize": {
          "title": "Panel Font Size",
          "description": "Control the font size for content displayed in the panel",
          "type": "string",
          "default": "1.2em",
          "order": 3
        },
        "maxPanelHeight": {
          "title": "Maximum Panel Height",
          "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vh",
          "order": 3
        },
        "minPanelHeight": {
          "title": "Minimum Panel Width",
          "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
          "type": "string",
          "default": "10vw",
          "order": 7
        },
        "currentPanelHeight": {
          "title": "Current Panel Height",
          "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vh",
          "order": 5
        },
        "maxPanelWidth": {
          "title": "Maximum Panel Width",
          "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vw",
          "order": 6
        },
        "currentPanelWidth": {
          "title": "Current Panel Width",
          "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vw",
          "order": 8
        },
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            },
            "focusPanelIfTestsFail": {
              "title": "Focus The go-plus Panel If Tests Fail",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the test tab focused when tests fail.",
              "type": "boolean",
              "default": true,
              "order": 8
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.3.4/tarball"
      }
    },
    "5.3.3": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.3.3",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-to-html": "^0.6.0",
        "etch": "0.8.0",
        "etch-octicon": "^0.1.0",
        "fs-extra": "^2.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^9.0.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        }
      },
      "configSchema": {
        "panelDisplayMode": {
          "title": "Panel Display Mode",
          "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
          "type": "string",
          "default": "open",
          "enum": [
            "open",
            "closed"
          ],
          "order": 1
        },
        "panelOrientation": {
          "title": "Panel Orientation",
          "description": "Dock the panel to the bottom or right of the window",
          "type": "string",
          "default": "horizontal",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "order": 2
        },
        "panelFontSize": {
          "title": "Panel Font Size",
          "description": "Control the font size for content displayed in the panel",
          "type": "string",
          "default": "1.2em",
          "order": 3
        },
        "maxPanelHeight": {
          "title": "Maximum Panel Height",
          "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vh",
          "order": 3
        },
        "minPanelHeight": {
          "title": "Minimum Panel Width",
          "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
          "type": "string",
          "default": "10vw",
          "order": 7
        },
        "currentPanelHeight": {
          "title": "Current Panel Height",
          "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vh",
          "order": 5
        },
        "maxPanelWidth": {
          "title": "Maximum Panel Width",
          "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vw",
          "order": 6
        },
        "currentPanelWidth": {
          "title": "Current Panel Width",
          "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vw",
          "order": 8
        },
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            },
            "focusPanelIfTestsFail": {
              "title": "Focus The go-plus Panel If Tests Fail",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the test tab focused when tests fail.",
              "type": "boolean",
              "default": true,
              "order": 8
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.3.3/tarball"
      }
    },
    "5.3.2": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.3.2",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-to-html": "^0.6.0",
        "etch": "0.8.0",
        "etch-octicon": "^0.1.0",
        "fs-extra": "^2.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^9.0.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        }
      },
      "configSchema": {
        "panelDisplayMode": {
          "title": "Panel Display Mode",
          "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
          "type": "string",
          "default": "open",
          "enum": [
            "open",
            "closed"
          ],
          "order": 1
        },
        "panelOrientation": {
          "title": "Panel Orientation",
          "description": "Dock the panel to the bottom or right of the window",
          "type": "string",
          "default": "horizontal",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "order": 2
        },
        "panelFontSize": {
          "title": "Panel Font Size",
          "description": "Control the font size for content displayed in the panel",
          "type": "string",
          "default": "1.2em",
          "order": 3
        },
        "maxPanelHeight": {
          "title": "Maximum Panel Height",
          "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vh",
          "order": 3
        },
        "minPanelHeight": {
          "title": "Minimum Panel Width",
          "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
          "type": "string",
          "default": "10vw",
          "order": 7
        },
        "currentPanelHeight": {
          "title": "Current Panel Height",
          "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vh",
          "order": 5
        },
        "maxPanelWidth": {
          "title": "Maximum Panel Width",
          "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vw",
          "order": 6
        },
        "currentPanelWidth": {
          "title": "Current Panel Width",
          "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vw",
          "order": 8
        },
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            },
            "focusPanelIfTestsFail": {
              "title": "Focus The go-plus Panel If Tests Fail",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the test tab focused when tests fail.",
              "type": "boolean",
              "default": true,
              "order": 8
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.3.2/tarball"
      }
    },
    "5.3.1": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.3.1",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-to-html": "^0.6.0",
        "etch": "0.8.0",
        "etch-octicon": "^0.1.0",
        "fs-extra": "^2.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^9.0.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        }
      },
      "configSchema": {
        "panelDisplayMode": {
          "title": "Panel Display Mode",
          "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
          "type": "string",
          "default": "open",
          "enum": [
            "open",
            "closed"
          ],
          "order": 1
        },
        "panelOrientation": {
          "title": "Panel Orientation",
          "description": "Dock the panel to the bottom or right of the window",
          "type": "string",
          "default": "horizontal",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "order": 2
        },
        "panelFontSize": {
          "title": "Panel Font Size",
          "description": "Control the font size for content displayed in the panel",
          "type": "string",
          "default": "1.2em",
          "order": 3
        },
        "maxPanelHeight": {
          "title": "Maximum Panel Height",
          "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vh",
          "order": 3
        },
        "minPanelHeight": {
          "title": "Minimum Panel Width",
          "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
          "type": "string",
          "default": "10vw",
          "order": 7
        },
        "currentPanelHeight": {
          "title": "Current Panel Height",
          "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vh",
          "order": 5
        },
        "maxPanelWidth": {
          "title": "Maximum Panel Width",
          "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vw",
          "order": 6
        },
        "currentPanelWidth": {
          "title": "Current Panel Width",
          "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vw",
          "order": 8
        },
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            },
            "focusPanelIfTestsFail": {
              "title": "Focus The go-plus Panel If Tests Fail",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the test tab focused when tests fail.",
              "type": "boolean",
              "default": true,
              "order": 8
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.3.1/tarball"
      }
    },
    "5.3.0": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.3.0",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-to-html": "^0.6.0",
        "etch": "0.8.0",
        "etch-octicon": "^0.1.0",
        "fs-extra": "^2.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^9.0.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        }
      },
      "configSchema": {
        "panelDisplayMode": {
          "title": "Panel Display Mode",
          "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
          "type": "string",
          "default": "open",
          "enum": [
            "open",
            "closed"
          ],
          "order": 1
        },
        "panelOrientation": {
          "title": "Panel Orientation",
          "description": "Dock the panel to the bottom or right of the window",
          "type": "string",
          "default": "horizontal",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "order": 2
        },
        "panelFontSize": {
          "title": "Panel Font Size",
          "description": "Control the font size for content displayed in the panel",
          "type": "string",
          "default": "1.2em",
          "order": 3
        },
        "maxPanelHeight": {
          "title": "Maximum Panel Height",
          "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vh",
          "order": 3
        },
        "minPanelHeight": {
          "title": "Minimum Panel Width",
          "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
          "type": "string",
          "default": "10vw",
          "order": 7
        },
        "currentPanelHeight": {
          "title": "Current Panel Height",
          "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vh",
          "order": 5
        },
        "maxPanelWidth": {
          "title": "Maximum Panel Width",
          "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vw",
          "order": 6
        },
        "currentPanelWidth": {
          "title": "Current Panel Width",
          "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vw",
          "order": 8
        },
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "guru": {
          "title": "Guru",
          "type": "object",
          "properties": {
            "highlightIdentifiers": {
              "title": "Highlight Identifiers When Cursor Moves",
              "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
              "type": "boolean",
              "default": true,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "godef",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithCoverage": {
              "title": "Run Tests With Coverage",
              "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 4
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 5
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 6
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 7
            },
            "focusPanelIfTestsFail": {
              "title": "Focus The go-plus Panel If Tests Fail",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the test tab focused when tests fail.",
              "type": "boolean",
              "default": true,
              "order": 8
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.3.0/tarball"
      }
    },
    "5.2.0": {
      "name": "go-plus",
      "description": "Makes working with Go in Atom awesome.",
      "keywords": [
        "go",
        "golang",
        "autocomplete",
        "gofmt",
        "gocode",
        "format",
        "fmt",
        "godef",
        "godoc",
        "goimports",
        "gorename",
        "goreturns",
        "lint",
        "vet",
        "gometalinter",
        "go-debug",
        "delve",
        "hyperclick",
        "guru"
      ],
      "version": "5.2.0",
      "main": "./lib/main",
      "license": "Apache-2.0",
      "engines": {
        "atom": ">=1.12.7 <2.0.0",
        "node": ">= 6"
      },
      "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
      "homepage": "https://atom.io/packages/go-plus",
      "repository": "https://github.com/joefitzgerald/go-plus",
      "bugs": {
        "url": "https://github.com/joefitzgerald/go-plus/issues"
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "activationCommands": {
        "atom-workspace": [
          "golang:get-package",
          "golang:update-tools",
          "golang:toggle-panel",
          "golang:gofmt",
          "golang:goimports",
          "golang:goreturns",
          "golang:showdoc"
        ],
        "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
          "golang:run-tests",
          "golang:hide-coverage",
          "golang:gorename"
        ]
      },
      "dependencies": {
        "ansi-to-html": "^0.6.0",
        "etch": "^0.8.0",
        "etch-octicon": "^0.1.0",
        "fs-extra": "^2.0.0",
        "lodash": "^4.17.4",
        "semver": "^5.3.0",
        "temp": "^0.8.3"
      },
      "devDependencies": {
        "standard": "^8.6.0"
      },
      "providedServices": {
        "go-config": {
          "versions": {
            "1.0.0": "provideGoConfig"
          }
        },
        "go-get": {
          "versions": {
            "2.0.0": "provideGoGet"
          }
        },
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        },
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provideAutocomplete"
          }
        },
        "hyperclick.provider": {
          "versions": {
            "0.0.0": "provideHyperclick"
          }
        }
      },
      "consumedServices": {
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        },
        "go-plus.view": {
          "versions": {
            "0.1.0": "consumeViewProvider"
          }
        }
      },
      "configSchema": {
        "panelDisplayMode": {
          "title": "Panel Display Mode",
          "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
          "type": "string",
          "default": "open",
          "enum": [
            "open",
            "closed"
          ],
          "order": 1
        },
        "panelOrientation": {
          "title": "Panel Orientation",
          "description": "Dock the panel to the bottom or right of the window",
          "type": "string",
          "default": "horizontal",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "order": 2
        },
        "maxPanelHeight": {
          "title": "Maximum Panel Height",
          "description": "When the panel orientation is horizontal, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vh",
          "order": 3
        },
        "minPanelHeight": {
          "title": "Minimum Panel Width",
          "description": "When the panel orientation is vertical, ensure the panel doesn't disappear when open",
          "type": "string",
          "default": "10vw",
          "order": 7
        },
        "currentPanelHeight": {
          "title": "Current Panel Height",
          "description": "When the panel orientation is horizontal, the height of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vh",
          "order": 5
        },
        "maxPanelWidth": {
          "title": "Maximum Panel Width",
          "description": "When the panel orientation is vertical, prevent the panel from occupying the entire window",
          "type": "string",
          "default": "50vw",
          "order": 6
        },
        "currentPanelWidth": {
          "title": "Current Panel Width",
          "description": "When the panel orientation is vertical, the width of the panel (this is changed when you drag the panel to resize it, so the setting is preserved)",
          "type": "string",
          "default": "15vw",
          "order": 8
        },
        "disabledBundledPackages": {
          "title": "Disabled Bundled Packages",
          "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "gopath": {
              "title": "GOPATH",
              "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
              "type": "string",
              "default": "",
              "order": 1
            }
          }
        },
        "autocomplete": {
          "title": "Autocomplete",
          "type": "object",
          "properties": {
            "scopeBlacklist": {
              "title": "Scope Blacklist",
              "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
              "type": "string",
              "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
              "order": 1
            },
            "suppressBuiltinAutocompleteProvider": {
              "title": "Suppress The Provider Built-In To autocomplete-plus",
              "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
              "type": "boolean",
              "default": true,
              "order": 2
            },
            "suppressActivationForCharacters": {
              "title": "Suppress Activation For Characters",
              "description": "Suggestions will not be provided when you type one of these characters.",
              "type": "array",
              "default": [
                "comma",
                "newline",
                "space",
                "tab",
                "/",
                "\\",
                "(",
                ")",
                "\"",
                "'",
                ":",
                ";",
                "<",
                ">",
                "~",
                "!",
                "@",
                "#",
                "$",
                "%",
                "^",
                "&",
                "*",
                "|",
                "+",
                "=",
                "[",
                "]",
                "{",
                "}",
                "`",
                "~",
                "?",
                "-"
              ],
              "items": {
                "type": "string"
              },
              "order": 3
            },
            "snippetMode": {
              "title": "Snippet Mode",
              "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
              "type": "string",
              "default": "name",
              "enum": [
                "name",
                "nameAndType",
                "none"
              ],
              "order": 4
            },
            "proposeBuiltins": {
              "title": "Propose Builtins",
              "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 5
            },
            "unimportedPackages": {
              "title": "Unimported Packages",
              "description": "Provide suggestions for unimported packages. Default: true.",
              "type": "boolean",
              "default": true,
              "order": 6
            }
          }
        },
        "format": {
          "title": "Format",
          "type": "object",
          "properties": {
            "formatOnSave": {
              "title": "Run Format Tool On Save",
              "description": "Run the configured format tool each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "tool": {
              "title": "Format Tool",
              "description": "Choose one: goimports, goreturns, or gofmt",
              "type": "string",
              "default": "goimports",
              "enum": [
                "goimports",
                "goreturns",
                "gofmt"
              ],
              "order": 2
            }
          }
        },
        "get": {
          "title": "Go Get",
          "type": "object",
          "properties": {
            "timeout": {
              "title": "Timeout",
              "description": "Stop trying to update tools after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 1
            }
          }
        },
        "lint": {
          "title": "Lint",
          "type": "object",
          "properties": {
            "args": {
              "title": "gometalinter Arguments",
              "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
              "type": "array",
              "default": [
                "--vendor",
                "--disable-all",
                "--enable=vet",
                "--enable=vetshadow",
                "--enable=golint",
                "--enable=ineffassign",
                "--enable=goconst",
                "--tests",
                "--json",
                "."
              ],
              "items": {
                "type": "string"
              },
              "order": 1
            }
          }
        },
        "navigator": {
          "title": "Navigator",
          "type": "object",
          "properties": {
            "mode": {
              "title": "Mode",
              "description": "Use guru or godef for go to definition",
              "type": "string",
              "default": "guru",
              "enum": [
                "guru",
                "godef"
              ],
              "order": 1
            }
          }
        },
        "test": {
          "title": "Test",
          "type": "object",
          "properties": {
            "runTestsOnSave": {
              "title": "Run Tests On Save",
              "description": "Run `go test -coverprofile` each time a file is saved",
              "type": "boolean",
              "default": true,
              "order": 1
            },
            "timeout": {
              "title": "Timeout",
              "description": "Stop running tests after this number of milliseconds",
              "type": "integer",
              "default": 60000,
              "order": 2
            },
            "runTestsWithShortFlag": {
              "title": "Run Tests With Short Flag Set",
              "description": "Runs `go test` with `-short` flag set",
              "type": "boolean",
              "default": true,
              "order": 3
            },
            "runTestsWithVerboseFlag": {
              "title": "Run Tests With Verbose Flag Set",
              "description": "Runs `go test` with `-v` flag set",
              "type": "boolean",
              "default": false,
              "order": 4
            },
            "coverageHighlightMode": {
              "title": "Coverage Highlight Mode",
              "description": "Control the way that coverage highlighting occurs",
              "type": "string",
              "default": "uncovered",
              "enum": [
                "covered-and-uncovered",
                "covered",
                "uncovered",
                "disabled"
              ],
              "order": 5
            },
            "coverageDisplayMode": {
              "title": "Coverage Display Mode",
              "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
              "type": "string",
              "default": "highlight",
              "enum": [
                "highlight",
                "gutter"
              ],
              "order": 6
            },
            "focusPanelIfTestsFail": {
              "title": "Focus The go-plus Panel If Tests Fail",
              "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the test tab focused when tests fail.",
              "type": "boolean",
              "default": true,
              "order": 7
            }
          }
        }
      },
      "standard": {
        "globals": [
          "advanceClock",
          "atom",
          "waitsForPromise"
        ]
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/go-plus/versions/5.2.0/tarball"
      }
    }
  },
  "readme": "# [go-plus](https://atom.io/packages/go-plus) [![Build Status](https://travis-ci.org/joefitzgerald/go-plus.svg?branch=master)](https://travis-ci.org/joefitzgerald/go-plus) [![Build status](https://ci.appveyor.com/api/projects/status/d0cekvaprt9wo1et/branch/master?svg=true)](https://ci.appveyor.com/project/joefitzgerald/go-plus/branch/master) [![Slack](https://img.shields.io/badge/atom_slack-%23go--plus-blue.svg?style=flat)](https://atom-slack.herokuapp.com) [![Slack](https://img.shields.io/badge/gophers_slack-%23go--plus-blue.svg?style=flat)](https://gophersinvite.herokuapp.com)\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/joefitzgerald/go-plus.svg)](https://greenkeeper.io/)\n\n> An Improved [Go](https://www.golang.org) Experience For The [Atom Editor](https://atom.io)\n\n![image](https://user-images.githubusercontent.com/7527103/48982584-cd537600-f0a1-11e8-9101-e43dc2064223.png)\n\n- Github: https://github.com/joefitzgerald/go-plus\n- Atom: https://atom.io/packages/go-plus\n\n## Overview\n\nThis package includes the following functionality:\n\n- Display information about your current go installation, by running `go version` and `go env`\n- Autocomplete using `gocode`\n- Format your code with `gofmt`, `goimports`, or `goreturns`;\n  optionally run one of these tools on save of any `.go` file\n- Run `go install .` and `go test -c -o {tempdir} .` to verify your code compiles\n  and to keep `gocode` suggestions up to date\n- Run a variety of linters (e.g. `golint`, `vet`, etc.) against your code using [`gometalinter`](https://github.com/alecthomas/gometalinter), [`revive`](https://github.com/mgechev/revive) or [`golangci-lint`](https://github.com/golangci/golangci-lint)\n- Run tests, display test output, and display test coverage using `go test -coverprofile`\n- Display documentation for identifiers in source code using\n  [`gogetdoc`](https://github.com/zmb3/gogetdoc)\n- Rename the symbol under your cursor using `gorename`\n- Go to definition using `guru` or `godef`\n- Highlight occurrences of an identifier using `guru`\n- Find usages of an identifier using `guru`\n\nYou can add debug functionality to Atom by installing the following package:\n\n- [go-debug](https://atom.io/packages/go-debug): Debug your package / tests using [`delve`](https://github.com/derekparker/delve)\n\n## Builds\n\n### How Are The Builds Performed?\n\nThe following commands are run for the directory of the current file:\n\n- `go install .` (for normal `.go` files)\n- `go test -o {tmpdir} -c .` (for `_test.go` files)\n\n### Why Are You Running `go install` Instead Of `go build`?\n\n`gocode` (and a few other tools, like `gotype`) work on `.a` files (i.e. the package object archive), and the way to keep these up to date is to run `go install` periodically. This ensures your autocomplete suggestions are kept up to date.\n\n## Platforms\n\nThe package has CI for OS X, Windows and Ubuntu.\n\n## Installing Missing Tools\n\nIf you are missing any required tools, you may be prompted to install them. You can also manually install the required tools in your terminal:\n\n```\ngo get -u golang.org/x/tools/cmd/goimports\ngo get -u golang.org/x/tools/cmd/gorename\ngo get -u github.com/sqs/goreturns\ngo get -u github.com/mdempsky/gocode\ngo get -u github.com/alecthomas/gometalinter\ngo get -u github.com/mgechev/revive\ngo get -u github.com/golangci/golangci-lint/cmd/golangci-lint\ngo get -u github.com/zmb3/gogetdoc\ngo get -u github.com/zmb3/goaddimport\ngo get -u github.com/rogpeppe/godef\ngo get -u golang.org/x/tools/cmd/guru\ngo get -u github.com/fatih/gomodifytags\ngo get -u github.com/tpng/gopkgs\ngo get -u github.com/ramya-rao-a/go-outline\n```\n\n## Having Issues?\n\nPlease consult the [FAQ](https://github.com/joefitzgerald/go-plus/wiki/FAQ) prior to [opening an issue](https://github.com/joefitzgerald/go-plus/issues/new): https://github.com/joefitzgerald/go-plus/wiki/FAQ\n\nIf you have an issue with debugging, file an issue with [`go-debug`](https://github.com/lloiser/go-debug) [here](https://github.com/lloiser/go-debug/issues/new).\n\n## Maintainers\n\n- Joe Fitzgerald ([@joefitzgerald](https://github.com/joefitzgerald))\n- Zac Bergquist ([@zmb3](https://github.com/zmb3))\n- Lukas Beranek ([@lloiser](https://github.com/lloiser))\n\n## Contributors\n\nA list of contributors can be found at https://github.com/joefitzgerald/go-plus/graphs/contributors. Thank you so much to everyone has contributed to the package :heart:. You are awesome!\n\n## Contributing\n\nContributions are greatly appreciated. Please fork this repository, make your\nchanges, and open a pull request. See [Contributing](https://github.com/joefitzgerald/go-plus/wiki/Contributing) for detailed instructions.\n",
  "metadata": {
    "name": "go-plus",
    "description": "Makes working with Go in Atom awesome.",
    "keywords": [
      "go",
      "golang",
      "autocomplete",
      "gofmt",
      "gocode",
      "format",
      "fmt",
      "godef",
      "godoc",
      "goimports",
      "gorename",
      "goreturns",
      "lint",
      "vet",
      "gometalinter",
      "go-debug",
      "delve",
      "hyperclick",
      "guru"
    ],
    "version": "6.1.0",
    "main": "./lib/main",
    "scripts": {
      "flow": "flow",
      "lint": "eslint ./lib ./spec",
      "lintfix": "eslint ./lib ./spec --fix",
      "fmt": "prettier --write lib/**/*.js spec/**/*.js"
    },
    "license": "Apache-2.0",
    "engines": {
      "atom": ">=1.12.7 <2.0.0",
      "node": ">= 6"
    },
    "author": "Joe Fitzgerald <jfitzgerald@pivotal.io> (http://github.com/joefitzgerald)",
    "homepage": "https://atom.io/packages/go-plus",
    "repository": "https://github.com/joefitzgerald/go-plus",
    "bugs": {
      "url": "https://github.com/joefitzgerald/go-plus/issues"
    },
    "activationHooks": [
      "core:loaded-shell-environment"
    ],
    "activationCommands": {
      "atom-workspace": [
        "golang:get-package",
        "golang:update-tools",
        "golang:toggle-panel",
        "golang:gofmt",
        "golang:goimports",
        "golang:goreturns",
        "golang:showdoc"
      ],
      "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
        "golang:run-tests",
        "golang:hide-coverage",
        "golang:gorename"
      ]
    },
    "atomTranspilers": [
      {
        "glob": "{lib,spec}/**/*.js",
        "transpiler": "atom-babel6-transpiler",
        "options": {
          "cacheKeyFiles": [
            "package.json",
            ".babelrc"
          ]
        }
      }
    ],
    "dependencies": {
      "@atom/temp": "^0.8.4",
      "ansi-style-parser": "^2.0.0",
      "atom-babel6-transpiler": "^1.2.0",
      "atom-select-list": "^0.7.2",
      "babel-plugin-transform-class-properties": "^6.24.1",
      "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
      "babel-plugin-transform-flow-strip-types": "^6.22.0",
      "babel-plugin-transform-object-rest-spread": "^6.26.0",
      "babel-plugin-transform-react-jsx": "^6.24.1",
      "etch": "0.14.0",
      "etch-octicon": "^2.0.0",
      "fs-extra": "^7.0.0",
      "fuzzaldrin-plus": "^0.6.0",
      "resize-observer-polyfill": "^1.5.0",
      "semver": "^5.6.0",
      "yargs-parser": "^10.1.0"
    },
    "devDependencies": {
      "babel-eslint": "10.0.1",
      "eslint": "^5.8.0",
      "eslint-config-prettier": "^3.1.0",
      "eslint-plugin-flowtype": "^3.2.0",
      "eslint-plugin-prettier": "^3.0.0",
      "eslint-plugin-promise": "^4.0.1",
      "eslint-plugin-react": "^7.11.1",
      "flow-bin": "^0.90.0",
      "prettier": "1.14.3"
    },
    "providedServices": {
      "go-config": {
        "versions": {
          "1.0.0": "provideGoConfig"
        }
      },
      "go-get": {
        "versions": {
          "2.0.0": "provideGoGet"
        }
      },
      "autocomplete.provider": {
        "versions": {
          "2.0.0": "provideAutocomplete"
        }
      },
      "definitions": {
        "versions": {
          "0.1.0": "provideDefinitions"
        }
      },
      "find-references": {
        "versions": {
          "0.1.0": "provideReferences"
        }
      },
      "code-highlight": {
        "versions": {
          "0.1.0": "provideCodeHighlight"
        }
      },
      "code-format.file": {
        "versions": {
          "0.1.0": "provideCodeFormatter"
        }
      },
      "outline-view": {
        "versions": {
          "0.1.0": "provideOutlines"
        }
      }
    },
    "consumedServices": {
      "go-plus.view": {
        "versions": {
          "0.1.0": "consumeViewProvider"
        }
      },
      "linter-indie": {
        "versions": {
          "2.0.0": "consumeLinter"
        }
      },
      "datatip": {
        "versions": {
          "0.1.0": "consumeDatatipService"
        }
      },
      "atom-ide-busy-signal": {
        "versions": {
          "0.1.0": "consumeBusySignal"
        }
      },
      "console": {
        "versions": {
          "0.1.0": "consumeConsole"
        }
      }
    },
    "configSchema": {
      "disabledBundledPackages": {
        "title": "Disabled Bundled Packages",
        "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
        "type": "array",
        "default": [],
        "items": {
          "type": "string"
        }
      },
      "panel": {
        "title": "Panel",
        "type": "object",
        "properties": {
          "displayMode": {
            "title": "Panel Display Mode",
            "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
            "type": "string",
            "default": "open",
            "enum": [
              "open",
              "closed"
            ],
            "order": 1
          },
          "focusOnFailure": {
            "title": "Focus the go-plus panel on failure ",
            "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
            "type": "boolean",
            "default": true,
            "order": 2
          },
          "fontSize": {
            "title": "Panel Font Size",
            "description": "Control the font size for content displayed in the panel",
            "type": "string",
            "default": "1.2em",
            "order": 3
          }
        }
      },
      "config": {
        "title": "Config",
        "type": "object",
        "properties": {
          "gopath": {
            "title": "GOPATH",
            "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
            "type": "string",
            "default": "",
            "order": 1
          },
          "compileOnSave": {
            "title": "Compile on Save",
            "description": "Compile the current package when a file is saved and provide linter errors.",
            "type": "boolean",
            "default": true,
            "order": 2
          },
          "additionalBuildArgs": {
            "title": "Additional build/install args",
            "description": "Arguments to pass to `go build` and `go install` commands.",
            "type": "string",
            "default": "",
            "order": 3
          },
          "additionalTestArgs": {
            "title": "Additional test args",
            "description": "Arguments to pass to `go test` commands.",
            "type": "string",
            "default": "",
            "order": 4
          },
          "buildTimeout": {
            "title": "Build Timeout",
            "description": "Stop running a build after this number of milliseconds",
            "type": "integer",
            "default": 10000,
            "order": 5
          }
        }
      },
      "autocomplete": {
        "title": "Autocomplete",
        "type": "object",
        "properties": {
          "scopeBlacklist": {
            "title": "Scope Blacklist",
            "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
            "type": "string",
            "default": ".source.go .comment, go source_file comment, .source.go .constant.numeric, go source_file int_literal, .source.go .string.quoted, go source_file block interpreted_string_literal",
            "order": 1
          },
          "suppressBuiltinAutocompleteProvider": {
            "title": "Suppress The Provider Built-In To autocomplete-plus",
            "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
            "type": "boolean",
            "default": true,
            "order": 2
          },
          "suppressActivationForCharacters": {
            "title": "Suppress Activation For Characters",
            "description": "Suggestions will not be provided when you type one of these characters.",
            "type": "array",
            "default": [
              "comma",
              "newline",
              "space",
              "tab",
              "/",
              "\\",
              "(",
              ")",
              "\"",
              "'",
              ":",
              ";",
              "<",
              ">",
              "~",
              "!",
              "@",
              "#",
              "$",
              "%",
              "^",
              "&",
              "*",
              "|",
              "+",
              "=",
              "[",
              "]",
              "{",
              "}",
              "`",
              "~",
              "?",
              "-"
            ],
            "items": {
              "type": "string"
            },
            "order": 3
          },
          "snippetMode": {
            "title": "Snippet Mode",
            "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
            "type": "string",
            "default": "name",
            "enum": [
              "name",
              "nameAndType",
              "none"
            ],
            "order": 4
          },
          "proposeBuiltins": {
            "title": "Propose Builtins",
            "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
            "type": "boolean",
            "default": true,
            "order": 5
          },
          "unimportedPackages": {
            "title": "Unimported Packages",
            "description": "Propose completions for standard library packages not explicitly imported. Default: true.",
            "type": "boolean",
            "default": true,
            "order": 6
          }
        }
      },
      "format": {
        "title": "Format",
        "type": "object",
        "properties": {
          "tool": {
            "title": "Format Tool",
            "description": "Choose one: goimports, goreturns, or gofmt",
            "type": "string",
            "default": "goimports",
            "enum": [
              "goimports",
              "goreturns",
              "gofmt"
            ],
            "order": 1
          }
        }
      },
      "get": {
        "title": "Go Get",
        "type": "object",
        "properties": {
          "timeout": {
            "title": "Timeout",
            "description": "Stop trying to update tools after this number of milliseconds",
            "type": "integer",
            "default": 60000,
            "order": 1
          }
        }
      },
      "guru": {
        "title": "Guru",
        "type": "object",
        "properties": {
          "highlightIdentifiers": {
            "title": "Highlight Identifiers When Cursor Moves",
            "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
            "type": "boolean",
            "default": true,
            "order": 1
          }
        }
      },
      "lint": {
        "title": "Lint",
        "type": "object",
        "properties": {
          "tool": {
            "title": "Linter",
            "description": "The linter that is used to lint your code",
            "type": "string",
            "default": "gometalinter",
            "enum": [
              "gometalinter",
              "revive",
              "golangci-lint"
            ],
            "order": 1
          },
          "args": {
            "title": "Linter Arguments",
            "description": "Arguments to be passed when invoking the provided linter.",
            "type": "any",
            "default": "",
            "order": 2
          }
        }
      },
      "navigator": {
        "title": "Navigator",
        "type": "object",
        "properties": {
          "mode": {
            "title": "Mode",
            "description": "Use guru or godef for go to definition",
            "type": "string",
            "default": "godef",
            "enum": [
              "guru",
              "godef"
            ],
            "order": 1
          }
        }
      },
      "test": {
        "title": "Test",
        "type": "object",
        "properties": {
          "runTestsOnSave": {
            "title": "Run Tests On Save",
            "description": "Run `go test -coverprofile` each time a file is saved",
            "type": "boolean",
            "default": true,
            "order": 1
          },
          "timeout": {
            "title": "Timeout",
            "description": "Stop running tests after this number of milliseconds",
            "type": "integer",
            "default": 60000,
            "order": 2
          },
          "runTestsWithCoverage": {
            "title": "Run Tests With Coverage",
            "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
            "type": "boolean",
            "default": true,
            "order": 3
          },
          "runTestsWithShortFlag": {
            "title": "Run Tests With Short Flag Set",
            "description": "Runs `go test` with `-short` flag set",
            "type": "boolean",
            "default": true,
            "order": 4
          },
          "runTestsWithVerboseFlag": {
            "title": "Run Tests With Verbose Flag Set",
            "description": "Runs `go test` with `-v` flag set",
            "type": "boolean",
            "default": false,
            "order": 5
          },
          "coverageHighlightMode": {
            "title": "Coverage Highlight Mode",
            "description": "Control the way that coverage highlighting occurs",
            "type": "string",
            "default": "uncovered",
            "enum": [
              "covered-and-uncovered",
              "covered",
              "uncovered",
              "disabled"
            ],
            "order": 6
          },
          "coverageDisplayMode": {
            "title": "Coverage Display Mode",
            "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
            "type": "string",
            "default": "highlight",
            "enum": [
              "highlight",
              "gutter"
            ],
            "order": 7
          }
        }
      }
    }
  }
}