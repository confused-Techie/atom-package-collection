{
  "name": "linter-clang-tidy",
  "repository": {
    "type": "git",
    "url": "https://github.com/Azkellas/linter-clang-tidy"
  },
  "downloads": 3469,
  "stargazers_count": 0,
  "releases": {
    "latest": "0.2.0"
  },
  "versions": {
    "0.2.0": {
      "name": "linter-clang-tidy",
      "main": "./lib/linter-clang-tidy",
      "version": "0.2.0",
      "description": "Linter for clang-tidy on atom",
      "keywords": [
        "linter",
        "clang",
        "clang-tidy",
        "cpp",
        "c++",
        "atom"
      ],
      "repository": "https://github.com/Azkellas/linter-clang-tidy",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "atom-package-deps": "^4.5.0",
        "atom-linter": "^10.0.0"
      },
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "configSchema": {
        "execPath": {
          "title": "Executable path",
          "type": "string",
          "default": "clang-tidy",
          "description": "Command or full path to clang-tidy",
          "order": 1
        },
        "options": {
          "type": "string",
          "description": "If you don't have a config file, try `-checks=*`",
          "default": "",
          "order": 2
        },
        "timeout": {
          "type": "number",
          "description": "Time allowed to clang-tidy to check the project, in seconds",
          "default": 60,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-clang-tidy/versions/0.2.0/tarball"
      }
    }
  },
  "readme": "# linter-clang-tidy\n\nLinter package for clang-tidy.\n\n\n## Installation\n\n* Install [clang-tidy](http://clang.llvm.org/extra/clang-tidy/) (`$ sudo apt install clang-tidy` for example)\n* `$ apm install linter-clang-tidy`\n\n\n## Package configuration\n* **Executable:** Path to your clang-tidy executable.\n* **Options:** Flags to append to the command line. Leave it empty if you have your config file (recommended).\n  Otherwise, you can try `-checks=*` to use it at its full power.\n* **Timeout:** Time before the process is stopped.\n\n\n## How to configure clang-tidy\n\n* Test all checks on existing code, with `-checks=*`\n* Create a config file with `-dump-config`. It creates a file \".clang-tidy\" that saves your configuration in the current directory.\n  clang-tidy attempts to read configuration for each source file from a _.clang-tidy_ file located in the closest parent directory of the source file.\n* See the checks enabled with `-list-checks` and edit your config file to disable those you don't need. The less you have, the faster clang-tidy.\n",
  "metadata": {
    "name": "linter-clang-tidy",
    "main": "./lib/linter-clang-tidy",
    "version": "0.2.0",
    "description": "Linter for clang-tidy on atom",
    "keywords": [
      "linter",
      "clang",
      "clang-tidy",
      "cpp",
      "c++",
      "atom"
    ],
    "repository": "https://github.com/Azkellas/linter-clang-tidy",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {
      "atom-package-deps": "^4.5.0",
      "atom-linter": "^10.0.0"
    },
    "providedServices": {
      "linter": {
        "versions": {
          "2.0.0": "provideLinter"
        }
      }
    },
    "configSchema": {
      "execPath": {
        "title": "Executable path",
        "type": "string",
        "default": "clang-tidy",
        "description": "Command or full path to clang-tidy",
        "order": 1
      },
      "options": {
        "type": "string",
        "description": "If you don't have a config file, try `-checks=*`",
        "default": "",
        "order": 2
      },
      "timeout": {
        "type": "number",
        "description": "Time allowed to clang-tidy to check the project, in seconds",
        "default": 60,
        "order": 3
      }
    }
  }
}