{
  "name": "atom-cpp-template-foldings",
  "repository": {
    "type": "git",
    "url": "https://github.com/octomarat/atom-cpp-template-foldings"
  },
  "downloads": 2022,
  "stargazers_count": 1,
  "releases": {
    "latest": "0.1.4"
  },
  "versions": {
    "0.1.4": {
      "name": "atom-cpp-template-foldings",
      "main": "./lib/atom-cpp-template-foldings",
      "version": "0.1.4",
      "description": "Fold C++ template definitions to make them more readable",
      "keywords": [
        "c++",
        "folding",
        "template"
      ],
      "activationCommands": {},
      "repository": "https://github.com/octomarat/atom-cpp-template-foldings",
      "license": "MIT",
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "dependencies": {
        "fs": "0.0.1-security",
        "os": "^0.1.1",
        "parsimmon": "^1.6.0",
        "path": "^0.12.7",
        "util": "^0.10.3"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-cpp-template-foldings/versions/0.1.4/tarball"
      }
    },
    "0.1.2": {
      "name": "atom-cpp-template-foldings",
      "main": "./lib/atom-cpp-template-foldings",
      "version": "0.1.2",
      "description": "Fold C++ template definitions to make them more readable",
      "keywords": [],
      "activationCommands": {},
      "repository": "https://github.com/octomarat/atom-cpp-template-foldings",
      "license": "MIT",
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "dependencies": {
        "fs": "0.0.1-security",
        "os": "^0.1.1",
        "parsimmon": "^1.6.0",
        "path": "^0.12.7",
        "util": "^0.10.3"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-cpp-template-foldings/versions/0.1.2/tarball"
      }
    },
    "0.1.1": {
      "name": "atom-cpp-template-foldings",
      "main": "./lib/atom-cpp-template-foldings",
      "version": "0.1.1",
      "description": "Fold C++ template definitions to make them more readable",
      "keywords": [],
      "activationCommands": {},
      "repository": "https://github.com/octomarat/atom-cpp-template-foldings",
      "license": "MIT",
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "dependencies": {
        "fs": "0.0.1-security",
        "os": "^0.1.1",
        "parsimmon": "^1.6.0",
        "path": "^0.12.7",
        "util": "^0.10.3"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-cpp-template-foldings/versions/0.1.1/tarball"
      }
    },
    "0.1.0": {
      "name": "atom-cpp-template-foldings",
      "main": "./lib/atom-cpp-template-foldings",
      "version": "0.1.0",
      "description": "Fold C++ template definitions to make them more readable",
      "keywords": [],
      "activationCommands": {},
      "repository": "https://github.com/octomarat/atom-cpp-template-foldings",
      "license": "MIT",
      "engines": {
        "atom": ">=1.9.0 <2.0.0"
      },
      "dependencies": {
        "fs": "0.0.1-security",
        "os": "^0.1.1",
        "parsimmon": "^1.6.0",
        "path": "^0.12.7",
        "util": "^0.10.3"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-cpp-template-foldings/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# atom-cpp-template-foldings\nAtom plugin that folds C++ template definitions to make them more readable.\n\n## Description\n\nC++ template definitions are wordy. This plugin finds all templates in your source file and folds their parameter lists making some simplifications. For example:\n\n![screenshot](https://raw.githubusercontent.com/octomarat/atom-cpp-template-foldings/master/resources/demo.gif)\n\nHere folding hides `typename` keywords.\n\nSimplification rules are very simple:\n\n* type template parameter: `typename` and `class` keywords are removed; if parameter has no name, `_` symbol is displayed;\n* non type template parameters: not simpified;\n* template template parameters: parameters are simplified recursively; `typename` and `class` keywords are removed; if parameter has no name, `_` symbol is displayed.\n\nThe example below demonstates most of these cases:\n\n![screenshot](https://raw.githubusercontent.com/octomarat/atom-cpp-template-foldings/master/resources/demo-complex.gif)\n\nYou can apply foldings manually or turn on auto folding on file open (from package settings).\n\n## Installation\n\nJust install the package from Atom (Edit > Prederences > Install > [type 'atom-cpp-template-foldings']).\n\n## Current issues\n\n* Templates that contain tab charactes are not processed. So, if you use tabs to indent your code, multiline template parameter lists will not be processed.\n* Folding is not performed when `Soft Wrap` option is enabled in Atom. However, if you also enable `Soft Wrap At Preferred Line Length`, everything will work.\n",
  "metadata": {
    "name": "atom-cpp-template-foldings",
    "main": "./lib/atom-cpp-template-foldings",
    "version": "0.1.4",
    "description": "Fold C++ template definitions to make them more readable",
    "keywords": [
      "c++",
      "folding",
      "template"
    ],
    "activationCommands": {},
    "repository": "https://github.com/octomarat/atom-cpp-template-foldings",
    "license": "MIT",
    "engines": {
      "atom": ">=1.9.0 <2.0.0"
    },
    "dependencies": {
      "fs": "0.0.1-security",
      "os": "^0.1.1",
      "parsimmon": "^1.6.0",
      "path": "^0.12.7",
      "util": "^0.10.3"
    }
  }
}