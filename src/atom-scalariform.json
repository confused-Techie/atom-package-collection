{
  "name": "atom-scalariform",
  "repository": {
    "type": "git",
    "url": "https://github.com/jackhopner/atom-scalariform"
  },
  "downloads": 1335,
  "stargazers_count": 1,
  "releases": {
    "latest": "1.0.0"
  },
  "versions": {
    "1.0.0": {
      "name": "atom-scalariform",
      "main": "./lib/atom-scalariform",
      "version": "1.0.0",
      "description": "Uses scalariform to format scala files",
      "keywords": [
        "scala",
        "scalariform",
        "atom",
        "atom-scalariform"
      ],
      "repository": "https://github.com/jackhopner/atom-scalariform",
      "homepage": "https://github.com/jackhopner/atom-scalariform",
      "bugs": {
        "url": "https://github.com/jackhopner/atom-scalariform/issues"
      },
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-scalariform/versions/1.0.0/tarball"
      }
    },
    "0.1.0": {
      "name": "atom-scalariform",
      "main": "./lib/atom-scalariform",
      "version": "0.1.0",
      "description": "Uses scalariform to format scala files",
      "keywords": [
        "scala",
        "scalariform",
        "atom",
        "atom-scalariform"
      ],
      "repository": "https://github.com/jackhopner/atom-scalariform",
      "homepage": "https://github.com/jackhopner/atom-scalariform",
      "bugs": {
        "url": "https://github.com/jackhopner/atom-scalariform/issues"
      },
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-scalariform/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# atom-scalariform package\n\nAllows formatting of [Scala](https://github.com/scala/scala) files using [scalariform](https://github.com/scala-ide/scalariform). It also supports [Ammonite](https://github.com/lihaoyi/Ammonite) scripts.\n\nYou can configure the `atom-scalariform` properties file to be used in your Atom config:\n```\n\"atom-scalariform\":\n  propertiesFile: \"/path/to/scalariform.properties\"\n```\n\nIf `propertiesFile` starts with `/` it is considered an absolute path, otherwise the `propertiesFile` path is considered relative to the about-to-format file's project folder.\n\n## Relative properties file path\nAssuming:\n* the file to format is located at `/home/user/myProjects/myProject/src/main/scala/com/user/Test.scala`\n* the Atom project folder is `myProject`\n* and `propertiesFile` is defined as `scalariform.properties`\n\nthe `scalariform` properties file will be loaded from `/home/user/myProjects/myProject/scalariform.properties`.\n\nIf a project folder cannot be found, the plugin will try to load the `propertiesFile` as an absolute path.\n\n## Usage\nTo format a .scala/.sc file, first save it then you can run the formatter by pressing:\n\n```\nctrl-shift-s\n```\n\nCurrently using scalariform 0.1.5 SNAPSHOT\n",
  "metadata": {
    "name": "atom-scalariform",
    "main": "./lib/atom-scalariform",
    "version": "1.0.0",
    "description": "Uses scalariform to format scala files",
    "keywords": [
      "scala",
      "scalariform",
      "atom",
      "atom-scalariform"
    ],
    "repository": "https://github.com/jackhopner/atom-scalariform",
    "homepage": "https://github.com/jackhopner/atom-scalariform",
    "bugs": {
      "url": "https://github.com/jackhopner/atom-scalariform/issues"
    },
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {}
  }
}