{
  "name": "fsync-on-save",
  "repository": {
    "type": "git",
    "url": "https://github.com/adafruit/Atom-fsync-on-save"
  },
  "downloads": 1154,
  "stargazers_count": 0,
  "releases": {
    "latest": "1.0.4"
  },
  "versions": {
    "1.0.4": {
      "name": "fsync-on-save",
      "main": "./lib/fsync-on-save",
      "version": "1.0.4",
      "description": "On file save, flush (fsync) all the data to the storage device immediately.",
      "keywords": [],
      "repository": "https://github.com/adafruit/Atom-fsync-on-save",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/fsync-on-save/versions/1.0.4/tarball"
      }
    },
    "1.0.3": {
      "name": "fsync-on-save",
      "main": "./lib/fsync-on-save",
      "version": "1.0.3",
      "description": "On file save, flush (fsync) all the data to the storage dvice immediately.",
      "keywords": [],
      "repository": "https://github.com/adafruit/Atom-fsync-on-save",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/fsync-on-save/versions/1.0.3/tarball"
      }
    },
    "1.0.2": {
      "name": "fsync-on-save",
      "main": "./lib/fsync-on-save",
      "version": "1.0.2",
      "description": "On file save, flush (fsync) all the data to the storage dvice immediately.",
      "keywords": [],
      "repository": "https://github.com/adafruit/Atom-fsync-on-save",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/fsync-on-save/versions/1.0.2/tarball"
      }
    }
  },
  "readme": "# fsync-on-save\n\nWhen Atom saves a file, sometimes you need to flush all the\ndata to the storage device immediately. For instance, you might want to\nmake sure data is written to a persistent storage medium promptly, or\na file might be on on a removable drive that may be unplugged without\nnotice.\n\nThis simple package does an `fsync()` or equivalent to write all the\ndata immediately.  The `node.js` function `fs.fsyncSync()` is called\nafter the file is written.\n\nThe original motivation for this package was to make Atom be a safe\neditor for use with [Adafruit Industries CircuitPython](https://www.adafruit.com/circuitpython).\nCircuitPython will automatically reload and restart when a file is\nwritten to the `CIRCUITPY` drive. Several operating systems do not\nwrite all data and metadata to USB drives immediately. This\ndelayed-write behavior can cause auto-reload to read an incompletely\nwritten version of the updated file (such as `main.py` or `code.py`)\nwhen CircuitPython restarts. It can also cause the `CIRCUITPY`\nfilesystem to become corrupted if the board is unplugged or reset\nbefore the file is completely written.\n\nAs of this writing, this delayed-write behavior is noticeable on\nWindows and Linux, but not on MacOS. Note that Linux may still write\nadditional metata to `CIRCUITPY` a minute or so later after saving the\nfile, causing an auto-reload. That's a different problem which this\npackage cannot address.\n",
  "metadata": {
    "name": "fsync-on-save",
    "main": "./lib/fsync-on-save",
    "version": "1.0.4",
    "description": "On file save, flush (fsync) all the data to the storage device immediately.",
    "keywords": [],
    "repository": "https://github.com/adafruit/Atom-fsync-on-save",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {}
  }
}