{
  "name": "linter-pycodestyle",
  "repository": {
    "type": "git",
    "url": "https://github.com/AtomLinter/linter-pycodestyle"
  },
  "downloads": 286100,
  "stargazers_count": 217,
  "releases": {
    "latest": "2.1.3"
  },
  "versions": {
    "2.1.3": {
      "name": "linter-pycodestyle",
      "main": "./lib/index",
      "version": "2.1.3",
      "description": "Linter plugin for pycodestyle",
      "repository": "https://github.com/AtomLinter/linter-pycodestyle",
      "license": "MIT",
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "pycodestyle",
          "description": "Semicolon separated list of paths to a binary (e.g. `/usr/local/bin/pycodestyle`). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/pycodestyle;/usr/bin/pycodestyle`"
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "title": "Ignored Error Codes",
          "type": "array",
          "default": [],
          "description": "For a list of code visit http://pycodestyle.readthedocs.org/en/latest/intro.html#error-codes"
        },
        "convertAllErrorsToWarnings": {
          "type": "boolean",
          "default": true
        },
        "forcedConfig": {
          "type": "string",
          "default": "",
          "description": "Forces `pycodestyle` to use this configuration at all times. Supports substituion of `$PROJECT` and `$PROJECT_NAME`."
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "fs-plus": "^3.0.1"
      },
      "devDependencies": {
        "eslint": "^4.4.1",
        "eslint-config-airbnb-base": "^11.3.1",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.0.1"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8",
        "pycodestyle"
      ],
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/2.1.3/tarball"
      }
    },
    "2.1.2": {
      "name": "linter-pycodestyle",
      "main": "./lib/index",
      "version": "2.1.2",
      "description": "Linter plugin for pycodestyle",
      "repository": "https://github.com/AtomLinter/linter-pycodestyle",
      "license": "MIT",
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "pycodestyle",
          "description": "Semicolon separated list of paths to a binary (e.g. `/usr/local/bin/pycodestyle`). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/pycodestyle;/usr/bin/pycodestyle`"
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "title": "Ignored Error Codes",
          "type": "array",
          "default": [],
          "description": "For a list of code visit http://pycodestyle.readthedocs.org/en/latest/intro.html#error-codes"
        },
        "convertAllErrorsToWarnings": {
          "type": "boolean",
          "default": true
        },
        "forcedConfig": {
          "type": "string",
          "default": "",
          "description": "Forces `pycodestyle` to use this configuration at all times. Supports substituion of `$PROJECT` and `$PROJECT_NAME`."
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "fs-plus": "^3.0.1"
      },
      "devDependencies": {
        "eslint": "^4.4.1",
        "eslint-config-airbnb-base": "^11.3.1",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.0.1"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8",
        "pycodestyle"
      ],
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/2.1.2/tarball"
      }
    },
    "2.1.1": {
      "name": "linter-pycodestyle",
      "main": "./lib/index",
      "version": "2.1.1",
      "description": "Linter plugin for pycodestyle",
      "repository": "https://github.com/AtomLinter/linter-pycodestyle",
      "license": "MIT",
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "pycodestyle",
          "description": "Semicolon separated list of paths to a binary (e.g. `/usr/local/bin/pycodestyle`). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/pycodestyle;/usr/bin/pycodestyle`"
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "title": "Ignored Error Codes",
          "type": "array",
          "default": [],
          "description": "For a list of code visit http://pycodestyle.readthedocs.org/en/latest/intro.html#error-codes"
        },
        "convertAllErrorsToWarnings": {
          "type": "boolean",
          "default": true
        },
        "forcedConfig": {
          "type": "string",
          "default": "",
          "description": "Forces `pycodestyle` to use this configuration at all times. Supports substituion of `$PROJECT` and `$PROJECT_NAME`."
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "fs-plus": "^3.0.1"
      },
      "devDependencies": {
        "eslint": "^4.4.1",
        "eslint-config-airbnb-base": "^11.3.1",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.0.1"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8",
        "pycodestyle"
      ],
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/2.1.1/tarball"
      }
    },
    "2.1.0": {
      "name": "linter-pycodestyle",
      "main": "./lib/index",
      "version": "2.1.0",
      "description": "Linter plugin for pycodestyle",
      "repository": "https://github.com/AtomLinter/linter-pycodestyle",
      "license": "MIT",
      "configSchema": {
        "executablePath": {
          "type": "string",
          "default": "pycodestyle",
          "description": "Semicolon separated list of paths to a binary (e.g. `/usr/local/bin/pycodestyle`). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/pycodestyle;/usr/bin/pycodestyle`"
        },
        "maxLineLength": {
          "type": "integer",
          "default": 0
        },
        "ignoreErrorCodes": {
          "title": "Ignored Error Codes",
          "type": "array",
          "default": [],
          "description": "For a list of code visit http://pycodestyle.readthedocs.org/en/latest/intro.html#error-codes"
        },
        "convertAllErrorsToWarnings": {
          "type": "boolean",
          "default": true
        },
        "forcedConfig": {
          "type": "string",
          "default": "",
          "description": "Forces `pycodestyle` to use this configuration at all times. Supports substituion of `$PROJECT` and `$PROJECT_NAME`."
        }
      },
      "scripts": {
        "test": "apm test",
        "lint": "eslint ."
      },
      "engines": {
        "atom": ">=1.7.0 <2.0.0"
      },
      "dependencies": {
        "atom-linter": "^10.0.0",
        "atom-package-deps": "^4.6.0",
        "fs-plus": "^3.0.1"
      },
      "devDependencies": {
        "eslint": "^4.4.1",
        "eslint-config-airbnb-base": "^11.3.1",
        "eslint-plugin-import": "^2.7.0",
        "jasmine-fix": "^1.0.1"
      },
      "package-deps": [
        "linter:2.0.0"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "2.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8",
        "pycodestyle"
      ],
      "eslintConfig": {
        "extends": "airbnb-base",
        "rules": {
          "global-require": "off",
          "import/no-unresolved": [
            "error",
            {
              "ignore": [
                "atom"
              ]
            }
          ]
        },
        "globals": {
          "atom": true
        },
        "env": {
          "node": true,
          "browser": true
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/2.1.0/tarball"
      }
    },
    "2.0.2": {
      "name": "linter-pycodestyle",
      "main": "./lib/main",
      "version": "2.0.2",
      "description": "Linter plugin for pycodestyle",
      "repository": "https://github.com/AtomLinter/linter-pycodestyle",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8",
        "pycodestyle"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/2.0.2/tarball"
      }
    },
    "2.0.1": {
      "name": "linter-pycodestyle",
      "main": "./lib/main",
      "version": "2.0.1",
      "description": "Linter plugin for pycodestyle",
      "repository": "https://github.com/AtomLinter/linter-pycodestyle",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8",
        "pycodestyle"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/2.0.1/tarball"
      }
    },
    "2.0.0": {
      "name": "linter-pycodestyle",
      "main": "./lib/main",
      "version": "2.0.0",
      "description": "Linter plugin for pycodestyle",
      "repository": "https://github.com/AtomLinter/linter-pycodestyle",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8",
        "pycodestyle"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/2.0.0/tarball"
      }
    },
    "1.3.3": {
      "name": "linter-pycodestyle",
      "main": "./lib/main",
      "version": "1.3.3",
      "description": "Linter plugin for pycodestyle",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8",
        "pycodestyle"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/1.3.3/tarball"
      }
    },
    "1.3.2": {
      "name": "linter-pep8",
      "main": "./lib/main",
      "version": "1.3.2",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/1.3.2/tarball"
      }
    },
    "1.3.1": {
      "name": "linter-pep8",
      "main": "./lib/main",
      "version": "1.3.1",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^8.0.0",
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/1.3.1/tarball"
      }
    },
    "1.3.0": {
      "name": "linter-pep8",
      "main": "./lib/main",
      "version": "1.3.0",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^4.6.1",
        "atom-package-deps": "^4.0.1"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/1.3.0/tarball"
      }
    },
    "1.2.1": {
      "name": "linter-pep8",
      "main": "./lib/main",
      "version": "1.2.1",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^4.3.1",
        "atom-package-deps": "^3.0.7"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "keywords": [
        "atom",
        "python",
        "linter",
        "pep8"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/1.2.1/tarball"
      }
    },
    "1.2.0": {
      "name": "linter-pep8",
      "main": "./lib/main",
      "version": "1.2.0",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^4.3.1",
        "atom-package-deps": "^3.0.7"
      },
      "package-deps": [
        "linter"
      ],
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/1.2.0/tarball"
      }
    },
    "1.1.0": {
      "name": "linter-pep8",
      "main": "./lib/main",
      "version": "1.1.0",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^4.2.0"
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/1.1.0/tarball"
      }
    },
    "1.0.1": {
      "name": "linter-pep8",
      "main": "./lib/main",
      "version": "1.0.1",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^1.0.0"
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/1.0.1/tarball"
      }
    },
    "1.0.0": {
      "name": "linter-pep8",
      "main": "./lib/main",
      "version": "1.0.0",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {
        "atom-linter": "^1.0.0"
      },
      "providedServices": {
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/1.0.0/tarball"
      }
    },
    "0.2.0": {
      "name": "linter-pep8",
      "linter-package": true,
      "main": "./lib/init",
      "version": "0.2.0",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/0.2.0/tarball"
      }
    },
    "0.1.0": {
      "name": "linter-pep8",
      "linter-package": true,
      "main": "./lib/init",
      "version": "0.1.0",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/0.1.0/tarball"
      }
    },
    "0.0.5": {
      "name": "linter-pep8",
      "linter-package": true,
      "main": "./lib/init",
      "version": "0.0.5",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/0.0.5/tarball"
      }
    },
    "0.0.4": {
      "name": "linter-pep8",
      "linter-package": true,
      "main": "./lib/init",
      "version": "0.0.4",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/0.0.4/tarball"
      }
    },
    "0.0.3": {
      "name": "linter-pep8",
      "linter-package": true,
      "main": "./lib/init",
      "version": "0.0.3",
      "description": "Linter plugin for pep8",
      "repository": "https://github.com/AtomLinter/linter-pep8",
      "license": "MIT",
      "engines": {
        "atom": ">0.50.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-pycodestyle/versions/0.0.3/tarball"
      }
    }
  },
  "readme": "# linter-pycodestyle\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/AtomLinter/linter-pycodestyle.svg)](https://greenkeeper.io/)\n\nThis linter plugin for [Linter](https://github.com/AtomLinter/Linter) provides\nan interface to [pycodestyle](https://pypi.python.org/pypi/pycodestyle). It will be used\nwith Python files.\n\n## Installation\n\nLinter package must be installed in order to use this plugin. If Linter is not\ninstalled, please follow the instructions [here](https://github.com/AtomLinter/Linter).\n\n### pycodestyle installation\n\nBefore using this plugin, you must ensure that `pycodestyle` is installed on your\nsystem. To install `pycodestyle`, do the following:\n\nInstall [pycodestyle](https://pypi.python.org/pypi/pycodestyle) by typing the following in a\nterminal:\n\n```ShellSession\npip install pycodestyle\n```\n\nNow you can proceed to install the linter-pycodestyle plugin.\n\n### Plugin installation\n\n```ShellSession\n apm install linter-pycodestyle\n```\n\n## Settings\n\nYou can configure linter-pycodestyle from the settings menu:\n\n*   **executablePath** Path to your pycodestyle executable. This is useful if you\n    have different versions of pycodestyle for Python 2 and 3 or if you are using a\n    virtualenv\n\n*   **maxLineLength** The max line length for your python code, defaults to 79\n\n*   **ignoreErrorCodes** A list of pycodestyle error codes to ignore. For a list of\n    code visit <http://pycodestyle.readthedocs.org/en/latest/intro.html#error-codes>\n\n    Example: To ignore `W191` and `E501` you would enter something like this:\n\n    ```coffeescript\n    W191, E501\n    ```\n",
  "metadata": {
    "name": "linter-pycodestyle",
    "main": "./lib/index",
    "version": "2.1.3",
    "description": "Linter plugin for pycodestyle",
    "repository": "https://github.com/AtomLinter/linter-pycodestyle",
    "license": "MIT",
    "configSchema": {
      "executablePath": {
        "type": "string",
        "default": "pycodestyle",
        "description": "Semicolon separated list of paths to a binary (e.g. `/usr/local/bin/pycodestyle`). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/.venv/bin/pycodestyle;/usr/bin/pycodestyle`"
      },
      "maxLineLength": {
        "type": "integer",
        "default": 0
      },
      "ignoreErrorCodes": {
        "title": "Ignored Error Codes",
        "type": "array",
        "default": [],
        "description": "For a list of code visit http://pycodestyle.readthedocs.org/en/latest/intro.html#error-codes"
      },
      "convertAllErrorsToWarnings": {
        "type": "boolean",
        "default": true
      },
      "forcedConfig": {
        "type": "string",
        "default": "",
        "description": "Forces `pycodestyle` to use this configuration at all times. Supports substituion of `$PROJECT` and `$PROJECT_NAME`."
      }
    },
    "scripts": {
      "test": "apm test",
      "lint": "eslint ."
    },
    "engines": {
      "atom": ">=1.7.0 <2.0.0"
    },
    "dependencies": {
      "atom-linter": "^10.0.0",
      "atom-package-deps": "^4.6.0",
      "fs-plus": "^3.0.1"
    },
    "devDependencies": {
      "eslint": "^4.4.1",
      "eslint-config-airbnb-base": "^11.3.1",
      "eslint-plugin-import": "^2.7.0",
      "jasmine-fix": "^1.0.1"
    },
    "package-deps": [
      "linter:2.0.0"
    ],
    "providedServices": {
      "linter": {
        "versions": {
          "2.0.0": "provideLinter"
        }
      }
    },
    "keywords": [
      "atom",
      "python",
      "linter",
      "pep8",
      "pycodestyle"
    ],
    "eslintConfig": {
      "extends": "airbnb-base",
      "rules": {
        "global-require": "off",
        "import/no-unresolved": [
          "error",
          {
            "ignore": [
              "atom"
            ]
          }
        ]
      },
      "globals": {
        "atom": true
      },
      "env": {
        "node": true,
        "browser": true
      }
    }
  }
}