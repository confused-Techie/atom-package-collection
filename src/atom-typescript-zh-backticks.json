{
  "name": "atom-typescript-zh-backticks",
  "repository": {
    "type": "git",
    "url": "https://github.com/ZombieHippie/atom-typescript-zh-backticks"
  },
  "downloads": 3719,
  "stargazers_count": 0,
  "releases": {
    "latest": "8.8.2-2"
  },
  "versions": {
    "8.8.2-2": {
      "name": "atom-typescript-zh-backticks",
      "version": "8.8.2-2",
      "main": "./dist/main/atomts",
      "bin": {
        "atbuild": "./dist/main/bin/atbuild"
      },
      "preferGlobal": "true",
      "description": "The only TypeScript plugin you will ever need.",
      "scripts": {
        "test": "ntsc -p ./lib",
        "build": "node scripts/grammar.js",
        "prepublish": "typings install"
      },
      "engines": {
        "atom": ">=0.199.0 <2.0.0",
        "node": "*"
      },
      "providedServices": {
        "autocomplete.provider": {
          "versions": {
            "2.0.0": "provide"
          }
        },
        "linter": {
          "versions": {
            "1.0.0": "provideLinter"
          }
        }
      },
      "consumedServices": {
        "snippets": {
          "versions": {
            "0.1.0": "consumeSnippets"
          }
        }
      },
      "homepage": "http://atom.io/packages/atom-typescript-zh-backticks",
      "repository": "https://github.com/ZombieHippie/atom-typescript-zh-backticks.git",
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/ZombieHippie/atom-typescript/issues"
      },
      "dependencies": {
        "atom-package-deps": "^2.0.3",
        "atom-space-pen-views": "^2.0.4",
        "babel": "^5.6.23",
        "basarat-text-buffer": "6.0.0",
        "d3": "^3.5.5",
        "detect-indent": "^4.0.0",
        "detect-newline": "^2.1.0",
        "emissary": "^1.3.3",
        "escape-html": "^1.0.1",
        "findup": "^0.1.5",
        "fuzzaldrin": "^2.1.0",
        "glob": "^5.0.15",
        "htmltojsx": "0.2.4",
        "immutable": "^3.7.3",
        "json2dts": "0.0.1",
        "mkdirp": "^0.5.0",
        "ntypescript": "1.201604080019.1",
        "react": "^0.13.3",
        "season": "^5.1.4",
        "tsconfig": "^2.2.0",
        "xtend": "^4.0.0"
      },
      "devDependencies": {
        "cson": "^3.0.2",
        "js-yaml": "^3.5.2",
        "mz": "^2.1.0",
        "popsicle": "^3.0.1",
        "typings": "0.7.9"
      },
      "package-deps": [
        "linter"
      ],
      "keywords": [
        "typescript",
        "javascript",
        "html"
      ],
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-typescript-zh-backticks/versions/8.8.2-2/tarball"
      }
    }
  },
  "readme": "# Atom TypeScript\n\n[![Join the chat at https://gitter.im/TypeStrong/atom-typescript](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/TypeStrong/atom-typescript?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nJavaScript developers can now just open a `.ts` file and start hacking away like they are used to. No `grunt` no `Visual Studio`. Just pure coding.\n\n## Installation\n\n1. Install [atom](https://atom.io).\n2. `apm install atom-typescript` (`apm` needs `git` in your path)\n3. Fire up atom. Open a TypeScript file. Potentially wait for further installs (just `apm install linter` if its not there already).\n\n**Additional Notes**: [Some packages we love](https://github.com/TypeStrong/atom-typescript/blob/master/docs/packages.md).\n\n## Reviews\n*Featured on the TypeScript home page under tools http://www.typescriptlang.org/* and [demoed by **Anders Hejlsberg**](https://twitter.com/schwarty/status/593858817894404096).\n\n\"I was shocked at how good it felt to poke around on the compiler with it.\" [Jonathan Turner](https://twitter.com/jntrnr)  \n\"And guess what, it worked perfectly. Like everything else! Faster than Visual Studio!\" [Daniel Earwicker](http://stackoverflow.com/users/27423/daniel-earwicker)  \n\"It's a thing of beauty - they had me at '*Type information on hover*'. Discovering  `tsconfig.json` support as well was just an enormous bonus.\" [John Reilly](https://twitter.com/johnny_reilly)  \n\"This may be your best option for editing TypeScript at the moment - very nice!\" [Rasmus Schultz](https://twitter.com/mindplaydk)\n\n[*Add yours!*](https://github.com/TypeStrong/atom-typescript/issues/66)\n\n# Features\n* Autocomplete\n* Live error analysis\n* Type information on hover\n* Compile on save\n* Project Context Support (`tsconfig.json`)\n* Project Build Support\n* `package.json` Support\n* React Support\n* Format code (configurable to be on save)\n* Goto Declaration\n* Find References\n* Block comment and uncomment\n* Goto history (goto next/previous error in open files, goto next/previous build)\n* Auto indent for new lines\n* TypeScript context menu\n* Symbols in Project\n* Symbols in File\n* Semantic View\n* Rename refactoring\n* Quick Fix\n* Toggle Breakpoint\n* Common Snippets\n* `import` / `/// <reference` relative path resolution\n* Output Toggle\n* AST visualizer\n* Dependency View\n* Sync\n\n# FAQ\nLocated online : https://github.com/TypeStrong/atom-typescript/blob/master/docs/faq.md\n\n----\n\n# Feature Details\n## Auto Complete\nInternally using AutoComplete+. Just start typing and hints will show up. Or you can explicitly trigger it using `ctrl+space` or `cmd+space`. Press `tab` to make a selection.\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/fastErrorCheckingAndAutoComplete2.gif)\n\n\n## Type information on hover\nJust hover\n\n![you definitely get the point](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/hover.png)\n\n## Compile on save\nTypeScript files will be compiled on save automatically. Different notifications are given if `emit` was successful or not. If you need to disable this feature, add `\"compileOnSave\": false` in your [`tsconfig.json`](https://github.com/TypeStrong/atom-typescript/blob/master/docs/tsconfig.md#compileonsave).\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/compile%20success.png)\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/compile%20error.png)\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/emit%20error.png)\n\n## Project Support\nSupported via [`tsconfig.json`](https://github.com/TypeStrong/atom-typescript/blob/master/docs/tsconfig.md) which is going to be the defacto Project file format for the next versions of TypeScript.\n\nIt also supports `filesGlob` which will expand `files` for you based on `minmatch|glob|regex` (similar to grunt).\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/proj.png)\n\n### Project Build Support\nShortcut: `F6`. If there are any errors they are shown as well.\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/build%20success.png)\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/build%20errors.png)\n\n## NPM Module Support\nWe have a sample NPM module : https://github.com/basarat/ts-npm-module  (trick : in tsconfig have `\"declaration\" : true` an in package.json have a `typings` field pointing to the `main` file) and its usage is demoed in https://github.com/basarat/ts-npm-module-consume.\n\n## React Support\n\n### Configuration tips\n\nCovered here : http://basarat.gitbooks.io/typescript/content/docs/jsx/tsx.html\n\n### Html to TSX\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/htmltotsx.gif)\n\n## Format Code\nShortcut : `ctrl+alt+l` or `cmd+alt+l`. Will format just the selection if you have something selected otherwise it will format the entire file.\n\nFormat on save is covered [here](https://github.com/TypeStrong/atom-typescript/blob/master/docs/tsconfig.md#formatOnSave)\n\n## Go to Declaration\nShortcut : `F12`. Will open the *first* declaration of the said item for now. (Note: some people call it Go to Definition)\n\n## Find References\nShortcut `shift+F12`. Also called *find usages*.\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/findReferences.png)\n\n## Block Comment and Uncomment\n`ctrl+/` or `cmd+/`. Does a block comment / uncomment of code.\n\n## Go to Next / Go to Previous\n`f8` and `shift+f8` respectively. This will go to next/previous *errors in open files* OR *build error* OR *references* based on which tab you have selected.\n\n## Context menu\nQuickly toggle the TypeScript panel OR select active TypeScript panel tab and other stuff using the context menu. `ctrl+;` or `cmd+;`.\n\n## Symbols View\nIntegrates with atom's symbols view (`ctrl+r` or `cmd+r`) to provide you with a list of searchable symbols in the current file.\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/symbolsView.gif)\n\n## Semantic View\nA bird's eye view of the current file. Use command `toggle semantic view`. The view updates while you edit the code. You can also click to jump to any portion of the file.\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/semanticView.png)\n\n## Project Symbols View\nAlso called Go To Type in other IDEs. Integrates with atom's project level symbols (`ctrl+shift+r` or `cmd+shift+r`) to provide you with a list of searchable symbols in the *entire typescript project*.\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/projectSymbolView.png)\n\n## Refactoring\n\n### Rename\n`f2` to initiate rename. `enter` to commit and `esc` to cancel.\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/renameRefactoring.png)\n\n## Quick Fix\nPress the `TypeScript: Quick Fix` shortcut `alt+enter` at an error location to trigger quick fixes. Select the quick fix you want and press `enter` to commit e.g\n\n### Add class members\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/addClassMember.gif)\n\n### More Quick fixes\nWe are actively adding quick fixes so [**go here for an up to date list**](https://github.com/TypeStrong/atom-typescript/blob/master/docs/quickfix.md).\n\n## Toggle Breakpoint\nUse command `TypeScript: Toggle Breakpoint` shortcut `f9`:\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/toggleBreakpoint.gif)\n\n## tsconfig validation\nWe will validate it and help you to fix it :)\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/errorcases/invalidProjectOptions/invalidProjectOptions.gif)\n\n## Snippets\n### Relative Paths\nRelative paths have traditionally been a pain, not anymore. Use `import` or `ref` and press `tab` to trigger snippet.\n\n`ref`\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/ref%20snippet.gif)\n\n`import`\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/import%20snippet.gif)\n\nNote that within the path string you get autocomplete (`ctrl+space`/`cmd+space`) for all the files in the project by filename (works for both `ref` and `import`).\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/pathChange.gif)\n\n## Output Toggle\n`ctrl+shift+m` to toggle the output co**m**piled JS file for a give TypeScript file. The keyboard shortcut is consistent with atom's markdown preview.\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/outputToggle.gif)\n\n## AST Visualizer\nCommand : `Typescript: Ast`. Useful when authoring new features.\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/astVisualizer.gif)\n\nAlso command : `TypeScript: Ast Full` that includes the `trivia` (punctuation, comments etc. received from `ts.Node.getChildren()`) as well.\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/astFull.png)\n\n## Dependency View\nCommand : `Typescript: Dependency View`. A dependency viewer for insight into the project if you use external modules. You can zoom, pan, drag points around and hover over nodes. ([more details](https://github.com/TypeStrong/atom-typescript/blob/master/docs/dependency-view.md))\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/dependencyView/teaser.png)\n\n## Sync\nWe try to keep as much of the stuff in sync while you edit code. However *in dire circumstances*:\n\n* a soft sync is done when you save a file `ctrl+s` and we will completely reprocess the *active* file. This might not fix stuff if the error is because of *some other file on the file system*.\n* `ctrl+'` or `cmd+'` : If you deleted files in the background or renamed them or jumped git branches or *something weird just happened* then sync. No need to restart your IDE :).\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/sync.gif)\n\n## Contributing\n\nLook at [CONTRIBUTING.md](https://github.com/TypeStrong/atom-typescript/blob/master/CONTRIBUTING.md) for curiosity. We work hard to keep the code as approachable as possible and are highly keen on helping you help us.\n\n## Changelog\nBreaking changes [available online](https://github.com/TypeStrong/atom-typescript/blob/master/docs/CHANGELOG.md).\n",
  "metadata": {
    "name": "atom-typescript-zh-backticks",
    "version": "8.8.2-2",
    "main": "./dist/main/atomts",
    "bin": {
      "atbuild": "./dist/main/bin/atbuild"
    },
    "preferGlobal": "true",
    "description": "The only TypeScript plugin you will ever need.",
    "scripts": {
      "test": "ntsc -p ./lib",
      "build": "node scripts/grammar.js",
      "prepublish": "typings install"
    },
    "engines": {
      "atom": ">=0.199.0 <2.0.0",
      "node": "*"
    },
    "providedServices": {
      "autocomplete.provider": {
        "versions": {
          "2.0.0": "provide"
        }
      },
      "linter": {
        "versions": {
          "1.0.0": "provideLinter"
        }
      }
    },
    "consumedServices": {
      "snippets": {
        "versions": {
          "0.1.0": "consumeSnippets"
        }
      }
    },
    "homepage": "http://atom.io/packages/atom-typescript-zh-backticks",
    "repository": "https://github.com/ZombieHippie/atom-typescript-zh-backticks.git",
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/ZombieHippie/atom-typescript/issues"
    },
    "dependencies": {
      "atom-package-deps": "^2.0.3",
      "atom-space-pen-views": "^2.0.4",
      "babel": "^5.6.23",
      "basarat-text-buffer": "6.0.0",
      "d3": "^3.5.5",
      "detect-indent": "^4.0.0",
      "detect-newline": "^2.1.0",
      "emissary": "^1.3.3",
      "escape-html": "^1.0.1",
      "findup": "^0.1.5",
      "fuzzaldrin": "^2.1.0",
      "glob": "^5.0.15",
      "htmltojsx": "0.2.4",
      "immutable": "^3.7.3",
      "json2dts": "0.0.1",
      "mkdirp": "^0.5.0",
      "ntypescript": "1.201604080019.1",
      "react": "^0.13.3",
      "season": "^5.1.4",
      "tsconfig": "^2.2.0",
      "xtend": "^4.0.0"
    },
    "devDependencies": {
      "cson": "^3.0.2",
      "js-yaml": "^3.5.2",
      "mz": "^2.1.0",
      "popsicle": "^3.0.1",
      "typings": "0.7.9"
    },
    "package-deps": [
      "linter"
    ],
    "keywords": [
      "typescript",
      "javascript",
      "html"
    ]
  }
}