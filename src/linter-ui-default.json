{
  "name": "linter-ui-default",
  "repository": {
    "type": "git",
    "url": "https://github.com/steelbrain/linter-ui-default"
  },
  "downloads": 7755748,
  "stargazers_count": 1201,
  "releases": {
    "latest": "3.4.1"
  },
  "versions": {
    "3.4.1": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.4.1",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "clean": "shx rm -rf dist",
        "types": "(tsc -p ./lib/tsconfig.json --emitDeclarationOnly || echo done) && (shx cp -r ./lib/types/ dist/types && shx rm -rf ./dist/types/linter/)",
        "build.unit": "npm run types && babel ./lib --out-dir ./dist --config-file ./babel.unit.config.json --extensions .tsx,.ts",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts --detailed-report 50",
        "test.only": "atom --test spec",
        "test": "npm run build.unit && npm run build && npm run test.only",
        "get.linter-types": "node ./scripts/get-linter-types.js",
        "benchmark": "cross-env NODE_ENV=production npm run build.unit && atom --test ./benchmark/benchmark.js",
        "prepare": "npm run get.linter-types && npm run build",
        "build-commit": "npm run clean && npm run types && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-ide-base": "3.1.1",
        "atom-package-deps": "^7.2.3",
        "disposable-event": "^2.0.0",
        "marked": "^2.1.2",
        "solid-js": "~0.26.5",
        "solid-simple-table": "0.2.6"
      },
      "devDependencies": {
        "@babel/cli": "^7.14.5",
        "@types/atom": "^1.40.10",
        "@types/chance": "^1.1.2",
        "@types/jasmine": "^3.7.7",
        "@types/lodash": "^4.14.170",
        "@types/marked": "^2.0.3",
        "@types/node": "^15.12.4",
        "@types/react": "^17.0.11",
        "@types/react-dom": "^17.0.8",
        "@types/requestidlecallback": "^0.3.1",
        "babel-preset-atomic": "^4.1.0",
        "babel-preset-solid": "~0.26.5",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.29.0",
        "eslint-config-atomic": "1.16.1",
        "gitly": "^2.1.1",
        "jasmine-fix": "^1.3.1",
        "module-alias": "^2.2.2",
        "parcel": "2.0.0-nightly.729",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3",
        "terser-config-atomic": "^0.1.1",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "electron-renderer",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-js": "solid-js/dist/solid.js",
        "solid-js/web": "solid-js/web/dist/web.js",
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module.js",
        "marked": "marked/lib/marked.esm.js"
      },
      "_moduleAliases": {
        "solid-js": "./node_modules/solid-js/dist/solid.cjs",
        "solid-js/web": "./node_modules/solid-js/web/dist/web.cjs"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.4.1/tarball"
      }
    },
    "3.4.0": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.4.0",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "clean": "shx rm -rf dist",
        "types": "(tsc -p ./lib/tsconfig.json --emitDeclarationOnly || echo done) && (shx cp -r ./lib/types/ dist/types && shx rm -rf ./dist/types/linter/)",
        "build.unit": "npm run types && babel ./lib --out-dir ./dist --config-file ./babel.unit.config.json --extensions .tsx,.ts",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts --detailed-report 50",
        "test.only": "atom --test spec",
        "test": "npm run build.unit && npm run build && npm run test.only",
        "get.linter-types": "node ./scripts/get-linter-types.js",
        "benchmark": "cross-env NODE_ENV=production npm run build.unit && atom --test ./benchmark/benchmark.js",
        "prepare": "npm run get.linter-types && npm run build",
        "build-commit": "npm run clean && npm run types && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-ide-base": "3.1.1",
        "atom-package-deps": "^7.2.3",
        "disposable-event": "^2.0.0",
        "marked": "^2.1.2",
        "solid-js": "~0.26.5",
        "solid-simple-table": "0.2.6"
      },
      "devDependencies": {
        "@babel/cli": "^7.14.5",
        "@types/atom": "^1.40.10",
        "@types/chance": "^1.1.2",
        "@types/jasmine": "^3.7.7",
        "@types/lodash": "^4.14.170",
        "@types/marked": "^2.0.3",
        "@types/node": "^15.12.4",
        "@types/react": "^17.0.11",
        "@types/react-dom": "^17.0.8",
        "@types/requestidlecallback": "^0.3.1",
        "babel-preset-atomic": "^4.1.0",
        "babel-preset-solid": "~0.26.5",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.29.0",
        "eslint-config-atomic": "1.16.1",
        "gitly": "^2.1.1",
        "jasmine-fix": "^1.3.1",
        "module-alias": "^2.2.2",
        "parcel": "2.0.0-nightly.729",
        "prettier-config-atomic": "^2.0.5",
        "shx": "^0.3.3",
        "terser-config-atomic": "^0.1.1",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "electron-renderer",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-js": "solid-js/dist/solid.js",
        "solid-js/web": "solid-js/web/dist/web.js",
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module.js",
        "marked": "marked/lib/marked.esm.js"
      },
      "_moduleAliases": {
        "solid-js": "./node_modules/solid-js/dist/solid.cjs",
        "solid-js/web": "./node_modules/solid-js/web/dist/web.cjs"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.4.0/tarball"
      }
    },
    "3.3.1": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.3.1",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "test.format": "prettier . --check",
        "lint": "eslint . --fix",
        "test.lint": "eslint .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.2.3",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.21",
        "marked": "^2.0.1",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.13.10",
        "@babel/preset-typescript": "^7.13.0",
        "@types/atom": "^1.40.10",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.7",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^2.0.0",
        "@types/node": "^14.14.35",
        "@types/react": "^17.0.3",
        "@types/react-dom": "^17.0.3",
        "atom-ide-base": "2.5.0",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.3",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.22.0",
        "eslint-config-atomic": "1.12.4",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.630",
        "prettier-config-atomic": "^1.0.1",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.3.1/tarball"
      }
    },
    "3.3.0": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.3.0",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.2.2",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.9",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.13.10",
        "@babel/preset-typescript": "^7.13.0",
        "@types/atom": "^1.40.9",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.6",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^2.0.0",
        "@types/node": "^14.14.32",
        "@types/react": "^17.0.3",
        "@types/react-dom": "^17.0.2",
        "atom-ide-base": "2.4.0",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.21.0",
        "eslint-config-atomic": "1.12.2",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.574",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.3.0/tarball"
      }
    },
    "3.2.5": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.2.5",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.2.2",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.9",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.13",
        "@babel/preset-typescript": "^7.12.13",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.25",
        "@types/react": "^17.0.1",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "2.3.4",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "1.9.0",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.574",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.2.5/tarball"
      }
    },
    "3.2.4": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.2.4",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.9",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.13",
        "@babel/preset-typescript": "^7.12.13",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.25",
        "@types/react": "^17.0.1",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "2.3.4",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "1.9.0",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.574",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.2.4/tarball"
      }
    },
    "3.2.3": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.2.3",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.9",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.13",
        "@babel/preset-typescript": "^7.12.13",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.25",
        "@types/react": "^17.0.1",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "2.3.1",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "1.9.0",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.574",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.2.3/tarball"
      }
    },
    "3.2.2": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.2.2",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.9",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.13",
        "@babel/preset-typescript": "^7.12.13",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.25",
        "@types/react": "^17.0.1",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "2.3.1",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "1.9.0",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.574",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.2.2/tarball"
      }
    },
    "3.2.1": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.2.1",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "2.3.0",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "1.7.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.562",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.2.1/tarball"
      }
    },
    "3.2.0": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.2.0",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.2.0",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "1.7.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.562",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.2.0/tarball"
      }
    },
    "3.1.1": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.1.1",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.2.0",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "1.7.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.562",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.1.1/tarball"
      }
    },
    "3.1.0": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.1.0",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.2.0",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "^1.6.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.562",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.1.0/tarball"
      }
    },
    "3.0.3": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.0.3",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.52.0",
        "electron": ">=6.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "babel.globalThis": "babel dist --out-dir dist --plugins babel-plugin-transform-globalthis --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts && npm run babel.globalThis",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.6",
        "babel-plugin-transform-globalthis": "^1.0.0",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "^1.6.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.562",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.0.3/tarball"
      }
    },
    "3.0.2": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.0.2",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.6",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "^1.6.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.440",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.0.2/tarball"
      }
    },
    "3.0.1": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.0.1",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "parcel": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build": "npm run tsc.build",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.6",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "^1.6.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.562",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.0.1/tarball"
      }
    },
    "3.0.0": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "3.0.0",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.2",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.6",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.19.0",
        "eslint-config-atomic": "^1.6.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.562",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/3.0.0/tarball"
      }
    },
    "2.5.2": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.5.2",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.6",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.18.0",
        "eslint-config-atomic": "^1.6.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.558",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.5.2/tarball"
      }
    },
    "2.5.1": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.5.1",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.6",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.18.0",
        "eslint-config-atomic": "^1.6.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.558",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.5.1/tarball"
      }
    },
    "2.5.0": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.5.0",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done && npm run babel",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done && npm run babel",
        "babel": "babel dist --out-dir dist --retain-lines",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^7.1.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.8",
        "solid-js": "^0.23.11",
        "solid-simple-table": "^0.1.4"
      },
      "devDependencies": {
        "@babel/cli": "^7.12.10",
        "@babel/preset-typescript": "^7.12.7",
        "@types/atom": "^1.40.7",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.3",
        "@types/lodash": "^4.14.168",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.22",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.6",
        "babel-preset-atomic": "^3.0.2",
        "babel-preset-solid": "^0.23.8",
        "build-commit": "0.1.4",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.18.0",
        "eslint-config-atomic": "^1.6.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.558",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "atom-package-deps": false,
            "disposable-event": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "alias": {
        "solid-simple-table": "solid-simple-table/dist/SimpleTable.module"
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        {
          "name": "intentions"
        },
        {
          "name": "linter",
          "minimumVersion": "3.0.0"
        }
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.5.0/tarball"
      }
    },
    "2.4.1": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.4.1",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.7",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.488",
        "@types/atom": "^1.40.5",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.2",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.14",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.16.0",
        "eslint-config-atomic": "^1.5.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "2.0.0-nightly.520",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.4.1/tarball"
      }
    },
    "2.4.0": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.4.0",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.7",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.488",
        "@types/atom": "^1.40.5",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.2",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.14",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.16.0",
        "eslint-config-atomic": "^1.5.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.486",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        },
        "longLineLength": {
          "title": "Long Line Length",
          "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 4000,
          "order": 10
        },
        "largeFileLineCount": {
          "title": "Large File Line Count",
          "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
          "type": "number",
          "default": 20000,
          "order": 11
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.4.0/tarball"
      }
    },
    "2.3.5": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.3.5",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.7",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.488",
        "@types/atom": "^1.40.5",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.2",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.14",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.16.0",
        "eslint-config-atomic": "^1.5.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.486",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.3.5/tarball"
      }
    },
    "2.3.4": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.3.4",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.7",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.488",
        "@types/atom": "^1.40.5",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.2",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.14",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.16.0",
        "eslint-config-atomic": "^1.5.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.486",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.3.4/tarball"
      }
    },
    "2.3.3": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.3.3",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.1.0",
        "lodash": "^4.17.20",
        "marked": "^1.2.7",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.488",
        "@types/atom": "^1.40.5",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.2",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.14",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.16.0",
        "eslint-config-atomic": "^1.5.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.486",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.3.3/tarball"
      }
    },
    "2.3.2": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.3.2",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.0.3",
        "lodash": "^4.17.20",
        "marked": "^1.2.7",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.488",
        "@types/atom": "^1.40.5",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.2",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.14",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.16.0",
        "eslint-config-atomic": "^1.5.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.486",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.3.2/tarball"
      }
    },
    "2.3.1": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.3.1",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.0.3",
        "lodash": "^4.17.20",
        "marked": "^1.2.7",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.488",
        "@types/atom": "^1.40.5",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.2",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.14",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.16.0",
        "eslint-config-atomic": "^1.5.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.486",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.3.1/tarball"
      }
    },
    "2.3.0": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.3.0",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.0.3",
        "lodash": "^4.17.20",
        "marked": "^1.2.7",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.488",
        "@types/atom": "^1.40.5",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.2",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.14",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.16.0",
        "eslint-config-atomic": "^1.5.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.486",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.3.0/tarball"
      }
    },
    "2.2.4": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.2.4",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && npm run build && npm run test.only",
        "benchmark": "cross-env NODE_ENV=production npm run tsc.build && atom --test ./benchmark/benchmark.js",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.0.3",
        "lodash": "^4.17.20",
        "marked": "^1.2.7",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.488",
        "@types/atom": "^1.40.5",
        "@types/chance": "^1.1.1",
        "@types/jasmine": "^3.6.2",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.14.14",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "chance": "^1.1.7",
        "cross-env": "^7.0.3",
        "eslint": "^7.16.0",
        "eslint-config-atomic": "^1.5.1",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.486",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.2.4/tarball"
      }
    },
    "2.2.3": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.2.3",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && apm install && npm run test.only",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.0.3",
        "lodash": "^4.17.20",
        "marked": "^1.2.2",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.479",
        "@types/atom": "^1.40.5",
        "@types/jasmine": "^3.5.12",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.6.0",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "cross-env": "^7.0.3",
        "eslint": "^7.15.0",
        "eslint-config-atomic": "^1.5.1",
        "eslint-config-steelbrain": "^5.0.0",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.477",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.2.3/tarball"
      }
    },
    "2.2.2": {
      "name": "linter-ui-default",
      "main": "./dist/index.js",
      "version": "2.2.2",
      "description": "Default UI for the Linter package",
      "keywords": [
        "linter-ui",
        "linter-ui-default"
      ],
      "repository": "https://github.com/steelbrain/linter-ui-default",
      "license": "MIT",
      "engines": {
        "atom": ">=1.19.0 <2.0.0",
        "electron": ">=5.x"
      },
      "scripts": {
        "format": "prettier --write .",
        "clean": "shx rm -rf dist .parcel-cache",
        "tsc.dev": "npm run clean && cross-env NODE_ENV=development tsc --watch -p lib/tsconfig.json || echo done",
        "tsc.build": "npm run clean && cross-env NODE_ENV=production tsc -p lib/tsconfig.json || echo done",
        "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
        "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts",
        "build.clean": "npm run clean && npm run build",
        "test.only": "atom --test spec",
        "test": "npm run tsc.build && apm install && npm run test.only",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix && npm run format",
        "prepare": "npm run build",
        "build-commit": "npm run clean && build-commit -o dist",
        "prepublishOnly": "npm run build-commit"
      },
      "dependencies": {
        "atom-package-deps": "^6.0.0",
        "disposable-event": "^1.0.3",
        "lodash": "^4.17.20",
        "marked": "^1.2.2",
        "react": "^17.0.1",
        "react-dom": "^17.0.1",
        "sb-react-table": "^1.0.2"
      },
      "devDependencies": {
        "@parcel/transformer-typescript-tsc": "^2.0.0-nightly.479",
        "@types/atom": "^1.40.5",
        "@types/jasmine": "^3.5.12",
        "@types/lodash": "^4.14.165",
        "@types/marked": "^1.2.1",
        "@types/node": "^14.6.0",
        "@types/react": "^17.0.0",
        "@types/react-dom": "^17.0.0",
        "atom-ide-base": "^2.1.1",
        "build-commit": "0.1.1",
        "cross-env": "^7.0.3",
        "eslint": "^7.15.0",
        "eslint-config-atomic": "^1.5.1",
        "eslint-config-steelbrain": "^5.0.0",
        "jasmine-fix": "^1.3.1",
        "parcel": "^2.0.0-nightly.477",
        "prettier": "^2",
        "shx": "^0.3.3",
        "typescript": "^4"
      },
      "targets": {
        "main": {
          "context": "node",
          "includeNodeModules": {
            "atom": false,
            "electron": false,
            "react": false,
            "react-dom": false,
            "atom-package-deps": false
          },
          "outputFormat": "commonjs",
          "isLibrary": true
        }
      },
      "providedServices": {
        "linter-ui": {
          "versions": {
            "1.0.0": "provideUI"
          }
        },
        "intentions:list": {
          "versions": {
            "1.0.0": "provideIntentions"
          }
        }
      },
      "consumedServices": {
        "busy-signal": {
          "versions": {
            "1.0.0": "consumeSignal"
          }
        },
        "status-bar": {
          "versions": {
            "^1.0.0": "consumeStatusBar"
          }
        }
      },
      "activationHooks": [
        "core:loaded-shell-environment"
      ],
      "package-deps": [
        "intentions",
        "linter:3.0.0"
      ],
      "configSchema": {
        "showPanel": {
          "type": "boolean",
          "description": "Show panel at the bottom of screen",
          "default": false,
          "order": 1
        },
        "showTooltip": {
          "description": "Show inline issue tooltips",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showStatusBar": {
          "description": "Show status bar with error / warning / info count at the bottom",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showDecorations": {
          "description": "Underline editor text and highlight gutter of issues",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "showProviderName": {
          "type": "boolean",
          "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
          "default": false,
          "order": 1
        },
        "useBusySignal": {
          "description": "Whether to integrate with the `busy-signal` package",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "hidePanelWhenEmpty": {
          "description": "Hide panel when there are no issues to display",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "alwaysTakeMinimumSpace": {
          "description": "Auto resizes Linter panel when there are less issues to show",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "decorateOnTreeView": {
          "type": "string",
          "description": "Underline the selected type in TreeView to indicate issues",
          "default": "Files",
          "enum": [
            "Files and Directories",
            "Files",
            "None"
          ],
          "order": 2
        },
        "panelRepresents": {
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File",
            "Current Line"
          ],
          "default": "Current File",
          "order": 2
        },
        "statusBarPosition": {
          "title": "Statusbar Position",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Left",
          "order": 2
        },
        "statusBarRepresents": {
          "title": "Statusbar Represents",
          "type": "string",
          "enum": [
            "Entire Project",
            "Current File"
          ],
          "default": "Entire Project",
          "order": 2
        },
        "statusBarClickBehavior": {
          "title": "Statusbar Click Behavior",
          "type": "string",
          "enum": [
            "Toggle Panel",
            "Toggle Status Bar Scope",
            "Jump to next issue"
          ],
          "default": "Toggle Panel",
          "order": 2
        },
        "tooltipFollows": {
          "type": "string",
          "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
          "enum": [
            "Both",
            "Mouse",
            "Keyboard"
          ],
          "default": "Both",
          "order": 2
        },
        "gutterPosition": {
          "title": "Gutter Highlights Position",
          "description": "Relative to the line numbers",
          "type": "string",
          "enum": [
            "Left",
            "Right"
          ],
          "default": "Right",
          "order": 2
        },
        "panelHeight": {
          "title": "Panel Height",
          "description": "in px",
          "type": "number",
          "default": 100,
          "order": 3
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/linter-ui-default/versions/2.2.2/tarball"
      }
    }
  },
  "readme": "# Linter-UI-Default\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/steelbrain/linter-ui-default.svg)](https://greenkeeper.io/)\n\n[![Slack Badge](https://img.shields.io/badge/chat-atom.io%20slack-blue.svg?style=flat-square)](http://atom-slack.herokuapp.com/)\n![CI](https://github.com/steelbrain/linter-ui-default/workflows/CI/badge.svg)\n[![Plugin installs!](https://img.shields.io/apm/dm/linter-ui-default.svg?style=flat-square)](https://atom.io/packages/linter-ui-default)\n[![Package version!](https://img.shields.io/apm/v/linter-ui-default.svg?style=flat-square)](https://atom.io/packages/linter-ui-default)\n[![Dependencies!](https://img.shields.io/david/steelbrain/linter-ui-default.svg?style=flat-square)](https://david-dm.org/steelbrain/linter-ui-default)\n\nThe default UI for linter.\n\n### Installation\n\nYou can install it from the CLI\n\n```\napm install linter-ui-default\n```\n\nOr you can install from Settings view by searching for `linter-ui-default`.\n\nLinter UI require a recent version of Atom. Download the latest official version from: https://atom.io/\n\n### Screenshots\n\n![tooltip](https://user-images.githubusercontent.com/16418197/106548395-8577d700-64d4-11eb-9eaa-1974f0903516.png)\n\n![tooltip with multiple messages](https://user-images.githubusercontent.com/16418197/106654351-a89a9900-655d-11eb-8af2-f6a459720bf3.png)\n\n![tooltip with fold button](https://user-images.githubusercontent.com/16418197/106548281-52354800-64d4-11eb-9d66-d26ee702cfa5.png)\n\n<!-- ![tooltip expanded](https://user-images.githubusercontent.com/16418197/106548235-421d6880-64d4-11eb-8c03-89708622043b.png) -->\n\n![full-editor](https://user-images.githubusercontent.com/16418197/110440831-b375ab80-807e-11eb-8b34-4a85b135f180.png)\n\n![panel gif](https://cloud.githubusercontent.com/assets/4278113/23879933/1ab17e2a-0872-11e7-803d-3fe0ccfc6790.gif)\n\n### License\n\nThis Project is licensed under the terms of MIT License, check the license file for more info.\n",
  "metadata": {
    "name": "linter-ui-default",
    "main": "./dist/index.js",
    "version": "3.4.1",
    "description": "Default UI for the Linter package",
    "keywords": [
      "linter-ui",
      "linter-ui-default"
    ],
    "repository": "https://github.com/steelbrain/linter-ui-default",
    "license": "MIT",
    "engines": {
      "atom": ">=1.52.0",
      "electron": ">=6.x"
    },
    "scripts": {
      "format": "prettier --write .",
      "test.format": "prettier . --check",
      "lint": "eslint . --fix",
      "test.lint": "eslint .",
      "clean": "shx rm -rf dist",
      "types": "(tsc -p ./lib/tsconfig.json --emitDeclarationOnly || echo done) && (shx cp -r ./lib/types/ dist/types && shx rm -rf ./dist/types/linter/)",
      "build.unit": "npm run types && babel ./lib --out-dir ./dist --config-file ./babel.unit.config.json --extensions .tsx,.ts",
      "dev": "cross-env NODE_ENV=development parcel watch --target main ./lib/index.ts",
      "build": "cross-env NODE_ENV=production parcel build --target main ./lib/index.ts --detailed-report 50",
      "test.only": "atom --test spec",
      "test": "npm run build.unit && npm run build && npm run test.only",
      "get.linter-types": "node ./scripts/get-linter-types.js",
      "benchmark": "cross-env NODE_ENV=production npm run build.unit && atom --test ./benchmark/benchmark.js",
      "prepare": "npm run get.linter-types && npm run build",
      "build-commit": "npm run clean && npm run types && build-commit -o dist",
      "prepublishOnly": "npm run build-commit"
    },
    "dependencies": {
      "atom-ide-base": "3.1.1",
      "atom-package-deps": "^7.2.3",
      "disposable-event": "^2.0.0",
      "marked": "^2.1.2",
      "solid-js": "~0.26.5",
      "solid-simple-table": "0.2.6"
    },
    "devDependencies": {
      "@babel/cli": "^7.14.5",
      "@types/atom": "^1.40.10",
      "@types/chance": "^1.1.2",
      "@types/jasmine": "^3.7.7",
      "@types/lodash": "^4.14.170",
      "@types/marked": "^2.0.3",
      "@types/node": "^15.12.4",
      "@types/react": "^17.0.11",
      "@types/react-dom": "^17.0.8",
      "@types/requestidlecallback": "^0.3.1",
      "babel-preset-atomic": "^4.1.0",
      "babel-preset-solid": "~0.26.5",
      "build-commit": "0.1.4",
      "chance": "^1.1.7",
      "cross-env": "^7.0.3",
      "eslint": "^7.29.0",
      "eslint-config-atomic": "1.16.1",
      "gitly": "^2.1.1",
      "jasmine-fix": "^1.3.1",
      "module-alias": "^2.2.2",
      "parcel": "2.0.0-nightly.729",
      "prettier-config-atomic": "^2.0.5",
      "shx": "^0.3.3",
      "terser-config-atomic": "^0.1.1",
      "typescript": "^4"
    },
    "targets": {
      "main": {
        "context": "electron-renderer",
        "includeNodeModules": {
          "atom": false,
          "electron": false,
          "atom-package-deps": false,
          "disposable-event": false
        },
        "outputFormat": "commonjs",
        "isLibrary": true
      }
    },
    "alias": {
      "solid-js": "solid-js/dist/solid.js",
      "solid-js/web": "solid-js/web/dist/web.js",
      "solid-simple-table": "solid-simple-table/dist/SimpleTable.module.js",
      "marked": "marked/lib/marked.esm.js"
    },
    "_moduleAliases": {
      "solid-js": "./node_modules/solid-js/dist/solid.cjs",
      "solid-js/web": "./node_modules/solid-js/web/dist/web.cjs"
    },
    "providedServices": {
      "linter-ui": {
        "versions": {
          "1.0.0": "provideUI"
        }
      },
      "intentions:list": {
        "versions": {
          "1.0.0": "provideIntentions"
        }
      }
    },
    "consumedServices": {
      "busy-signal": {
        "versions": {
          "1.0.0": "consumeSignal"
        }
      },
      "status-bar": {
        "versions": {
          "^1.0.0": "consumeStatusBar"
        }
      }
    },
    "activationHooks": [
      "core:loaded-shell-environment"
    ],
    "package-deps": [
      {
        "name": "intentions"
      },
      {
        "name": "linter",
        "minimumVersion": "3.0.0"
      }
    ],
    "configSchema": {
      "showPanel": {
        "type": "boolean",
        "description": "Show panel at the bottom of screen",
        "default": false,
        "order": 1
      },
      "showTooltip": {
        "description": "Show inline issue tooltips",
        "type": "boolean",
        "default": true,
        "order": 1
      },
      "showStatusBar": {
        "description": "Show status bar with error / warning / info count at the bottom",
        "type": "boolean",
        "default": true,
        "order": 1
      },
      "showDecorations": {
        "description": "Underline editor text and highlight gutter of issues",
        "type": "boolean",
        "default": true,
        "order": 1
      },
      "showProviderName": {
        "type": "boolean",
        "description": "Show provider name in tooltip (Hint: It's always shown in the panel)",
        "default": false,
        "order": 1
      },
      "useBusySignal": {
        "description": "Whether to integrate with the `busy-signal` package",
        "type": "boolean",
        "default": true,
        "order": 1
      },
      "hidePanelWhenEmpty": {
        "description": "Hide panel when there are no issues to display",
        "type": "boolean",
        "default": true,
        "order": 1
      },
      "alwaysTakeMinimumSpace": {
        "description": "Auto resizes Linter panel when there are less issues to show",
        "type": "boolean",
        "default": false,
        "order": 1
      },
      "decorateOnTreeView": {
        "type": "string",
        "description": "Underline the selected type in TreeView to indicate issues",
        "default": "Files",
        "enum": [
          "Files and Directories",
          "Files",
          "None"
        ],
        "order": 2
      },
      "panelRepresents": {
        "type": "string",
        "enum": [
          "Entire Project",
          "Current File",
          "Current Line"
        ],
        "default": "Current File",
        "order": 2
      },
      "statusBarPosition": {
        "title": "Statusbar Position",
        "type": "string",
        "enum": [
          "Left",
          "Right"
        ],
        "default": "Left",
        "order": 2
      },
      "statusBarRepresents": {
        "title": "Statusbar Represents",
        "type": "string",
        "enum": [
          "Entire Project",
          "Current File"
        ],
        "default": "Entire Project",
        "order": 2
      },
      "statusBarClickBehavior": {
        "title": "Statusbar Click Behavior",
        "type": "string",
        "enum": [
          "Toggle Panel",
          "Toggle Status Bar Scope",
          "Jump to next issue"
        ],
        "default": "Toggle Panel",
        "order": 2
      },
      "tooltipFollows": {
        "type": "string",
        "description": "Choose whether tooltips show on mouseover, or follow the keyboard cursor",
        "enum": [
          "Both",
          "Mouse",
          "Keyboard"
        ],
        "default": "Both",
        "order": 2
      },
      "gutterPosition": {
        "title": "Gutter Highlights Position",
        "description": "Relative to the line numbers",
        "type": "string",
        "enum": [
          "Left",
          "Right"
        ],
        "default": "Right",
        "order": 2
      },
      "panelHeight": {
        "title": "Panel Height",
        "description": "in px",
        "type": "number",
        "default": 100,
        "order": 3
      },
      "longLineLength": {
        "title": "Long Line Length",
        "description": "If an editor has a line with a length more than this number, linter will skip adding inline linter markers.",
        "type": "number",
        "default": 4000,
        "order": 10
      },
      "largeFileLineCount": {
        "title": "Large File Line Count",
        "description": "If an editor more line numbers than this number, linter will skip adding inline linter markers.",
        "type": "number",
        "default": 20000,
        "order": 11
      }
    }
  }
}