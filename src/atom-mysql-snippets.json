{
  "name": "atom-mysql-snippets",
  "repository": {
    "type": "git",
    "url": "https://github.com/cliffordfajardo/atom-mysql-snippets"
  },
  "downloads": 14341,
  "stargazers_count": 10,
  "releases": {
    "latest": "0.3.1"
  },
  "versions": {
    "0.3.1": {
      "name": "atom-mysql-snippets",
      "version": "0.3.1",
      "description": "A collection of MySQL commands for optimizing modern MySQL development productivity.",
      "private": true,
      "repository": "https://github.com/cliffordfajardo/atom-mysql-snippets",
      "bugs": {
        "url": "https://github.com/cliffordfajardo/atom-mysql-snippets/issues"
      },
      "author": {
        "name": "Clifford Fajardo",
        "email": "cliffordfajardo@gmail.com",
        "url": "twitter.com/cliffordfajard0"
      },
      "keywords": [
        "code snippets",
        "database snippets",
        "database productivity",
        "mysql",
        "mysql productivity",
        "mysql shortcuts",
        "mysql snippets",
        "mysql workflow",
        "sql",
        "sql productivity",
        "sql snippets",
        "sql shortcuts",
        "sql workflow",
        "productivity",
        "snippets",
        "zen coding"
      ],
      "contributors": [],
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-mysql-snippets/versions/0.3.1/tarball"
      }
    },
    "0.3.0": {
      "name": "atom-mysql-snippets",
      "version": "0.3.0",
      "description": "A collection of MySQL commands for optimizing modern MySQL development productivity.",
      "private": true,
      "repository": "https://github.com/cliffordfajardo/atom-mysql-snippets",
      "bugs": {
        "url": "https://github.com/cliffordfajardo/atom-mysql-snippets/issues"
      },
      "author": {
        "name": "Clifford Fajardo",
        "email": "cliffordfajardo@gmail.com",
        "url": "twitter.com/cliffordfajard0"
      },
      "keywords": [
        "code snippets",
        "database snippets",
        "database productivity",
        "mysql",
        "mysql productivity",
        "mysql shortcuts",
        "mysql snippets",
        "mysql workflow",
        "sql",
        "sql productivity",
        "sql snippets",
        "sql shortcuts",
        "sql workflow",
        "productivity",
        "snippets",
        "zen coding"
      ],
      "contributors": [],
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-mysql-snippets/versions/0.3.0/tarball"
      }
    },
    "0.2.0": {
      "name": "atom-mysql-snippets",
      "version": "0.2.0",
      "description": "A collection of MySQL commands for optimizing modern MySQL development productivity.",
      "private": true,
      "repository": "https://github.com/cliffordfajardo/atom-mysql-snippets",
      "bugs": {
        "url": "https://github.com/cliffordfajardo/atom-mysql-snippets/issues"
      },
      "author": {
        "name": "Clifford Fajardo",
        "email": "cliffordfajardo@gmail.com",
        "url": "twitter.com/cliffordfajard0"
      },
      "keywords": [
        "code snippets",
        "database snippets",
        "database productivity",
        "mysql",
        "mysql productivity",
        "mysql shortcuts",
        "mysql snippets",
        "mysql workflow",
        "sql",
        "sql productivity",
        "sql snippets",
        "sql shortcuts",
        "sql workflow",
        "productivity",
        "snippets",
        "zen coding"
      ],
      "contributors": [],
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {},
      "dist": {
        "tarball": "https://www.atom.io/api/packages/atom-mysql-snippets/versions/0.2.0/tarball"
      }
    }
  },
  "readme": "# Atom MySQL Snippets\n\n> A collection of MySQL commands for optimizing modern MySQL development productivity.\n\n![](https://raw.githubusercontent.com/cliffordfajardo/atom-mysql-snippets/master/atom-mysql-snippets-demo.gif)\n\n![The MIT License](https://img.shields.io/npm/l/express.svg)\n[![apm](https://img.shields.io/apm/v/atom-mysql-snippets.svg?style=flat-square)](https://atom.io/packages/atom-mysql-snippets)\n[![apm](https://img.shields.io/apm/dm/atom-mysql-snippets.svg?style=flat-square)](https://atom.io/packages/atom-mysql-snippets)\n\n\n\n## Install\n\n```shell\n$ apm install atom-mysql-snippets\n```\n\n\n\n\n\n\n\n\n\n\n### Contributing/Suggestions\n\nFeel free to let me know ([link](https://github.com/cliffordfajardo/atom-mysql-snippets/issues)) what else can be improved/added or you can also submit a PR.\n\n\n\n\n\n\n\n\n\n\n## Snippets Overview\n- [Database](#database)\n- [Table](#table)\n- [Table components](#create-table-components)\n- [Insert](#insert)\n- [Select](#select)\n- [Query options](#query-options)\n- [Update](#update)\n- [Delete](#delete)\n- [Alter](#alter---modify-anything)\n- [Trigger](#trigger)\n- [Procedure](#procedure)\n- [Function](#function)\n- [Constructions](#constructions)\n- [Show](#show)\n- [User](#user)\n- [Privileges](#privileges)\n- [Other](#other)\n\n\n\n\n\n\n\n\n\n\n### Database\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-db             | create a new database |\n| s-db-drop        | delete the database |\n\n\n\n\n\n\n\n\n\n\n### Table\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-table | create simple table with INT primary key |\n| s--table | create simple table with INT primary key, but first remove the old table |\n| s-table-tmp | create simple temporary table with engine=memory |\n| s--table-tmp | the same, but first remove the old table |\n\n**s-many-many** - Very powerful snippet! Make table for relation *many-to-many*, make two foreign key constrain, and two indexes in it and make two indexes in corresponding tables\n\n\n\n\n\n\n\n\n\n\n### Create Table components\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-fk | make foreign key constrain for table creation |\n| s--fk | make foreign key constrain for table creation with corresponding indexes |\n| s-idx | make default index for table creation |\n| s-idx-txt | make `FULLTEXT` index for table creation |\n| s-pk | make primary key |\n| s-uk | make unique key |\n\n\n\n\n\n\n\n\n\n\n### Insert\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-i | insert multirow |\n| s-ione | insert one row |\n| s-ifrom | isert data from a sample(other table or database)|\n\n\n\n\n\n\n\n\n\n\n### Select\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-s       | default *select* for extending with help *query-options* |\n| s-sone    | *select* one row by *where* condition |\n| s-sinline | inline *select* for simple a sample |\n| s-smin    | inline *select* for search *min* value |\n| s-smax    | inline *select* for search *max* value |\n| s-scount  | inline *select* for count rows in the table |\n| s-ss      | select a value `SELECT '...';` |\n| s-sv      | select a variable `SELECT `...`;` |\n\n\n\n\n\n\n\n\n\n\n### Query options\n\n**Expressions**\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-| the entity. Like `` `table`.`column` ``|\n| s--| the entity with a comma. Like ``, `table`.`column` ``|\n| s-alias | the entity with alias. Like `` `table`.`column` AS `my_col` ``|\n| s--alias | the same with comma. Like ``, `table`.`column` AS `my_col` ``|\n| s-and | a part of conditions `` AND ( ... ) `` |\n| s-or | a part of conditions `` OR ( ... ) `` |\n| s--and | a part of conditions with expression `` AND ( `col` = `col2` ) `` |\n| s--or | a part of conditions with expression `` OR ( `col` = `col2` ) `` |\n| s-e | an expression ``( `col` = `col2` )``|\n\n**Statements**\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-f |`from` statement like `` FROM `table` AS `alias` ``|\n| s-j |`inner join` statement |\n| s-jleft |`left join` statement |\n| s-jright |`right join` statement |\n| s-w |`where` statement |\n| s-o |`order by` statement |\n| s-l |`limi` statement |\n| s-g |`group by` statement |\n| s-h |`having` statement |\n| s-u |`union` statement |\n\n\n\n\n\n\n\n\n\n\n### Update\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-u | default `update` snippet with `where` condition |\n\n\n\n\n\n\n\n\n\n\n### Delete\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-d | default `delete` snippet with `where` condition |\n\n\n\n\n\n\n\n\n\n\n### Alter - modify structure\nAll `alter` snippets begining from ``s-alter-*`` prefix, like `s-alter-add`.\n\n**Columns**\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| add | add a column to table at the last column |\n| add-first | add a column to table at the first column |\n| add-after | add a column to table after someone column |\n| auto-increment | change `auto_increment` counter value |\n| change |`change` the column(rename or change type)|\n| modify |`modify` the column(change type and column order)|\n| drop | drop the column from the table |\n\n**Other**\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| idx           | add an index to the table |\n| idx-drop      | drop the index from the table |\n| order         | sort the table by column(yes it indeed possible!) |\n| table-rename  | rename the table |\n| table-charset | change table charset and collate |\n| db-charset    | change database charset and collate |\n| fk            | add foreign key to the table |\n| -fk           | add foreign key to the table with index |\n| fk-drop       | drop the foreign key from the table |\n| uk            | add unique key to exists table |\n\n\n\n\n\n\n\n\n\n\n### Trigger\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-trig | create new trigger |\n| s--trig | replace trigger(drop and create new)|\n| s-trig-list | list triggers for table |\n| s--trig-list | list triggers for table(also specify DB)|\n| s-trig-drop | drop the trigger |\n\n\n\n\n\n\n\n\n\n\n### Procedure\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-proc | create new storage procedure |\n| s--proc | replace procedure(drop and create new)|\n| s-proc-drop | drop the storage procedure |\n| s-proc-list | show stored procedures list(only current database)|\n\n\n\n\n\n\n\n\n\n\n### Function\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-func | create new function |\n| s--func | replace function(drop and create new)|\n| s-func-drop | drop the function |\n| s-func-list | show list of user-defined functions(only current database)|\n\n\n\n\n\n\n\n\n\n\n### Show\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-hcols   | details of the table (`SHOW FULL COLUMNS FROM ...`) |\n| s-hcreate | show command for creating the table |\n| s-hidx    | show indexes for the table |\n| s-hrel    | show relations of a table (using `information_schema`) |\n\n\n\n\n\n\n\n\n\n\n### Constructions\n\n**Declare**\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-dec     | declare a variable |\n| s--dec    | declare a variable with default value |\n| s-dec-s   | declare a *string*(`VARCHAR`) variable |\n| s--dec-s  | declare a *string*(`VARCHAR`) variable with default value |\n| s-dec-h   | declare a `CONTINUE `*`HANDLER`*` FOR SQLSTATE`|\n| s-dec-cur | declare a cursor |\n\n\n**Condition**\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-if  | create `if`  statement |\n| s--if | create `if else` statement |\n\n\n**Case**\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-case     | `CASE var_name WHEN 'value' THEN ... END CASE` - value based |\n| s-case-w   | `WHEN 'value' THEN ... ;` - value based |\n| s-case-wb  | `WHEN 'value' THEN BEGIN ... END;` - value based |\n| s--case    | `CASE WHEN var_name = 'value' THEN ... END CASE` - condition based |\n| s--case-w  | `WHEN var_name = 'value' THEN ... ;` - condition based |\n| s--case-wb | `WHEN var_name = 'value' THEN BEGIN ... END;` - condition based |\n\n\n**Loops**\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-loop    | `LOOP ... END LOOP` - Complex snippet. With additional logic! |\n| s-repeat  | `REPEAT ... UNTIL ... END REPEAT` construct |\n| s--repeat | `REPEAT BEGIN ... END; UNTIL ... END REPEAT` construct |\n\n\n**Other**\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-cur | powerful complex snippet! Makes ready to use cursor |\n\n\n\n\n\n\n\n\n\n\n### User\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-user-list | list all users |\n| s-user-add | create a new user |\n| s--user-add | create a new user with a password (short access `s--u`)|\n| s-user-add-hash | create new user with a password by hash |\n| s-user-drop | remove user |\n| s-user-pwd | change user password |\n\n\n\n\n\n\n\n\n\n\n### Privileges\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-priv-refresh | command `flush priveleges`|\n| s-priv-add | add some privileges to user |\n| s-priv-add-all | add _all_ privileges to user |\n| s-priv-drop | remove some privileges from user |\n| s-priv-drop-all | remove _all_ privileges from user |\n| s-priv-list | show list of user privileges |\n\n\n\n\n\n\n\n\n\n\n### Other\n\n| Snippet Code     | Description    |\n| -----------------|----------------|\n| s-delim | make `delimiter $$` statement and at the end `delimiter ;`\n| s-utc | select current `timestamp`|\n\n\n\n\n\n\n\n\n\n\n### Contact Me\n- [@github/cliffordfajardo](https://github.com/cliffordfajardo/)\n- [@twitter/cliffordfajard0](https://twitter.com/cliffordfajard0)\n\n\n\n\n\n\n\n\n\n\n### Credits\n- [Idleberg](https://atom.io/users/idleberg/) for his [Atomizer](https://atom.io/packages/atomizr) package that helped me convert Sublime snippets into Atom's format.\n- [ancor-dev](https://github.com/ancor-dev) for his [sublime-sql-snippets package](https://github.com/ancor-dev/sublime-sql-snippets), which I used for the snippets in this package.\n",
  "metadata": {
    "name": "atom-mysql-snippets",
    "version": "0.3.1",
    "description": "A collection of MySQL commands for optimizing modern MySQL development productivity.",
    "private": true,
    "repository": "https://github.com/cliffordfajardo/atom-mysql-snippets",
    "bugs": {
      "url": "https://github.com/cliffordfajardo/atom-mysql-snippets/issues"
    },
    "author": {
      "name": "Clifford Fajardo",
      "email": "cliffordfajardo@gmail.com",
      "url": "twitter.com/cliffordfajard0"
    },
    "keywords": [
      "code snippets",
      "database snippets",
      "database productivity",
      "mysql",
      "mysql productivity",
      "mysql shortcuts",
      "mysql snippets",
      "mysql workflow",
      "sql",
      "sql productivity",
      "sql snippets",
      "sql shortcuts",
      "sql workflow",
      "productivity",
      "snippets",
      "zen coding"
    ],
    "contributors": [],
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {}
  }
}