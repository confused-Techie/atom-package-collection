{
  "name": "hydrogen-python",
  "repository": {
    "type": "git",
    "url": "https://github.com/nikitakit/hydrogen-python"
  },
  "downloads": 66119,
  "stargazers_count": 24,
  "releases": {
    "latest": "0.0.8"
  },
  "versions": {
    "0.0.8": {
      "name": "hydrogen-python",
      "main": "./lib/main",
      "version": "0.0.8",
      "description": "Python language-specific extensions for hydrogen",
      "keywords": [
        "hydrogen",
        "jupyter",
        "ipython"
      ],
      "consumedServices": {
        "hydrogen.provider": {
          "versions": {
            "^1.2.0": "consumeHydrogen"
          }
        }
      },
      "repository": "https://github.com/nikitakit/hydrogen-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "scripts": {
        "lint": "eslint ."
      },
      "dependencies": {
        "react": "^16.2.0",
        "react-dom": "^16.2.0",
        "react-table": "^6.7.6",
        "strip-indent": "^2.0.0",
        "uuid": "^3.0.1"
      },
      "package-deps": [
        "hydrogen"
      ],
      "devDependencies": {
        "babel-eslint": "^7.1.0",
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.1",
        "eslint-plugin-import": "^2.2.0"
      },
      "configSchema": {
        "expandCode": {
          "title": "Extend Executable Code [experimental]",
          "type": "boolean",
          "default": "false",
          "description": "When a line is executed without selection, hydrogen only passes on code up that is indented compared to the current line. In python that unfortunately does not always work, because some control structures (e.g. else) continue on the same indentation level. Enabling this setting expands the executed code beyond what hydrogen suggests on the basis of the indentation level. The statements which trigger such extension can be defined below. *Warning:* The hydrogen tick markers are unfortunately _not_ moved to the right location."
        },
        "expandCodeList": {
          "title": "Code to Expand",
          "type": "array",
          "default": [
            "else",
            "elif",
            "except",
            "finally",
            "\\}",
            "\\]",
            "\\)"
          ],
          "description": "If the above setting is enabled, this list will be passed to a regex. Any of these items in the list need to occur on the same intentation level as the first line. You may define your own custom elements to modify the code to your preferred behaviour. In the default setting, else, elif, except, finally, as well as all closing braces are expanded on."
        },
        "prependCodeList": {
          "title": "Code to Expand Before the Execution",
          "type": "array",
          "default": [
            "@"
          ],
          "description": "If the above setting is enabled, this list will be passed to a regex. Any of these items in the list need to occur on the same intentation level as the first line. You may define your own custom elements to modify the code to your preferred behaviour. In the default setting, the @ decorator is prepended."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/hydrogen-python/versions/0.0.8/tarball"
      }
    },
    "0.0.7": {
      "name": "hydrogen-python",
      "main": "./lib/main",
      "version": "0.0.7",
      "description": "Python language-specific extensions for hydrogen",
      "keywords": [
        "hydrogen",
        "jupyter",
        "ipython"
      ],
      "consumedServices": {
        "hydrogen.provider": {
          "versions": {
            "^1.2.0": "consumeHydrogen"
          }
        }
      },
      "repository": "https://github.com/nikitakit/hydrogen-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "scripts": {
        "lint": "eslint ."
      },
      "dependencies": {
        "react": "^16.2.0",
        "react-dom": "^16.2.0",
        "react-table": "^6.7.6",
        "strip-indent": "^2.0.0",
        "uuid": "^3.0.1"
      },
      "package-deps": [
        "hydrogen"
      ],
      "devDependencies": {
        "babel-eslint": "^7.1.0",
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.1",
        "eslint-plugin-import": "^2.2.0"
      },
      "configSchema": {
        "expandCode": {
          "title": "Extend Executable Code [experimental]",
          "type": "boolean",
          "default": "false",
          "description": "When a line is executed without selection, hydrogen only passes on code up that is indented compared to the current line. In python that unfortunately does not always work, because some control structures (e.g. else) continue on the same indentation level. Enabling this setting expands the executed code beyond what hydrogen suggests on the basis of the indentation level. The statements which trigger such extension can be defined below. *Warning:* The hydrogen tick markers are unfortunately _not_ moved to the right location."
        },
        "expandCodeList": {
          "title": "Code to Expand",
          "type": "array",
          "default": [
            "else",
            "elif",
            "except",
            "finally",
            "\\}",
            "\\]",
            "\\)"
          ],
          "description": "If the above setting is enabled, this list will be passed to a regex. Any of these items in the list need to occur on the same intentation level as the first line. You may define your own custom elements to modify the code to your preferred behaviour. In the default setting, else, elif, except, finally, as well as all closing braces are expanded on."
        },
        "prependCodeList": {
          "title": "Code to Expand Before the Execution",
          "type": "array",
          "default": [
            "@"
          ],
          "description": "If the above setting is enabled, this list will be passed to a regex. Any of these items in the list need to occur on the same intentation level as the first line. You may define your own custom elements to modify the code to your preferred behaviour. In the default setting, the @ decorator is prepended."
        }
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/hydrogen-python/versions/0.0.7/tarball"
      }
    },
    "0.0.6": {
      "name": "hydrogen-python",
      "main": "./lib/main",
      "version": "0.0.6",
      "description": "Python language-specific extensions for hydrogen",
      "keywords": [
        "hydrogen",
        "jupyter",
        "ipython"
      ],
      "consumedServices": {
        "hydrogen.provider": {
          "versions": {
            "^1.2.0": "consumeHydrogen"
          }
        }
      },
      "repository": "https://github.com/nikitakit/hydrogen-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "scripts": {
        "lint": "eslint ."
      },
      "dependencies": {
        "react": "^16.2.0",
        "react-dom": "^16.2.0",
        "react-table": "^6.7.6",
        "strip-indent": "^2.0.0",
        "uuid": "^3.0.1"
      },
      "package-deps": [
        "hydrogen"
      ],
      "devDependencies": {
        "babel-eslint": "^7.1.0",
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.1",
        "eslint-plugin-import": "^2.2.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/hydrogen-python/versions/0.0.6/tarball"
      }
    },
    "0.0.5": {
      "name": "hydrogen-python",
      "main": "./lib/main",
      "version": "0.0.5",
      "description": "Python language-specific extensions for hydrogen",
      "keywords": [
        "hydrogen",
        "jupyter",
        "ipython"
      ],
      "consumedServices": {
        "hydrogen.provider": {
          "versions": {
            "^1.2.0": "consumeHydrogen"
          }
        }
      },
      "repository": "https://github.com/nikitakit/hydrogen-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "scripts": {
        "lint": "eslint ."
      },
      "dependencies": {
        "react": "^16.2.0",
        "react-dom": "^16.2.0",
        "react-table": "^6.7.6",
        "strip-indent": "^2.0.0",
        "uuid": "^3.0.1"
      },
      "package-deps": [
        "hydrogen"
      ],
      "devDependencies": {
        "babel-eslint": "^7.1.0",
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.1",
        "eslint-plugin-import": "^2.2.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/hydrogen-python/versions/0.0.5/tarball"
      }
    },
    "0.0.4": {
      "name": "hydrogen-python",
      "main": "./lib/main",
      "version": "0.0.4",
      "description": "Python language-specific extensions for hydrogen",
      "keywords": [
        "hydrogen",
        "jupyter",
        "ipython"
      ],
      "consumedServices": {
        "hydrogen.provider": {
          "versions": {
            "^1.2.0": "consumeHydrogen"
          }
        }
      },
      "repository": "https://github.com/nikitakit/hydrogen-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "scripts": {
        "lint": "eslint ."
      },
      "dependencies": {
        "react": "^16.2.0",
        "react-dom": "^16.2.0",
        "react-table": "^6.7.6",
        "strip-indent": "^2.0.0",
        "uuid": "^3.0.1"
      },
      "package-deps": [
        "hydrogen"
      ],
      "devDependencies": {
        "babel-eslint": "^7.1.0",
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.1",
        "eslint-plugin-import": "^2.2.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/hydrogen-python/versions/0.0.4/tarball"
      }
    },
    "0.0.3": {
      "name": "hydrogen-python",
      "main": "./lib/main",
      "version": "0.0.3",
      "description": "Python language-specific extensions for hydrogen",
      "keywords": [
        "hydrogen",
        "jupyter",
        "ipython"
      ],
      "consumedServices": {
        "hydrogen.provider": {
          "versions": {
            "^1.2.0": "consumeHydrogen"
          }
        }
      },
      "repository": "https://github.com/nikitakit/hydrogen-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "scripts": {
        "lint": "eslint ."
      },
      "dependencies": {
        "react": "^16.2.0",
        "react-dom": "^16.2.0",
        "react-table": "^6.7.6",
        "strip-indent": "^2.0.0",
        "uuid": "^3.0.1"
      },
      "package-deps": [
        "hydrogen"
      ],
      "devDependencies": {
        "babel-eslint": "^7.1.0",
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.1",
        "eslint-plugin-import": "^2.2.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/hydrogen-python/versions/0.0.3/tarball"
      }
    },
    "0.0.2": {
      "name": "hydrogen-python",
      "main": "./lib/main",
      "version": "0.0.2",
      "description": "Python language-specific extensions for hydrogen",
      "keywords": [
        "hydrogen",
        "jupyter",
        "ipython"
      ],
      "consumedServices": {
        "hydrogen.provider": {
          "versions": {
            "^1.2.0": "consumeHydrogen"
          }
        }
      },
      "repository": "https://github.com/nikitakit/hydrogen-python",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "scripts": {
        "lint": "eslint ."
      },
      "dependencies": {
        "react": "^16.2.0",
        "react-dom": "^16.2.0",
        "react-table": "^6.7.6",
        "strip-indent": "^2.0.0",
        "uuid": "^3.0.1"
      },
      "package-deps": [
        "hydrogen"
      ],
      "devDependencies": {
        "babel-eslint": "^7.1.0",
        "eslint": "^3.9.1",
        "eslint-config-airbnb-base": "^10.0.1",
        "eslint-plugin-import": "^2.2.0"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/hydrogen-python/versions/0.0.2/tarball"
      }
    }
  },
  "readme": "# Python language-specific extensions for Hydrogen\n\nFeatures:\n* Variable explorer (see [nteract/hydrogen#64]( https://github.com/nteract/hydrogen/issues/64))\n* Allows running code with common leading whitespace when there are empty lines at the start (see [nteract/hydrogen#862]( https://github.com/nteract/hydrogen/issues/862))\n* Extend executable code to include `else` clauses, decorators, and more (experimental, must be manually enabled in the package settings)\n\nCompatibility:\n* [Hydrogen](https://github.com/nteract/hydrogen) version 2.3.0 or later\n* Variable explorer has only been tested to work with Python 3.5 or later. Pull requests to add Python 2 support are welcome.\n\n## Feature: Variable Explorer\n\nActivate using the _\"Hydrogen Python: Toggle Variable Explorer\"_ command.\n\nThis feature is currently in proof-of-concept status. Please file an issue about any functionality you want to have in the variable exploror!\n\n## Feature: Extend Executable Code [experimental]\n\nWhen a line is executed without selection, hydrogen only passes on code up that is indented compared to the current line.\nIn python that unfortunately does not always work, because some control structures (e.g. else) continue on the same indentation level.\nFor example, the following code block would only execute the `if` statement, but not the `else` statement when the `Run and Move Down` or the `Run` commands are used.\n\n```python\nif False:\n    print('False')\nelse:\n    print('True')\n# with `Run` or `Run and Move Down`\n# there is no output in standard hydrogen\n# as the else block is not included\n```\n\nEnabling the setting `Extend Executable Code` (by default it is disabled!) expands the executed code beyond what hydrogen suggests on the basis of the indentation level.\nA list of strings for which the code is extended can be defined.\nIn the default setting, `else`, `elif`, `except`, `finally`, as well as all closing braces are included in the expansion.\n\n**Warning:** Note with all this, that as of now the hydrogen tick markers are unfortunately _not_ moved to the right location. They still remain where the original code selection of hydrogen ended.\n\nWhen enabling the setting, examples like the following should work as expected:\n\n```python\nsomeDictionary = {\n    'one': 1\n}\n\nsomeList = [\n    1,\n    2,\n    3\n]\n\nfoo(\n    argument1,\n    argument2\n)\n# in hydrogen each of these would throw an error\n# because the closing brace is not included\n# as it is on the same indentation level\n```\n\n```python\nif False:\n    pass\nelif False:\n    pass\nelse:\n    print('executed')\n# in hydrogen this would only execute the\n# if-statement as elif and else are not extended\n```\n\n```python\ntry:\n    throw(IndentationError)\nexcept:\n    print('some error occurred')\nfinally:\n    print('finally')\n# in hydrogen this would only raise an error but not\n# execute the except and finally blocks\n```\n\n### Extension to the Top (e.g. for decorators)\n\nIn the second configuration field, expansion towards the top is defined.\nThe preset is to extends decorators (`@`) of functions, so that the following example works when selecting either the line with the decorator or with the function definition and executing via `run` or `run-and-move-down`.\n\n```python\ndef deco(f):\n    return lambda x: f(x + 1)\n\n@deco\ndef myfunc(x):\n    return 1 / x\n\nmyfunc(0)\n```\n\nContrary to the expansion to the bottom, this _does not_ automatically include comments, or further indentation, but only the immediate match.\nThe following example thus would not work with the default settings, but could easily be enabled by adding `#` to the list:\n\n```python\n@deco\n# comment\ndef myfunc(x):\n    return 1 / x\n```\n\n### Customisation\n\nYou can extend this list by your choice.\nMake sure you check that the behaviour has no unintended circumstances;\n`hydrogen-python` logs to the console when code is extended.\nOne possibly useful addition can be to add `plt\\.` to the list, so that the following code block can be run without having to select lines independently:\n\n```python\nplt.plot()\nplt.xlabel()\nplt.ylabel()\nplt.show()\n```\n",
  "metadata": {
    "name": "hydrogen-python",
    "main": "./lib/main",
    "version": "0.0.8",
    "description": "Python language-specific extensions for hydrogen",
    "keywords": [
      "hydrogen",
      "jupyter",
      "ipython"
    ],
    "consumedServices": {
      "hydrogen.provider": {
        "versions": {
          "^1.2.0": "consumeHydrogen"
        }
      }
    },
    "repository": "https://github.com/nikitakit/hydrogen-python",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "scripts": {
      "lint": "eslint ."
    },
    "dependencies": {
      "react": "^16.2.0",
      "react-dom": "^16.2.0",
      "react-table": "^6.7.6",
      "strip-indent": "^2.0.0",
      "uuid": "^3.0.1"
    },
    "package-deps": [
      "hydrogen"
    ],
    "devDependencies": {
      "babel-eslint": "^7.1.0",
      "eslint": "^3.9.1",
      "eslint-config-airbnb-base": "^10.0.1",
      "eslint-plugin-import": "^2.2.0"
    },
    "configSchema": {
      "expandCode": {
        "title": "Extend Executable Code [experimental]",
        "type": "boolean",
        "default": "false",
        "description": "When a line is executed without selection, hydrogen only passes on code up that is indented compared to the current line. In python that unfortunately does not always work, because some control structures (e.g. else) continue on the same indentation level. Enabling this setting expands the executed code beyond what hydrogen suggests on the basis of the indentation level. The statements which trigger such extension can be defined below. *Warning:* The hydrogen tick markers are unfortunately _not_ moved to the right location."
      },
      "expandCodeList": {
        "title": "Code to Expand",
        "type": "array",
        "default": [
          "else",
          "elif",
          "except",
          "finally",
          "\\}",
          "\\]",
          "\\)"
        ],
        "description": "If the above setting is enabled, this list will be passed to a regex. Any of these items in the list need to occur on the same intentation level as the first line. You may define your own custom elements to modify the code to your preferred behaviour. In the default setting, else, elif, except, finally, as well as all closing braces are expanded on."
      },
      "prependCodeList": {
        "title": "Code to Expand Before the Execution",
        "type": "array",
        "default": [
          "@"
        ],
        "description": "If the above setting is enabled, this list will be passed to a regex. Any of these items in the list need to occur on the same intentation level as the first line. You may define your own custom elements to modify the code to your preferred behaviour. In the default setting, the @ decorator is prepended."
      }
    }
  }
}