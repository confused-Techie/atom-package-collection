{
  "name": "notify-atom",
  "repository": {
    "type": "git",
    "url": "https://github.com/fiso/notify-atom"
  },
  "downloads": 443,
  "stargazers_count": 3,
  "releases": {
    "latest": "0.5.1"
  },
  "versions": {
    "0.5.1": {
      "name": "notify-atom",
      "main": "./lib/notify-atom",
      "version": "0.5.1",
      "description": "Provides a way for scripts and applications to pass notifications into Atom",
      "keywords": [],
      "activationEvents": [
        "atom-plugin:run"
      ],
      "repository": "https://github.com/fiso/notify-atom",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "querystring": "^0.2.0",
        "websocket": "^1.0.24"
      },
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-google": "^0.7.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/notify-atom/versions/0.5.1/tarball"
      }
    },
    "0.5.0": {
      "name": "notify-atom",
      "main": "./lib/notify-atom",
      "version": "0.5.0",
      "description": "Provides a way for scripts and applications to pass notifications into Atom",
      "keywords": [],
      "activationEvents": [
        "atom-plugin:run"
      ],
      "repository": "https://github.com/fiso/notify-atom",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "querystring": "^0.2.0",
        "websocket": "^1.0.24"
      },
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-google": "^0.7.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/notify-atom/versions/0.5.0/tarball"
      }
    },
    "0.4.1": {
      "name": "notify-atom",
      "main": "./lib/notify-atom",
      "version": "0.4.1",
      "description": "Provides a way for scripts and applications to pass notifications into Atom",
      "keywords": [],
      "activationEvents": [
        "atom-plugin:run"
      ],
      "repository": "https://github.com/fiso/notify-atom",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "querystring": "^0.2.0",
        "websocket": "^1.0.24"
      },
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-google": "^0.7.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/notify-atom/versions/0.4.1/tarball"
      }
    },
    "0.4.0": {
      "name": "notify-atom",
      "main": "./lib/notify-atom",
      "version": "0.4.0",
      "description": "Provides a way for scripts and applications to pass notifications into Atom",
      "keywords": [],
      "activationEvents": [
        "atom-plugin:run"
      ],
      "repository": "https://github.com/fiso/notify-atom",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "querystring": "^0.2.0",
        "websocket": "^1.0.24"
      },
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-google": "^0.7.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/notify-atom/versions/0.4.0/tarball"
      }
    },
    "0.3.0": {
      "name": "notify-atom",
      "main": "./lib/notify-atom",
      "version": "0.3.0",
      "description": "Provides a way for scripts and applications to pass notifications into Atom",
      "keywords": [],
      "activationEvents": [
        "atom-plugin:run"
      ],
      "repository": "https://github.com/fiso/notify-atom",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "querystring": "^0.2.0",
        "websocket": "^1.0.24"
      },
      "devDependencies": {
        "eslint": "^3.18.0",
        "eslint-config-google": "^0.7.1"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/notify-atom/versions/0.3.0/tarball"
      }
    },
    "0.2.1": {
      "name": "notify-atom",
      "main": "./lib/notify-atom",
      "version": "0.2.1",
      "description": "Provides a way for scripts and applications to pass notifications into Atom",
      "keywords": [],
      "activationEvents": [
        "atom-plugin:run"
      ],
      "repository": "https://github.com/fiso/notify-atom",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "querystring": "^0.2.0",
        "websocket": "^1.0.24"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/notify-atom/versions/0.2.1/tarball"
      }
    },
    "0.2.0": {
      "name": "notify-atom",
      "main": "./lib/notify-atom",
      "version": "0.2.0",
      "description": "Provides a way for scripts and applications to pass notifications into Atom",
      "keywords": [],
      "activationEvents": [
        "atom-plugin:run"
      ],
      "repository": "https://github.com/fiso/notify-atom",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "querystring": "^0.2.0",
        "websocket": "^1.0.24"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/notify-atom/versions/0.2.0/tarball"
      }
    },
    "0.1.0": {
      "name": "notify-atom",
      "main": "./lib/notify-atom",
      "version": "0.1.0",
      "description": "Provides a way for scripts and applications to pass notifications into Atom",
      "keywords": [],
      "activationEvents": [
        "atom-plugin:run"
      ],
      "repository": "https://github.com/fiso/notify-atom",
      "license": "MIT",
      "engines": {
        "atom": ">=1.0.0 <2.0.0"
      },
      "dependencies": {
        "querystring": "^0.2.0",
        "websocket": "^1.0.24"
      },
      "dist": {
        "tarball": "https://www.atom.io/api/packages/notify-atom/versions/0.1.0/tarball"
      }
    }
  },
  "readme": "# notify-atom package\n\nProvides a way for scripts and applications to pass notifications into Atom.\n\n![Package screenshot](http://i.imgur.com/IqlSapi.gif)\n\n## Why would I want this?\n\nThe primary intended use is to give your development build system the power to\nnotify the developer that they have a syntax error somewhere. I've seen too many\ndevelopers having nervous breakdowns over dev scripts not working, when they\nhave a tiny error somewhere that's preventing the automatic builds from generating\nany working code for them.\n\n## How do I use it?\n\nThe package starts an http server, listening on port 8090 (configurable) on your machine. This server will react to POST requests in JSON or querystring format that contain the `type` and `message` parameters, where `type` is one of `success, info, warning, error, fatalerror` and message can be any string.\n\nHere's an example CURL command line you use, to verify that it's working:\n```bash\n\ncurl --data '{\"type\":\"info\",\"message\":\"It works\"}' http://localhost:8090\n```\n\nThen use any way of making an http POST request in your scripts, to make them talk back to you when they need to.\n\nHere's a longer example of a Node.js script you can pipe your stderr to:\n\n```javascript\nconst http = require(\"http\");\nconst readline = require(\"readline\");\n\nfunction postNotification (type, message, description) {\n  const body = JSON.stringify({\n    type, message, description,\n  });\n\n  const request = http.request({\n    url: \"http://localhost/\",\n    port: 8090,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Content-Length\": Buffer.byteLength(body),\n    },\n  });\n  request.end(body);\n}\n\nfunction isSassError (line) {\n  const lowLine = line.toLocaleLowerCase();\n  if (\n    lowLine.indexOf(\"invalid css\") !== -1 &&\n    lowLine.indexOf(\"\\\"formatted\\\"\") !== -1 &&\n    lowLine.indexOf(\"\\\"formatted\\\"\") < lowLine.indexOf(\"invalid css\")\n    ||\n    lowLine.indexOf(\"error\") !== -1 &&\n    lowLine.indexOf(\"\\\"formatted\\\"\") !== -1 &&\n    lowLine.indexOf(\"\\\"formatted\\\"\") < lowLine.indexOf(\"error\")\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseSassError (line) {\n  const lowLine = line.toLocaleLowerCase();\n  const lineNum = line.substring(lowLine.indexOf(\"on line \") +\n    \"on line \".length, lowLine.indexOf(\" \", lowLine.indexOf(\"on line \") +\n      \"on line \".length)).trim();\n  const sourceFile = line.substring(lowLine.indexOf(\" of \",\n    lowLine.indexOf(\"on line \")) + \" of \".length, lowLine.indexOf(\"\\\\n\",\n    lowLine.indexOf(\"on line \"))).trim();\n  return `Invalid sass syntax on line ${lineNum} of ${sourceFile}`;\n}\n\nfunction isJSError (line) {\n  const lowLine = line.toLocaleLowerCase();\n  if (\n    lowLine.indexOf(\"syntaxerror\") !== -1\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseJSError (line) {\n  return line;\n}\n\npostNotification(\"info\", \"Build system\", \"Dev runner started\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n  terminal: false,\n});\n\nrl.on(\"line\", function (line) {\n  console.error(line);\n  if (isSassError(line)) {\n    postNotification(\"error\", \"Error compiling sass\", parseSassError(line));\n  } else if (isJSError(line)) {\n    postNotification(\"error\", \"Error compiling JavaScript\",\n      parseJSError(line));\n  } else if (line.toLocaleLowerCase().indexOf(\"error\") !== -1) {\n    postNotification(\"error\", \"Unknown build error\", line);\n  }\n});\n```\n\nUsage (assuming you only care about stderr): `mydevrunner.sh 2>&1 >/dev/null | node [error-watching-script.js]`",
  "metadata": {
    "name": "notify-atom",
    "main": "./lib/notify-atom",
    "version": "0.5.1",
    "description": "Provides a way for scripts and applications to pass notifications into Atom",
    "keywords": [],
    "activationEvents": [
      "atom-plugin:run"
    ],
    "repository": "https://github.com/fiso/notify-atom",
    "license": "MIT",
    "engines": {
      "atom": ">=1.0.0 <2.0.0"
    },
    "dependencies": {
      "querystring": "^0.2.0",
      "websocket": "^1.0.24"
    },
    "devDependencies": {
      "eslint": "^3.18.0",
      "eslint-config-google": "^0.7.1"
    }
  }
}